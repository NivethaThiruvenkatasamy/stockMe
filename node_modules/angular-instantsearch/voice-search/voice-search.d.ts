import { NgZone, ElementRef, TemplateRef, OnInit } from '@angular/core';
import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import { VoiceSearchConnectorParams, VoiceSearchWidgetDescription, VoiceSearchRenderState } from 'instantsearch.js/es/connectors/voice-search/connectVoiceSearch';
import * as ɵngcc0 from '@angular/core';
export declare class NgAisVoiceSearch extends TypedBaseWidget<VoiceSearchWidgetDescription, VoiceSearchConnectorParams> implements OnInit {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    private zone;
    button: TemplateRef<ElementRef>;
    status: TemplateRef<ElementRef>;
    buttonTitle: string;
    disabledButtonTitle: string;
    searchAsYouSpeak?: VoiceSearchConnectorParams['searchAsYouSpeak'];
    state: VoiceSearchRenderState;
    templateContext: VoiceSearchRenderState['voiceListeningState'] & {
        isListening: boolean;
        isBrowserSupported: boolean;
    };
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch, zone: NgZone);
    ngOnInit(): void;
    handleClick: (event: MouseEvent) => void;
    isNotAllowedError: () => boolean;
    updateState: (state: VoiceSearchRenderState) => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisVoiceSearch, [{ optional: true; }, null, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisVoiceSearch, "ais-voice-search", never, { "buttonTitle": "buttonTitle"; "disabledButtonTitle": "disabledButtonTitle"; "searchAsYouSpeak": "searchAsYouSpeak"; }, {}, ["button", "status"], never>;
}

//# sourceMappingURL=voice-search.d.ts.map