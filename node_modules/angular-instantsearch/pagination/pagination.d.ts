import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import { PaginationConnectorParams, PaginationWidgetDescription, PaginationRenderState } from 'instantsearch.js/es/connectors/pagination/connectPagination';
import * as ɵngcc0 from '@angular/core';
export { PaginationConnectorParams, PaginationRenderState };
export declare class NgAisPagination extends TypedBaseWidget<PaginationWidgetDescription, PaginationConnectorParams> {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    showFirst: boolean;
    showLast: boolean;
    showPrevious: boolean;
    showNext: boolean;
    padding: PaginationConnectorParams['padding'];
    totalPages?: PaginationConnectorParams['totalPages'];
    state: PaginationRenderState;
    get pages(): any;
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    ngOnInit(): void;
    refine(event: MouseEvent, page: number): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisPagination, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisPagination, "ais-pagination", never, { "showFirst": "showFirst"; "showLast": "showLast"; "showPrevious": "showPrevious"; "showNext": "showNext"; "padding": "padding"; "totalPages": "totalPages"; }, {}, never, never>;
}

//# sourceMappingURL=pagination.d.ts.map