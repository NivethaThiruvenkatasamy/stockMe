import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import { QueryRulesConnectorParams, QueryRulesWidgetDescription } from 'instantsearch.js/es/connectors/query-rules/connectQueryRules';
import * as ɵngcc0 from '@angular/core';
export declare class NgAisQueryRuleContext extends TypedBaseWidget<QueryRulesWidgetDescription, QueryRulesConnectorParams> {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    trackedFilters: QueryRulesConnectorParams['trackedFilters'];
    transformRuleContexts?: QueryRulesConnectorParams['transformRuleContexts'];
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisQueryRuleContext, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisQueryRuleContext, "ais-query-rule-context", never, { "trackedFilters": "trackedFilters"; "transformRuleContexts": "transformRuleContexts"; }, {}, never, never>;
}

//# sourceMappingURL=query-rule-context.d.ts.map