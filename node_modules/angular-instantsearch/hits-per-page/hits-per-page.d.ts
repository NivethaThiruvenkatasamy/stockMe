import { HitsPerPageConnectorParams, HitsPerPageWidgetDescription, HitsPerPageRenderState } from 'instantsearch.js/es/connectors/hits-per-page/connectHitsPerPage';
import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import * as ɵngcc0 from '@angular/core';
export declare class NgAisHitsPerPage extends TypedBaseWidget<HitsPerPageWidgetDescription, HitsPerPageConnectorParams> {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    items: HitsPerPageConnectorParams['items'];
    transformItems?: HitsPerPageConnectorParams['transformItems'];
    state: HitsPerPageRenderState;
    get isHidden(): boolean;
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisHitsPerPage, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisHitsPerPage, "ais-hits-per-page", never, { "items": "items"; "transformItems": "transformItems"; }, {}, never, never>;
}

//# sourceMappingURL=hits-per-page.d.ts.map