import { EventEmitter, AfterViewInit, ElementRef } from '@angular/core';
import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import { SearchBoxConnectorParams, SearchBoxWidgetDescription, SearchBoxRenderState } from 'instantsearch.js/es/connectors/search-box/connectSearchBox';
import * as ɵngcc0 from '@angular/core';
export declare class NgAisSearchBox extends TypedBaseWidget<SearchBoxWidgetDescription, SearchBoxConnectorParams> implements AfterViewInit {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    searchBox: ElementRef;
    placeholder: string;
    submitTitle: string;
    resetTitle: string;
    searchAsYouType: boolean;
    autofocus: boolean;
    submit: EventEmitter<any>;
    reset: EventEmitter<any>;
    change: EventEmitter<any>;
    focus: EventEmitter<any>;
    blur: EventEmitter<any>;
    state: SearchBoxRenderState;
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    ngAfterViewInit(): void;
    handleChange(query: string): void;
    handleSubmit(event: Event): void;
    handleReset(event: MouseEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisSearchBox, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisSearchBox, "ais-search-box", never, { "placeholder": "placeholder"; "submitTitle": "submitTitle"; "resetTitle": "resetTitle"; "searchAsYouType": "searchAsYouType"; "autofocus": "autofocus"; }, { "submit": "submit"; "reset": "reset"; "change": "change"; "focus": "focus"; "blur": "blur"; }, never, never>;
}

//# sourceMappingURL=search-box.d.ts.map