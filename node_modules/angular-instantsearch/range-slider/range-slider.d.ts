import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import { RangeBoundaries, RangeConnectorParams, RangeWidgetDescription, RangeRenderState } from 'instantsearch.js/es/connectors/range/connectRange';
import * as ɵngcc0 from '@angular/core';
export declare class NgAisRangeSlider extends TypedBaseWidget<RangeWidgetDescription, RangeConnectorParams> {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    sliderContainer: any;
    pips: boolean;
    tooltips: boolean;
    attribute: RangeConnectorParams['attribute'];
    min?: RangeConnectorParams['min'];
    max?: RangeConnectorParams['max'];
    precision?: RangeConnectorParams['precision'];
    state: RangeRenderState;
    private slider;
    get step(): number;
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    ngOnInit(): void;
    updateState: (state: RangeRenderState, isFirstRendering: boolean) => void;
    handleChange: (values: RangeBoundaries) => void;
    formatTooltip: (value: number) => string;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisRangeSlider, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisRangeSlider, "ais-range-slider", never, { "pips": "pips"; "tooltips": "tooltips"; "attribute": "attribute"; "min": "min"; "max": "max"; "precision": "precision"; }, {}, never, never>;
}

//# sourceMappingURL=range-slider.d.ts.map