import { TemplateRef } from '@angular/core';
import { HitsConnectorParams, HitsWidgetDescription, HitsRenderState } from 'instantsearch.js/es/connectors/hits/connectHits';
import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import * as ɵngcc0 from '@angular/core';
export declare class NgAisHits extends TypedBaseWidget<HitsWidgetDescription, HitsConnectorParams> {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    template?: TemplateRef<any>;
    escapeHTML?: HitsConnectorParams['escapeHTML'];
    transformItems?: HitsConnectorParams['transformItems'];
    state: HitsRenderState;
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    ngOnInit(): void;
    updateState: (state: HitsRenderState, isFirstRendering: boolean) => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisHits, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisHits, "ais-hits", never, { "escapeHTML": "escapeHTML"; "transformItems": "transformItems"; }, {}, ["template"], never>;
}

//# sourceMappingURL=hits.d.ts.map