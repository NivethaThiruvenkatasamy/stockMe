import { KeyValueDiffers } from '@angular/core';
import { ConfigureWidgetDescription, ConfigureRenderState, ConfigureConnectorParams } from 'instantsearch.js/es/connectors/configure/connectConfigure';
import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import * as ɵngcc0 from '@angular/core';
export declare class NgAisConfigure extends TypedBaseWidget<ConfigureWidgetDescription, ConfigureConnectorParams> {
    private differs;
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    private internalSearchParameters;
    private differ;
    state: ConfigureRenderState;
    constructor(differs: KeyValueDiffers, parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    set searchParameters(values: ConfigureConnectorParams['searchParameters']);
    ngOnInit(): void;
    ngDoCheck(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisConfigure, [null, { optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisConfigure, "ais-configure", never, { "searchParameters": "searchParameters"; }, {}, never, never>;
}

//# sourceMappingURL=configure.d.ts.map