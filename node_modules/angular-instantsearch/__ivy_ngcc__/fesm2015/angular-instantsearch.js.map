{"version":3,"file":"angular-instantsearch.js","sources":["../../src/utils.ts","../../src/typed-base-widget.ts","../../src/version.ts","../../src/instantsearch/instantsearch.ts","../../src/index-widget/index-widget.ts","../../src/breadcrumb/breadcrumb.ts","../../src/breadcrumb/breadcrumb.module.ts","../../src/clear-refinements/clear-refinements.ts","../../src/clear-refinements/clear-refinements.module.ts","../../src/current-refinements/current-refinements.ts","../../src/current-refinements/current-refinements.module.ts","../../src/hierarchical-menu/hierarchical-menu.ts","../../src/hierarchical-menu/hierarchical-menu-item.ts","../../src/hierarchical-menu/hierarchical-menu.module.ts","../../src/hits-per-page/hits-per-page.ts","../../src/hits-per-page/hits-per-page.module.ts","../../src/highlight/highlight.ts","../../src/highlight/highlight.module.ts","../../src/hits/hits.ts","../../src/hits/hits.module.ts","../../src/index-widget/index-widget.module.ts","../../src/infinite-hits/infinite-hits.ts","../../src/infinite-hits/infinite-hits.module.ts","../../src/instantsearch/instantsearch.module.ts","../../src/menu/menu.ts","../../src/menu/menu.module.ts","../../src/numeric-menu/numeric-menu.ts","../../src/numeric-menu/numeric-menu.module.ts","../../src/pagination/pagination.ts","../../src/pagination/pagination.module.ts","../../src/range-slider/range-slider.ts","../../src/range-slider/range-slider.module.ts","../../src/refinement-list/refinement-list.ts","../../src/refinement-list/facets-search.ts","../../src/refinement-list/refinement-list.module.ts","../../src/search-box/search-box.ts","../../src/search-box/search-box.module.ts","../../src/sort-by/sort-by.ts","../../src/sort-by/sort-by.module.ts","../../src/rating-menu/rating-menu.ts","../../src/rating-menu/rating-menu.module.ts","../../src/stats/stats.ts","../../src/stats/stats.module.ts","../../src/toggle/toggle.ts","../../src/toggle/toggle.module.ts","../../src/range-input/range-input.ts","../../src/range-input/range-input.module.ts","../../src/panel/panel.ts","../../src/panel/panel.module.ts","../../src/configure/configure.ts","../../src/configure/configure.module.ts","../../src/configure-related-items/configure-related-items.ts","../../src/configure-related-items/configure-related-items.module.ts","../../src/query-rule-custom-data/query-rule-custom-data.ts","../../src/query-rule-custom-data/query-rule-custom-data.module.ts","../../src/query-rule-context/query-rule-context.ts","../../src/query-rule-context/query-rule-context.module.ts","../../src/voice-search/voice-search.ts","../../src/voice-search/voice-search.module.ts","../../src/create-ssr-search-client.ts","../../src/base-widget.ts","../../src/index.ts","../../src/angular-instantsearch.ts"],"names":["algoliasearch","AngularVersion"],"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","sourcesContent":["export function bem(widgetName: string) {\n  const cx = function(element?: string, subElement?: string) {\n    let cssClass = `ais-${widgetName}`;\n    if (element) {\n      cssClass += `-${element}`;\n    }\n    if (subElement) {\n      cssClass += `--${subElement}`;\n    }\n    return cssClass;\n  };\n  return cx;\n}\n\nexport function parseNumberInput(input?: number | string) {\n  return typeof input === 'string' ? parseInt(input, 10) : input;\n}\n\nexport function noop(...args: any[]): void {}\n\nexport function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\n// See https://github.com/algolia/instantsearch.js/blob/9296022fecadfbf82f15e837c215a1356eac4bc5/src/lib/utils/range.ts\nexport function range({\n  start = 0,\n  end,\n  step = 1,\n}: {\n  start?: number;\n  end: number;\n  step?: number;\n}): number[] {\n  // We can't divide by 0 so we re-assign the step to 1 if it happens.\n  const limitStep = step === 0 ? 1 : step;\n\n  // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n  const arrayLength = Math.round((end - start) / limitStep);\n\n  return [...Array(arrayLength)].map(\n    (_, current) => start + current * limitStep\n  );\n}\n\n// See https://github.com/algolia/react-instantsearch/blob/86dfe8674d566124af55a8f044051d0062786c1a/packages/react-instantsearch-core/src/core/utils.ts#L138-L142\nexport function getPropertyByPath(object: object, path: string): any {\n  return path\n    .replace(/\\[(\\d+)]/g, '.$1')\n    .split('.')\n    .reduce((current, key) => (current ? current[key] : undefined), object);\n}\n","import { Input, OnDestroy, OnInit, forwardRef } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { bem, noop } from './utils';\nimport { NgAisInstantSearch } from './instantsearch/instantsearch';\nimport { NgAisIndex } from './index-widget/index-widget';\nimport {\n  Widget,\n  WidgetDescription,\n  Connector,\n  Unmounter,\n  Renderer,\n  UnknownWidgetParams,\n} from 'instantsearch.js/es/types';\n\nexport { Widget, Connector };\n\nexport abstract class TypedBaseWidget<\n  TWidgetDescription extends WidgetDescription,\n  TConnectorParams extends UnknownWidgetParams\n> implements OnInit, OnDestroy {\n  @Input() public autoHideContainer?: boolean;\n\n  public widget?: Widget;\n  public state?: TWidgetDescription['renderState'];\n  public cx: ReturnType<typeof bem>;\n  public abstract instantSearchInstance: NgAisInstantSearch;\n  public abstract parentIndex?: NgAisIndex;\n\n  protected constructor(widgetName: string) {\n    this.cx = bem(widgetName);\n  }\n\n  get parent() {\n    if (this.parentIndex) {\n      return this.parentIndex;\n    }\n    return this.instantSearchInstance;\n  }\n\n  public createWidget(\n    connector: Connector<TWidgetDescription, TConnectorParams>,\n    options: TConnectorParams\n  ) {\n    this.widget = connector(this.updateState, noop as Unmounter)(options);\n  }\n\n  public ngOnInit() {\n    this.parent.addWidgets([this.widget]);\n  }\n\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.instantSearchInstance.platformId)) {\n      this.parent.removeWidgets([this.widget]);\n    }\n  }\n\n  public updateState: Renderer<\n    TWidgetDescription['renderState'],\n    TConnectorParams\n  > = (state, isFirstRendering) => {\n    if (isFirstRendering) {\n      Promise.resolve().then(() => {\n        this.state = state;\n      });\n    } else {\n      this.state = state;\n    }\n  };\n\n  /**\n   * Helper to generate class names for an item\n   * @param item element to generate a class name for\n   */\n  public getItemClass(item: { isRefined?: boolean }): string {\n    const className = this.cx('item');\n\n    if (item.isRefined) {\n      return `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    return className;\n  }\n}\n","export const VERSION = '4.0.1';\n","import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject,\n  PLATFORM_ID,\n  VERSION as AngularVersion,\n} from '@angular/core';\n\nimport * as algoliasearchProxy from 'algoliasearch/lite';\nimport instantsearch from 'instantsearch.js/es';\n\nimport { Widget } from '../typed-base-widget';\nimport { VERSION } from '../version';\nimport { InstantSearchOptions, InstantSearch } from 'instantsearch.js/es/types';\nexport { SearchClient, Hit } from 'instantsearch.js/es/types';\nexport {\n  PlainSearchParameters as SearchParameters,\n} from 'algoliasearch-helper';\n\n// this is needed for different webpack/typescript configurations\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\n\nexport type FacetSortByStringOptions =\n  | 'count'\n  | 'count:asc'\n  | 'count:desc'\n  | 'name'\n  | 'name:asc'\n  | 'name:desc'\n  | 'isRefined';\n\nexport type InstantSearchConfig = InstantSearchOptions;\nexport type InstantSearchInstance = InstantSearch;\n\n@Component({\n  selector: 'ais-instantsearch',\n  template: '<ng-content></ng-content>',\n})\nexport class NgAisInstantSearch implements AfterViewInit, OnInit, OnDestroy {\n  @Input() public config: InstantSearchConfig;\n  @Input() public instanceName: string = 'default';\n\n  @Output()\n  change: EventEmitter<{ results: {}; state: {} }> = new EventEmitter<{\n    results: {};\n    state: {};\n  }>();\n\n  public instantSearchInstance: InstantSearchInstance;\n\n  constructor(@Inject(PLATFORM_ID) public platformId: Object) {}\n\n  public ngOnInit() {\n    if (typeof this.config.searchClient.addAlgoliaAgent === 'function') {\n      this.config.searchClient.addAlgoliaAgent(\n        `angular (${AngularVersion.full})`\n      );\n      this.config.searchClient.addAlgoliaAgent(\n        `angular-instantsearch (${VERSION})`\n      );\n    }\n\n    this.instantSearchInstance = instantsearch(this.config);\n    this.instantSearchInstance.on('render', this.onRender);\n  }\n\n  public ngAfterViewInit() {\n    this.instantSearchInstance.start();\n  }\n\n  public ngOnDestroy() {\n    if (this.instantSearchInstance) {\n      this.instantSearchInstance.removeListener('render', this.onRender);\n      this.instantSearchInstance.dispose();\n    }\n  }\n\n  public addWidgets(widgets: Widget[]) {\n    this.instantSearchInstance.addWidgets(widgets);\n  }\n\n  public removeWidgets(widgets: Widget[]) {\n    this.instantSearchInstance.removeWidgets(widgets);\n  }\n\n  public refresh() {\n    this.instantSearchInstance.refresh();\n  }\n\n  onRender = () => {\n    this.change.emit({\n      results: this.instantSearchInstance.helper.lastResults,\n      state: this.instantSearchInstance.helper.state,\n    });\n  };\n}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  Optional,\n  SkipSelf,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Widget } from 'instantsearch.js/es/types';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport indexWidget, {\n  IndexWidget,\n  IndexWidgetParams,\n} from 'instantsearch.js/es/widgets/index/index';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'ais-index',\n  template: `<ng-content></ng-content>`,\n})\nexport class NgAisIndex implements OnInit, OnDestroy {\n  @Input() public indexName: IndexWidgetParams['indexName'];\n  @Input() public indexId?: IndexWidgetParams['indexId'];\n\n  public widget?: IndexWidget;\n\n  constructor(\n    // public API does not include SkipSelf, but the index widget should accept parents, avoiding itself.\n    @SkipSelf()\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {}\n\n  get parent() {\n    if (this.parentIndex) {\n      return this.parentIndex;\n    }\n    return this.instantSearchInstance;\n  }\n\n  createWidget() {\n    this.widget = indexWidget({\n      indexName: this.indexName,\n      indexId: this.indexId,\n    });\n  }\n\n  public addWidgets(widgets: Widget[]) {\n    this.widget.addWidgets(widgets);\n  }\n\n  public removeWidgets(widgets: Widget[]) {\n    this.widget.removeWidgets(widgets);\n  }\n\n  ngOnInit() {\n    this.createWidget();\n    this.parent.addWidgets([this.widget]);\n  }\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.instantSearchInstance.platformId)) {\n      this.parent.removeWidgets([this.widget]);\n    }\n  }\n}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\nimport { connectBreadcrumb } from 'instantsearch.js/es/connectors';\nimport {\n  BreadcrumbConnectorParams,\n  BreadcrumbWidgetDescription,\n  BreadcrumbRenderState,\n  BreadcrumbConnectorParamsItem,\n} from 'instantsearch.js/es/connectors/breadcrumb/connectBreadcrumb';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-breadcrumb',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of items\"\n          [ngClass]=\"[cx('item'), item.isLast ? cx('item', 'selected') : '']\"\n          (click)=\"handleClick($event, item)\"\n        >\n          <span\n            *ngIf=\"item.separator\"\n            [class]=\"cx('separator')\"\n            aria-hidden=\"true\"\n          >\n            >\n          </span>\n          <a\n            [class]=\"cx('link')\"\n            href=\"{{state.createURL(item.value)}}\"\n            *ngIf=\"!item.isLast\"\n            (click)=\"handleClick($event, item)\"\n          >\n            {{item.label}}\n          </a>\n\n          <span *ngIf=\"item.isLast\">\n            {{item.label}}\n          </span>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisBreadcrumb extends TypedBaseWidget<\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams\n> {\n  // instance options\n  @Input() public attributes: BreadcrumbConnectorParams['attributes'];\n  @Input() public rootPath?: BreadcrumbConnectorParams['rootPath'];\n  @Input() public separator?: BreadcrumbConnectorParams['separator'];\n  @Input() public transformItems?: BreadcrumbConnectorParams['transformItems'];\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get items() {\n    return this.state.items.map((item, idx) => ({\n      ...item,\n      separator: idx !== 0,\n      isLast: idx === this.state.items.length - 1,\n      // FIXME: get rid of this. We can use `last` local variable\n      // https://angular.io/api/common/NgForOf#local-variables\n    }));\n  }\n\n  public state: BreadcrumbRenderState = {\n    createURL: () => '#',\n    items: [],\n    refine: noop,\n    canRefine: false,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Breadcrumb');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectBreadcrumb, {\n      attributes: this.attributes,\n      rootPath: this.rootPath,\n      separator: this.separator,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(\n    event: MouseEvent,\n    item: BreadcrumbConnectorParamsItem\n  ): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (item.value) {\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisBreadcrumb } from './breadcrumb';\n\n@NgModule({\n  declarations: [NgAisBreadcrumb],\n  entryComponents: [NgAisBreadcrumb],\n  exports: [NgAisBreadcrumb],\n  imports: [CommonModule],\n})\nexport class NgAisBreadcrumbModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\nimport { connectClearRefinements } from 'instantsearch.js/es/connectors';\nimport {\n  ClearRefinementsConnectorParams,\n  ClearRefinementsWidgetDescription,\n  ClearRefinementsRenderState,\n} from 'instantsearch.js/es/connectors/clear-refinements/connectClearRefinements';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-clear-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <button\n        [class]=\"cx('button') + (!state.hasRefinements ? (' ' + cx('button', 'disabled')) : '')\"\n        (click)=\"handleClick($event)\"\n        [disabled]=\"!state.hasRefinements\"\n      >\n        {{resetLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisClearRefinements extends TypedBaseWidget<\n  ClearRefinementsWidgetDescription,\n  ClearRefinementsConnectorParams\n> {\n  // rendering options\n  @Input() public resetLabel: string = 'Clear refinements';\n\n  // instance options\n  @Input()\n  public includedAttributes: ClearRefinementsConnectorParams['includedAttributes'];\n  @Input()\n  public excludedAttributes: ClearRefinementsConnectorParams['excludedAttributes'];\n  @Input()\n  public transformItems?: ClearRefinementsConnectorParams['transformItems'];\n\n  public state: ClearRefinementsRenderState = {\n    hasRefinements: false,\n    canRefine: false,\n    refine: noop,\n    createURL: () => '#',\n  };\n\n  get isHidden(): boolean {\n    return !this.state.hasRefinements && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('ClearRefinements');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectClearRefinements, {\n      includedAttributes: this.includedAttributes,\n      excludedAttributes: this.excludedAttributes,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent) {\n    event.preventDefault();\n\n    if (this.state.hasRefinements) {\n      this.state.refine();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisClearRefinements } from './clear-refinements';\n\n@NgModule({\n  declarations: [NgAisClearRefinements],\n  entryComponents: [NgAisClearRefinements],\n  exports: [NgAisClearRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisClearRefinementsModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectCurrentRefinements } from 'instantsearch.js/es/connectors';\nimport {\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsConnectorParamsRefinement,\n  CurrentRefinementsWidgetDescription,\n  CurrentRefinementsRenderState,\n} from 'instantsearch.js/es/connectors/current-refinements/connectCurrentRefinements';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-current-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul\n        [class]=\"cx('list')\"\n        *ngFor=\"let item of state.items\"\n      >\n        <li [class]=\"cx('item')\">\n          <span [class]=\"cx('label')\">{{item.label | titlecase}}:</span>\n\n          <span\n            [class]=\"cx('category')\"\n            *ngFor=\"let refinement of item.refinements\"\n          >\n            <span [class]=\"cx('categoryLabel')\">{{refinement.label}}</span>\n            <button [class]=\"cx('delete')\" (click)=\"handleClick($event, refinement)\">✕</button>\n          </span>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisCurrentRefinements extends TypedBaseWidget<\n  CurrentRefinementsWidgetDescription,\n  CurrentRefinementsConnectorParams\n> {\n  // instance options\n  @Input()\n  public includedAttributes?: CurrentRefinementsConnectorParams['includedAttributes'];\n  @Input()\n  public excludedAttributes?: CurrentRefinementsConnectorParams['excludedAttributes'];\n  @Input()\n  public transformItems?: CurrentRefinementsConnectorParams['transformItems'];\n\n  public state: CurrentRefinementsRenderState = {\n    createURL: () => '#',\n    refine: noop,\n    items: [],\n    canRefine: false,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('CurrentRefinements');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectCurrentRefinements, {\n      includedAttributes: this.includedAttributes,\n      excludedAttributes: this.excludedAttributes,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(\n    event: MouseEvent,\n    refinement: CurrentRefinementsConnectorParamsRefinement\n  ) {\n    event.preventDefault();\n    this.state.refine(refinement);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisCurrentRefinements } from './current-refinements';\n\n@NgModule({\n  declarations: [NgAisCurrentRefinements],\n  entryComponents: [NgAisCurrentRefinements],\n  exports: [NgAisCurrentRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisCurrentRefinementsModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectHierarchicalMenu } from 'instantsearch.js/es/connectors';\nimport {\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuWidgetDescription,\n  HierarchicalMenuRenderState,\n} from 'instantsearch.js/es/connectors/hierarchical-menu/connectHierarchicalMenu';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { parseNumberInput, noop } from '../utils';\n\n@Component({\n  selector: 'ais-hierarchical-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list') + ' ' + cx('list', 'lvl0')\">\n        <ais-hierarchical-menu-item\n          *ngFor=\"let item of state.items\"\n          [item]=\"item\"\n          [createURL]=\"state.createURL\"\n          [refine]=\"state.refine\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisHierarchicalMenu extends TypedBaseWidget<\n  HierarchicalMenuWidgetDescription,\n  HierarchicalMenuConnectorParams\n> {\n  @Input() public attributes: HierarchicalMenuConnectorParams['attributes'];\n  @Input() public separator?: HierarchicalMenuConnectorParams['separator'];\n  @Input() public rootPath?: HierarchicalMenuConnectorParams['rootPath'];\n  @Input()\n  public showParentLevel?: HierarchicalMenuConnectorParams['showParentLevel'];\n  @Input() public limit?: HierarchicalMenuConnectorParams['limit'];\n  @Input() public sortBy?: HierarchicalMenuConnectorParams['sortBy'];\n\n  @Input()\n  public transformItems?: HierarchicalMenuConnectorParams['transformItems'];\n\n  public state: HierarchicalMenuRenderState = {\n    createURL: () => '#',\n    items: [],\n    refine: noop,\n    canRefine: false,\n    isShowingMore: false,\n    toggleShowMore: noop,\n    canToggleShowMore: false,\n    sendEvent: noop,\n  };\n\n  get isHidden(): boolean {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('HierarchicalMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHierarchicalMenu, {\n      limit: parseNumberInput(this.limit),\n      attributes: this.attributes,\n      rootPath: this.rootPath,\n      separator: this.separator,\n      showParentLevel: this.showParentLevel,\n      sortBy: this.sortBy,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\nimport {\n  HierarchicalMenuRenderState,\n  HierarchicalMenuItem,\n} from 'instantsearch.js/es/connectors/hierarchical-menu/connectHierarchicalMenu';\n\n@Component({\n  selector: 'ais-hierarchical-menu-item',\n  template: `\n    <li\n      [class]=\"getItemClass(item)\"\n      (click)=\"handleClick($event, item)\"\n    >\n      <a\n        [class]=\"cx('link')\"\n        href=\"{{createURL(item.value)}}\"\n        (click)=\"handleClick($event, item)\"\n      >\n        <span [class]=\"cx('label')\">{{item.label}}</span>\n        <span [class]=\"cx('count')\">{{item.count}}</span>\n      </a>\n\n      <ul\n        [class]=\"getListClass()\"\n        *ngIf=\"item.isRefined && isArray(item.data) && item.data.length > 0\"\n      >\n        <ais-hierarchical-menu-item\n          *ngFor=\"let child of item.data\"\n          [item]=\"child\"\n          [createURL]=\"createURL\"\n          [refine]=\"refine\"\n          [lvl]=\"lvl + 1\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </li>\n  `,\n})\nexport class NgAisHierarchicalMenuItem {\n  @Input() public lvl: number = 1;\n  @Input() public refine: HierarchicalMenuRenderState['refine'];\n  @Input() public createURL: HierarchicalMenuRenderState['createURL'];\n  @Input() public item: HierarchicalMenuItem;\n\n  public cx = bem('HierarchicalMenu');\n\n  public getItemClass(item): string {\n    let className = this.cx('item');\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    if (this.isArray(item.data) && item.data.length > 0) {\n      className = `${className} ${this.cx('item', 'parent')}`;\n    }\n\n    return className;\n  }\n\n  public getListClass(): string {\n    return `${this.cx('list')} ${this.cx('list', 'child')} ${this.cx(\n      'list',\n      `lvl${this.lvl}`\n    )}`;\n  }\n\n  public isArray(potentialArray: any): boolean {\n    return Array.isArray(potentialArray);\n  }\n\n  public handleClick(event: MouseEvent, item: HierarchicalMenuItem): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHierarchicalMenu } from './hierarchical-menu';\nimport { NgAisHierarchicalMenuItem } from './hierarchical-menu-item';\n\n@NgModule({\n  declarations: [NgAisHierarchicalMenu, NgAisHierarchicalMenuItem],\n  entryComponents: [NgAisHierarchicalMenu],\n  exports: [NgAisHierarchicalMenu],\n  imports: [CommonModule],\n})\nexport class NgAisHierarchicalMenuModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectHitsPerPage } from 'instantsearch.js/es/connectors';\nimport {\n  HitsPerPageConnectorParams,\n  HitsPerPageWidgetDescription,\n  HitsPerPageRenderState,\n} from 'instantsearch.js/es/connectors/hits-per-page/connectHitsPerPage';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-hits-per-page',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.items\"\n          [value]=\"item.value\"\n          [selected]=\"item.isRefined\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisHitsPerPage extends TypedBaseWidget<\n  HitsPerPageWidgetDescription,\n  HitsPerPageConnectorParams\n> {\n  @Input() public items: HitsPerPageConnectorParams['items'];\n  @Input() public transformItems?: HitsPerPageConnectorParams['transformItems'];\n\n  public state: HitsPerPageRenderState = {\n    items: [],\n    refine: noop,\n    hasNoResults: true, // TODO: disable <select> when true\n  };\n\n  get isHidden(): boolean {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('HitsPerPage');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHitsPerPage, {\n      items: this.items,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHitsPerPage } from './hits-per-page';\n\n@NgModule({\n  declarations: [NgAisHitsPerPage],\n  entryComponents: [NgAisHitsPerPage],\n  exports: [NgAisHitsPerPage],\n  imports: [CommonModule],\n})\nexport class NgAisHitsPerPageModule {}\n","import { Component, Input } from '@angular/core';\nimport { bem, getPropertyByPath } from '../utils';\n\n@Component({\n  selector: 'ais-highlight',\n  template: `<span [class]=\"cx()\" [innerHtml]=\"content\"></span>`,\n})\nexport class NgAisHighlight {\n  @Input() attribute: string;\n  @Input() hit: { _highlightResult?: {}; label?: string; highlighted?: string };\n  @Input() tagName: string = 'em';\n\n  cx = bem('Highlight');\n\n  get content() {\n    if (this.attribute === 'highlighted') {\n      return this.hit.highlighted\n        ? this.replaceWithTagName(this.hit.highlighted)\n        : this.hit.label;\n    }\n\n    if (this.hit.hasOwnProperty('_highlightResult')) {\n      const attributeHighlighted = getPropertyByPath(\n        this.hit._highlightResult,\n        this.attribute\n      );\n\n      // check that the attributeHighlighted is a string\n      if (\n        attributeHighlighted !== undefined &&\n        typeof attributeHighlighted.value === 'string'\n      ) {\n        return this.replaceWithTagName(attributeHighlighted.value);\n      }\n    }\n\n    const fallback = getPropertyByPath(this.hit, this.attribute);\n    if (!fallback) {\n      console.warn(\n        `Could not find attribute [${\n          this.attribute\n        }] into hit object, will display an empty string.`\n      );\n\n      return '';\n    }\n\n    return fallback;\n  }\n\n  replaceWithTagName(value: string) {\n    return value\n      .replace(\n        new RegExp('<em>', 'g'),\n        `<${this.tagName} class=\"${this.cx('highlighted')}\">`\n      )\n      .replace(new RegExp('</em>', 'g'), `</${this.tagName}>`);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlight } from './highlight';\n\n@NgModule({\n  declarations: [NgAisHighlight],\n  entryComponents: [NgAisHighlight],\n  exports: [NgAisHighlight],\n  imports: [CommonModule],\n})\nexport class NgAisHighlightModule {}\n","import {\n  Inject,\n  Input,\n  Component,\n  ContentChild,\n  TemplateRef,\n  forwardRef,\n  Optional,\n} from '@angular/core';\n\nimport { connectHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport {\n  HitsConnectorParams,\n  HitsWidgetDescription,\n  HitsRenderState,\n} from 'instantsearch.js/es/connectors/hits/connectHits';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\n\n@Component({\n  selector: 'ais-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisHits extends TypedBaseWidget<\n  HitsWidgetDescription,\n  HitsConnectorParams\n> {\n  @ContentChild(TemplateRef, { static: false })\n  public template?: TemplateRef<any>;\n\n  @Input() public escapeHTML?: HitsConnectorParams['escapeHTML'];\n  @Input() public transformItems?: HitsConnectorParams['transformItems'];\n\n  public state: HitsRenderState = {\n    hits: [],\n    results: undefined,\n    bindEvent: undefined,\n    sendEvent: undefined,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Hits');\n  }\n\n  ngOnInit() {\n    this.createWidget(connectHitsWithInsights, {\n      escapeHTML: this.escapeHTML,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  public updateState = (state: HitsRenderState, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n    this.state = state;\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisHits } from './hits';\n\n@NgModule({\n  declarations: [NgAisHits],\n  entryComponents: [NgAisHits],\n  exports: [NgAisHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisHitsModule {}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NgAisIndex } from './index-widget';\n\n@NgModule({\n  declarations: [NgAisIndex],\n  entryComponents: [NgAisIndex],\n  exports: [NgAisIndex],\n  imports: [CommonModule],\n})\nexport class NgAisIndexModule {\n  public static forRoot(): ModuleWithProviders<NgAisIndexModule> {\n    return {\n      ngModule: NgAisIndexModule,\n      providers: [],\n    };\n  }\n}\n","import {\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef,\n  Inject,\n  forwardRef,\n  Optional,\n} from '@angular/core';\nimport { connectInfiniteHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport {\n  InfiniteHitsConnectorParams,\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsRenderState,\n} from 'instantsearch.js/es/connectors/infinite-hits/connectInfiniteHits';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-infinite-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <button\n        [ngClass]=\"[cx('loadPrevious'), this.state.isFirstPage ? cx('loadPrevious', 'disabled') : '']\"\n        (click)=\"showPreviousHandler($event)\"\n        [disabled]=\"state.isFirstPage\"\n        *ngIf=\"showPrevious && !template\"\n      >\n        {{showPreviousLabel}}\n      </button>\n\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n\n      <button\n        [ngClass]=\"[cx('loadMore'), this.state.isLastPage ? cx('loadMore', 'disabled') : '']\"\n        (click)=\"showMoreHandler($event)\"\n        [disabled]=\"state.isLastPage\"\n        *ngIf=\"!template\"\n      >\n        {{showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisInfiniteHits extends TypedBaseWidget<\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams\n> {\n  @ContentChild(TemplateRef, { static: false })\n  public template?: any;\n\n  // rendering options\n  @Input() public escapeHTML: InfiniteHitsConnectorParams['escapeHTML'];\n  @Input()\n  public showPrevious: InfiniteHitsConnectorParams['showPrevious'] = false;\n  @Input() public showPreviousLabel: string = 'Show previous results';\n  @Input() public showMoreLabel: string = 'Show more results';\n  @Input()\n  public transformItems?: InfiniteHitsConnectorParams['transformItems'];\n\n  public state: InfiniteHitsRenderState = {\n    hits: [],\n    results: undefined,\n    currentPageHits: [],\n    isFirstPage: false,\n    isLastPage: false,\n    showMore: noop,\n    showPrevious: noop,\n    sendEvent: noop,\n    bindEvent: () => '',\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('InfiniteHits');\n  }\n\n  ngOnInit() {\n    this.createWidget(connectInfiniteHitsWithInsights, {\n      escapeHTML: this.escapeHTML,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  public showMoreHandler(event: MouseEvent) {\n    event.preventDefault();\n    this.state.showMore();\n  }\n\n  public showPreviousHandler(event: MouseEvent) {\n    event.preventDefault();\n    this.state.showPrevious();\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n    this.state = state;\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisInfiniteHits } from './infinite-hits';\n\n@NgModule({\n  declarations: [NgAisInfiniteHits],\n  entryComponents: [NgAisInfiniteHits],\n  exports: [NgAisInfiniteHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisInfiniteHitsModule {}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NgAisInstantSearch } from './instantsearch';\n\n@NgModule({\n  declarations: [NgAisInstantSearch],\n  entryComponents: [NgAisInstantSearch],\n  exports: [NgAisInstantSearch],\n  imports: [CommonModule],\n})\nexport class NgAisInstantSearchModule {\n  public static forRoot(): ModuleWithProviders<NgAisInstantSearchModule> {\n    return {\n      ngModule: NgAisInstantSearchModule,\n      providers: [],\n    };\n  }\n}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  MenuConnectorParams,\n  MenuWidgetDescription,\n  MenuRenderState,\n  MenuItem,\n} from 'instantsearch.js/es/connectors/menu/connectMenu';\n\n@Component({\n  selector: 'ais-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <span [class]=\"cx('label')\">{{item.label}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        *ngIf=\"showMore\"\n        (click)=\"state.toggleShowMore()\"\n        [class]=\"showMoreClass\"\n        [disabled]=\"!state.canToggleShowMore\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisMenu extends TypedBaseWidget<\n  MenuWidgetDescription,\n  MenuConnectorParams\n> {\n  // rendering options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n\n  // instance options\n  @Input() public attribute: MenuConnectorParams['attribute'];\n  @Input() public showMore?: MenuConnectorParams['showMore'];\n  @Input() public limit?: MenuConnectorParams['limit'];\n  @Input() public showMoreLimit?: MenuConnectorParams['showMoreLimit'];\n  @Input() public sortBy?: MenuConnectorParams['sortBy'];\n  @Input() public transformItems?: MenuConnectorParams['transformItems'];\n\n  public state: MenuRenderState = {\n    items: [],\n    refine: noop,\n    createURL: () => '#',\n    canRefine: false,\n    isShowingMore: false,\n    canToggleShowMore: false,\n    toggleShowMore: noop,\n    sendEvent: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get showMoreClass() {\n    let className = this.cx('showMore');\n\n    if (!this.state.canToggleShowMore) {\n      className = `${className} ${this.cx('showMore', 'disabled')}`;\n    }\n\n    return className;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Menu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectMenu, {\n      attribute: this.attribute,\n      showMore: this.showMore,\n      limit: this.limit,\n      showMoreLimit: this.showMoreLimit,\n      sortBy: this.sortBy,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  handleClick(event: MouseEvent, value: MenuItem['value']) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisMenu } from './menu';\n\n@NgModule({\n  declarations: [NgAisMenu],\n  entryComponents: [NgAisMenu],\n  exports: [NgAisMenu],\n  imports: [CommonModule],\n})\nexport class NgAisMenuModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectNumericMenu } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  NumericMenuConnectorParams,\n  NumericMenuWidgetDescription,\n  NumericMenuRenderState,\n} from 'instantsearch.js/es/connectors/numeric-menu/connectNumericMenu';\n\n@Component({\n  selector: 'ais-numeric-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('radio')\"\n              type=\"radio\"\n              name=\"NumericMenu\"\n              [checked]=\"item.isRefined\"\n              (change)=\"refine($event, item)\"\n            />\n            <span [class]=\"cx('labelText')\">{{item.label}}</span>\n          </label>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisNumericMenu extends TypedBaseWidget<\n  NumericMenuWidgetDescription,\n  NumericMenuConnectorParams\n> {\n  @Input() public attribute: NumericMenuConnectorParams['attribute'];\n  @Input() public items: NumericMenuConnectorParams['items'];\n  @Input() public transformItems?: NumericMenuConnectorParams['transformItems'];\n\n  public state: NumericMenuRenderState = {\n    items: [],\n    refine: noop,\n    createURL: () => '#',\n    hasNoResults: true,\n    sendEvent: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('NumericMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectNumericMenu, {\n      attribute: this.attribute,\n      items: this.items,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: Event, item: { value: string }) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisNumericMenu } from './numeric-menu';\n\n@NgModule({\n  declarations: [NgAisNumericMenu],\n  entryComponents: [NgAisNumericMenu],\n  exports: [NgAisNumericMenu],\n  imports: [CommonModule],\n})\nexport class NgAisNumericMenuModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\nimport { connectPagination } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { parseNumberInput, noop, range } from '../utils';\nimport {\n  PaginationConnectorParams,\n  PaginationWidgetDescription,\n  PaginationRenderState,\n} from 'instantsearch.js/es/connectors/pagination/connectPagination';\n\nexport { PaginationConnectorParams, PaginationRenderState };\n\n@Component({\n  selector: 'ais-pagination',\n  template: `\n    <div [ngClass]=\"[cx(), state.nbPages <= 1 ? cx('', 'noRefinement') : '']\">\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngIf=\"showFirst\"\n          (click)=\"refine($event, 0)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'firstPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(0)\"\n            [class]=\"cx('link')\"\n          >\n            ‹‹\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showPrevious\"\n          (click)=\"refine($event, state.currentRefinement - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'previousPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement - 1)\"\n            [class]=\"cx('link')\"\n          >\n            ‹\n          </a>\n        </li>\n\n        <li\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'page') +\n            (state.currentRefinement === page ? ' ' + cx('item', 'selected') : '')\n          \"\n          *ngFor=\"let page of pages\"\n          (click)=\"refine($event, page)\"\n        >\n          <a\n            [class]=\"cx('link')\"\n            [href]=\"state.createURL(page)\"\n          >\n            {{page + 1}}\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showNext\"\n          (click)=\"refine($event, state.currentRefinement + 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'nextPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement + 1)\"\n            [class]=\"cx('link')\"\n          >\n            ›\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showLast\"\n          (click)=\"refine($event, state.nbPages - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'lastPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.nbPages - 1)\"\n            [class]=\"cx('link')\"\n          >\n            ››\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisPagination extends TypedBaseWidget<\n  PaginationWidgetDescription,\n  PaginationConnectorParams\n> {\n  // rendering options\n  @Input() public showFirst: boolean = true;\n  @Input() public showLast: boolean = true;\n  @Input() public showPrevious: boolean = true;\n  @Input() public showNext: boolean = true;\n\n  // instance options\n  @Input() public padding: PaginationConnectorParams['padding'] = 3;\n  @Input() public totalPages?: PaginationConnectorParams['totalPages'];\n  // TODO: check if this works, padding and totalPages are most likely strings when passed to the template\n\n  public state: PaginationRenderState = {\n    createURL: () => '#',\n    currentRefinement: 0,\n    nbHits: 0,\n    nbPages: 0,\n    refine: noop,\n    pages: [],\n    canRefine: false,\n    isFirstPage: false,\n    isLastPage: false,\n  };\n\n  get pages() {\n    const { nbPages, currentRefinement } = this.state;\n\n    const pagesArray = Array.apply(null, { length: nbPages }).map(\n      Number.call,\n      Number\n    );\n\n    const pagesPadding =\n      typeof this.padding === 'string'\n        ? parseInt(this.padding, 10)\n        : this.padding;\n\n    if (pagesPadding && pagesPadding > 0) {\n      // should not display pages that does not exists\n      if (nbPages < pagesPadding * 2 + 1) {\n        return pagesArray;\n      }\n\n      const minDelta = currentRefinement - pagesPadding - 1;\n      const maxDelta = currentRefinement + pagesPadding + 1;\n\n      if (minDelta < 0) {\n        return range({\n          start: 0,\n          end: currentRefinement + pagesPadding + Math.abs(minDelta),\n        });\n      }\n\n      if (maxDelta > nbPages) {\n        return range({\n          start: currentRefinement - pagesPadding - (maxDelta - nbPages),\n          end: nbPages,\n        });\n      }\n\n      return range({\n        start: currentRefinement - pagesPadding,\n        end: currentRefinement + pagesPadding + 1,\n      });\n    }\n\n    return pagesArray;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Pagination');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectPagination, {\n      totalPages: parseNumberInput(this.totalPages),\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, page: number) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (\n      page < 0 ||\n      page === this.state.currentRefinement ||\n      page >= this.state.nbPages\n    ) {\n      return;\n    }\n\n    this.state.refine(page);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPagination } from './pagination';\n\n@NgModule({\n  declarations: [NgAisPagination],\n  entryComponents: [NgAisPagination],\n  exports: [NgAisPagination],\n  imports: [CommonModule],\n})\nexport class NgAisPaginationModule {}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  Inject,\n  forwardRef,\n  Optional,\n} from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport * as noUiSlider from 'nouislider';\n\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { parseNumberInput, noop } from '../utils';\nimport {\n  RangeBoundaries,\n  RangeConnectorParams,\n  RangeWidgetDescription,\n  RangeRenderState,\n} from 'instantsearch.js/es/connectors/range/connectRange';\n\n@Component({\n  selector: 'ais-range-slider',\n  template: `\n    <div [class]=\"cx()\">\n      <div [class]=\"cx('body')\">\n        <div #sliderContainer></div>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisRangeSlider extends TypedBaseWidget<\n  RangeWidgetDescription,\n  RangeConnectorParams\n> {\n  @ViewChild('sliderContainer', { static: false })\n  public sliderContainer: any;\n\n  // rendering options\n  @Input() public pips: boolean = true;\n  @Input() public tooltips: boolean = true;\n\n  // instance options\n  @Input() public attribute: RangeConnectorParams['attribute'];\n  @Input() public min?: RangeConnectorParams['min'];\n  @Input() public max?: RangeConnectorParams['max'];\n  @Input() public precision?: RangeConnectorParams['precision'];\n\n  public state: RangeRenderState = {\n    canRefine: false,\n    format: {\n      from: () => '',\n      to: () => '',\n    },\n    range: { min: 0, max: 1 },\n    refine: noop,\n    start: [0, 1],\n    sendEvent: noop,\n  };\n\n  private slider: any;\n\n  get step() {\n    // compute step from the precision value\n    const precision = parseNumberInput(this.precision) || 2;\n    return 1 / Math.pow(10, precision);\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('RangeSlider');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attribute: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision),\n    });\n\n    super.ngOnInit();\n  }\n\n  public updateState = (state: RangeRenderState, isFirstRendering: boolean) => {\n    if (isFirstRendering) {\n      // create slider\n      const config = {\n        animate: false,\n        behaviour: 'snap',\n        connect: true,\n        range: { min: 0, max: 1 },\n        start: [0, 1],\n        step: this.step,\n        tooltips: this.tooltips && [\n          { to: this.formatTooltip },\n          { to: this.formatTooltip },\n        ],\n      };\n\n      // tslint:disable-next-line: no-boolean-literal-compare (pips is @Input, so could be not a boolean)\n      if (this.pips === true || typeof this.pips === 'undefined') {\n        Object.assign(config, {\n          pips: {\n            density: 3,\n            mode: 'positions',\n            stepped: true,\n            values: [0, 50, 100],\n          },\n        });\n      } else if (this.pips !== undefined) {\n        Object.assign(config, { pips: this.pips });\n      }\n\n      this.slider = noUiSlider.create(\n        this.sliderContainer.nativeElement,\n        config\n      );\n\n      // register listen events\n      this.sliderContainer.nativeElement.noUiSlider.on(\n        'change',\n        this.handleChange\n      );\n    }\n\n    // update component inner state\n    this.state = state;\n\n    // update the slider state\n    const {\n      range: { min, max },\n      start,\n    } = state;\n\n    const disabled = min === max;\n    const range = disabled ? { min, max: max + 0.0001 } : { min, max };\n\n    // TODO: test this as we're nolonger passing disable\n    // it seems the API has changed: slider.setAttribute('disabled', true) / slider.removeAttribute('disabled');\n    // see: https://refreshless.com/nouislider/more/#section-disable\n    this.slider.updateOptions({ range, start });\n  };\n\n  public handleChange = (values: RangeBoundaries) => {\n    this.state.refine(values);\n  };\n\n  public formatTooltip = (value: number) => {\n    return value.toFixed(parseNumberInput(this.precision));\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeSlider } from './range-slider';\n\n@NgModule({\n  declarations: [NgAisRangeSlider],\n  entryComponents: [NgAisRangeSlider],\n  exports: [NgAisRangeSlider],\n  imports: [CommonModule],\n})\nexport class NgAisRangeSliderModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\nimport { connectRefinementList } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop, parseNumberInput } from '../utils';\nimport {\n  RefinementListConnectorParams,\n  RefinementListWidgetDescription,\n  RefinementListRenderState,\n  RefinementListItem,\n} from 'instantsearch.js/es/connectors/refinement-list/connectRefinementList';\n\n@Component({\n  selector: 'ais-refinement-list',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <div\n        *ngIf=\"searchable\"\n        [class]=\"cx('searchBox')\"\n      >\n        <ais-facets-search\n          [search]=\"state.searchForItems\"\n          [searchPlaceholder]=\"searchPlaceholder\"\n        >\n        </ais-facets-search>\n      </div>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n          (click)=\"refine($event, item)\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('checkbox')\"\n              type=\"checkbox\"\n              value=\"{{item.value}}\"\n              [checked]=\"item.isRefined\"\n            />\n            <span [class]=\"cx('labelText')\">\n              <ais-highlight attribute=\"highlighted\" [hit]=\"item\"></ais-highlight>\n            </span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </label>\n        </li>\n      </ul>\n\n      <button\n        [class]=\"cx('showMore')\"\n        *ngIf=\"showMore\"\n        (click)=\"state.toggleShowMore()\"\n        [disabled]=\"!state.canToggleShowMore\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisRefinementList extends TypedBaseWidget<\n  RefinementListWidgetDescription,\n  RefinementListConnectorParams\n> {\n  // rendering options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n  @Input() public searchable?: boolean;\n  @Input() public searchPlaceholder: string = 'Search here...';\n\n  // instance options\n  @Input() public attribute: RefinementListConnectorParams['attribute'];\n  @Input() public operator: RefinementListConnectorParams['operator'];\n  @Input() public limit: RefinementListConnectorParams['limit'];\n  @Input() public showMore: RefinementListConnectorParams['showMore'];\n  @Input() public showMoreLimit: RefinementListConnectorParams['showMoreLimit'];\n  @Input() public sortBy: RefinementListConnectorParams['sortBy'];\n  @Input()\n  public transformItems?: RefinementListConnectorParams['transformItems'];\n\n  public state: RefinementListRenderState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: () => '',\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop,\n    searchForItems: noop,\n    isFromSearch: false,\n    hasExhaustiveItems: false,\n    sendEvent: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('RefinementList');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRefinementList, {\n      showMore: this.showMore,\n      limit: parseNumberInput(this.limit),\n      showMoreLimit: parseNumberInput(this.showMoreLimit),\n      attribute: this.attribute,\n      operator: this.operator,\n      sortBy: this.sortBy,\n      escapeFacetValues: true,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, item: RefinementListItem) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.state.canRefine) {\n      // update UI directly, it will update the checkbox state\n      item.isRefined = !item.isRefined;\n\n      // refine through Algolia API\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\n@Component({\n  selector: 'ais-facets-search',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{searchPlaceholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"searchQuery\"\n          (input)=\"handleChange($event.target.value)\"\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          title=\"Submit the search query.\"\n          type=\"submit\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"Clear the search query.\"\n          hidden\n        >\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisFacetsSearch {\n  @Input() public searchPlaceholder: string;\n  @Input() public search: Function;\n\n  public cx = bem('SearchBox');\n\n  public searchQuery = '';\n\n  public handleChange(value: string) {\n    this.searchQuery = value;\n    this.search(value);\n  }\n\n  public handleSubmit(event) {\n    event.preventDefault();\n    this.search(this.searchQuery);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisRefinementList } from './refinement-list';\nimport { NgAisFacetsSearch } from './facets-search';\n\n@NgModule({\n  declarations: [NgAisRefinementList, NgAisFacetsSearch],\n  entryComponents: [NgAisRefinementList],\n  exports: [NgAisRefinementList],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisRefinementListModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Inject,\n  forwardRef,\n  ViewChild,\n  AfterViewInit,\n  ElementRef,\n  Optional,\n} from '@angular/core';\n\nimport { connectSearchBox } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  SearchBoxConnectorParams,\n  SearchBoxWidgetDescription,\n  SearchBoxRenderState,\n} from 'instantsearch.js/es/connectors/search-box/connectSearchBox';\n\n@Component({\n  selector: 'ais-search-box',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        novalidate\n        (submit)=\"handleSubmit($event)\"\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{placeholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"state.query\"\n          (input)=\"handleChange($event.target.value)\"\n          (focus)=\"focus.emit($event)\"\n          (blur)=\"blur.emit($event)\"\n          #searchBox\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          type=\"submit\"\n          title=\"{{submitTitle}}\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"40\"\n            height=\"40\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"{{resetTitle}}\"\n          (click)=\"handleReset($event)\"\n          [hidden]=\"!state.query || (state.query && !state.query.trim())\">\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"20\"\n            height=\"20\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisSearchBox\n  extends TypedBaseWidget<SearchBoxWidgetDescription, SearchBoxConnectorParams>\n  implements AfterViewInit {\n  @ViewChild('searchBox', { static: false })\n  searchBox: ElementRef;\n  @Input() public placeholder: string = 'Search';\n  @Input() public submitTitle: string = 'Submit';\n  @Input() public resetTitle: string = 'Reset';\n  @Input() public searchAsYouType: boolean = true;\n  @Input() public autofocus: boolean = false;\n\n  // Output events\n  // form\n  @Output() submit = new EventEmitter();\n  @Output() reset = new EventEmitter();\n\n  // input\n  @Output() change = new EventEmitter();\n  @Output() focus = new EventEmitter();\n  @Output() blur = new EventEmitter();\n\n  public state: SearchBoxRenderState = {\n    query: '',\n    refine: noop,\n    clear: noop,\n    isSearchStalled: false,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('SearchBox');\n    this.createWidget(connectSearchBox, {});\n  }\n\n  public ngAfterViewInit() {\n    if (this.autofocus) {\n      this.searchBox.nativeElement.focus();\n    }\n  }\n\n  public handleChange(query: string) {\n    this.change.emit(query);\n    if (this.searchAsYouType) {\n      this.state.refine(query);\n    }\n  }\n\n  public handleSubmit(event: Event) {\n    // send submit event to parent component\n    this.submit.emit(event);\n\n    event.preventDefault();\n\n    if (!this.searchAsYouType) {\n      this.state.refine(this.searchBox.nativeElement.value);\n    }\n  }\n\n  public handleReset(event: MouseEvent) {\n    // send reset event to parent component\n    this.reset.emit(event);\n\n    // reset search\n    this.state.refine('');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSearchBox } from './search-box';\n\n@NgModule({\n  declarations: [NgAisSearchBox],\n  entryComponents: [NgAisSearchBox],\n  exports: [NgAisSearchBox],\n  imports: [CommonModule],\n})\nexport class NgAisSearchBoxModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectSortBy } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  SortByConnector,\n  SortByConnectorParams,\n  SortByWidgetDescription,\n  SortByRenderState,\n  SortByItem,\n} from 'instantsearch.js/es/connectors/sort-by/connectSortBy';\n\nexport {\n  SortByConnector,\n  SortByConnectorParams,\n  SortByWidgetDescription,\n  SortByRenderState,\n  SortByItem,\n};\n\n@Component({\n  selector: 'ais-sort-by',\n  template: `\n    <div [class]=\"cx()\">\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.options\"\n          [value]=\"item.value\"\n          [selected]=\"item.value === state.currentRefinement\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisSortBy extends TypedBaseWidget<\n  SortByWidgetDescription,\n  SortByConnectorParams\n> {\n  @Input() public items: SortByItem[];\n  @Input()\n  public transformItems?: <U extends SortByItem>(items: SortByItem[]) => U[];\n\n  public state: SortByRenderState = {\n    currentRefinement: null,\n    options: [],\n    refine: noop,\n    hasNoResults: false,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('SortBy');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectSortBy, {\n      items: this.items,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSortBy } from './sort-by';\n\n@NgModule({\n  declarations: [NgAisSortBy],\n  entryComponents: [NgAisSortBy],\n  exports: [NgAisSortBy],\n  imports: [CommonModule],\n})\nexport class NgAisSortByModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectRatingMenu } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop, parseNumberInput } from '../utils';\nimport {\n  RatingMenuConnectorParams,\n  RatingMenuWidgetDescription,\n  RatingMenuRenderState,\n} from 'instantsearch.js/es/connectors/rating-menu/connectRatingMenu';\n\n@Component({\n  selector: 'ais-rating-menu',\n  template: `\n    <div\n      [ngClass]=\"[\n        cx(),\n        state.items.length === 0 ? cx('', 'noRefinement') : ''\n      ]\"\n      *ngIf=\"!isHidden\"\n    >\n      <svg style=\"display:none;\">\n        <symbol\n          id=\"ais-StarRating-starSymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\"/>\n        </symbol>\n        <symbol\n          id=\"ais-StarRating-starEmptySymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\"/>\n        </symbol>\n      </svg>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of state.items\"\n          [class]=\"getItemClass(item)\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <svg\n              width=\"24\"\n              height=\"24\"\n              *ngFor=\"let star of item.stars\"\n              [ngClass]=\"cx('starIcon') + ' ' + (star ? cx('starIcon', 'full') : cx('starIcon', 'empty'))\"\n              aria-hidden=\"true\"\n            >\n              <use\n                *ngIf=\"star\"\n                xlink:href=\"#ais-StarRating-starSymbol\"\n              >\n              </use>\n\n              <use\n                *ngIf=\"!star\"\n                xlink:href=\"#ais-StarRating-starEmptySymbol\"\n              >\n              </use>\n            </svg>\n\n            <span [class]=\"cx('label')\" aria-hidden=\"true\">{{andUpLabel}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisRatingMenu extends TypedBaseWidget<\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams\n> {\n  // rendering options\n  @Input() public andUpLabel: string = '& Up';\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public max?: number;\n\n  public state: RatingMenuRenderState = {\n    createURL: () => '#',\n    hasNoResults: false,\n    items: [],\n    refine: noop,\n    canRefine: false,\n    sendEvent: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('RatingMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRatingMenu, {\n      attribute: this.attribute,\n      max: parseNumberInput(this.max),\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRatingMenu } from './rating-menu';\n\n@NgModule({\n  declarations: [NgAisRatingMenu],\n  entryComponents: [NgAisRatingMenu],\n  exports: [NgAisRatingMenu],\n  imports: [CommonModule],\n})\nexport class NgAisRatingMenuModule {}\n","import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  forwardRef,\n  Optional,\n} from '@angular/core';\n\nimport { connectStats } from 'instantsearch.js/es/connectors';\n\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport {\n  StatsConnectorParams,\n  StatsWidgetDescription,\n  StatsRenderState,\n} from 'instantsearch.js/es/connectors/stats/connectStats';\n\n@Component({\n  selector: 'ais-stats',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: templateContext\">\n      </ng-container>\n\n      <span *ngIf=\"!template\" [class]=\"cx('text')\">\n        {{state.nbHits}} results found in {{state.processingTimeMS}}ms.\n      </span>\n    </div>\n  `,\n})\nexport class NgAisStats extends TypedBaseWidget<\n  StatsWidgetDescription,\n  StatsConnectorParams\n> {\n  @ContentChild(TemplateRef, { static: false })\n  public template: any;\n\n  public state: StatsRenderState = {\n    nbHits: 0,\n    nbPages: 0,\n    page: 0,\n    processingTimeMS: 0,\n    query: '',\n    areHitsSorted: false,\n  };\n\n  get templateContext() {\n    return { state: this.state };\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Stats');\n    this.createWidget(connectStats, {});\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisStats } from './stats';\n\n@NgModule({\n  declarations: [NgAisStats],\n  entryComponents: [NgAisStats],\n  exports: [NgAisStats],\n  imports: [CommonModule],\n})\nexport class NgAisStatsModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectToggleRefinement } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementRenderState,\n} from 'instantsearch.js/es/connectors/toggle-refinement/connectToggleRefinement';\n\n@Component({\n  selector: 'ais-toggle',\n  template: `\n    <div [class]='cx()'>\n      <label [class]=\"cx('label')\">\n        <input\n          [class]=\"cx('checkbox')\"\n          type='checkbox'\n          value='{{state.value.name}}'\n          [checked]='state.value.isRefined'\n          (change)='handleChange($event)'\n        />\n\n        <span [class]=\"cx('labelText')\">\n          {{label || state.value.name}}\n        </span>\n\n        <span [class]=\"cx('count')\">{{state.value.count}}</span>\n      </label>\n    </div>\n  `,\n})\nexport class NgAisToggle extends TypedBaseWidget<\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementConnectorParams\n> {\n  // rendering options\n  @Input() public label: string;\n\n  // instance options\n  @Input() public attribute: ToggleRefinementConnectorParams['attribute'];\n  @Input() public on?: ToggleRefinementConnectorParams['on'];\n  @Input() public off?: ToggleRefinementConnectorParams['off'];\n\n  public state: ToggleRefinementRenderState = {\n    canRefine: false,\n    sendEvent: undefined,\n    value: {\n      count: undefined,\n      isRefined: false,\n      name: '',\n      offFacetValue: undefined,\n      onFacetValue: undefined,\n    },\n    createURL: () => '#',\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('ToggleRefinement');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectToggleRefinement, {\n      attribute: this.attribute,\n      on: this.on,\n      off: this.off,\n    });\n    super.ngOnInit();\n  }\n\n  public handleChange(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(this.state.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisToggle } from './toggle';\n\n@NgModule({\n  declarations: [NgAisToggle],\n  entryComponents: [NgAisToggle],\n  exports: [NgAisToggle],\n  imports: [CommonModule],\n})\nexport class NgAisToggleModule {}\n","import { Inject, Component, Input, forwardRef, Optional } from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport {\n  RangeConnectorParams,\n  RangeWidgetDescription,\n  RangeRenderState,\n} from 'instantsearch.js/es/connectors/range/connectRange';\n\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { parseNumberInput, noop } from '../utils';\n\n@Component({\n  selector: 'ais-range-input',\n  template: `\n    <div [ngClass]=\"[\n        cx(),\n        !canRefine ? cx('', 'noRefinement') : ''\n      ]\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [ngClass]=\"[\n              cx('input'),\n              cx('input', 'min')\n            ]\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.min\"\n            [value]=\"minInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'min')\"\n          />\n        </label>\n\n        <span [class]=\"cx('separator')\">{{separator}}</span>\n\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [ngClass]=\"[\n              cx('input'),\n              cx('input', 'max')\n            ]\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.max\"\n            [value]=\"maxInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'max')\"\n          />\n        </label>\n\n        <button\n          [class]=\"cx('submit')\"\n          (click)=\"handleSubmit($event)\"\n        >\n          {{submitLabel}}\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisRangeInput extends TypedBaseWidget<\n  RangeWidgetDescription,\n  RangeConnectorParams\n> {\n  // rendering options\n  @Input() public currency: string = '$';\n  @Input() public separator: string = 'to';\n  @Input() public submitLabel: string = 'Go';\n\n  // instance options\n  @Input() public attribute: RangeConnectorParams['attribute'];\n  @Input() public min?: RangeConnectorParams['min'];\n  @Input() public max?: RangeConnectorParams['max'];\n  @Input() public precision?: RangeConnectorParams['precision'] = 0;\n\n  // inner state\n  public minInputValue?: number;\n  public maxInputValue?: number;\n\n  get step() {\n    const precision = parseNumberInput(this.precision);\n    return 1 / Math.pow(10, precision);\n  }\n\n  get canRefine() {\n    return this.state.range.min !== this.state.range.max;\n  }\n\n  public state: RangeRenderState = {\n    range: { min: undefined, max: undefined },\n    refine: noop,\n    start: [0, 0],\n    // TODO: use canRefine & format\n    canRefine: false,\n    format: {\n      from: () => '',\n      to: () => '',\n    },\n    sendEvent: undefined,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('RangeInput');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attribute: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision),\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleChange(event: any, type: string) {\n    const value = parseNumberInput(event.target.value);\n\n    if (type === 'min') {\n      this.minInputValue = value;\n    } else {\n      this.maxInputValue = value;\n    }\n  }\n\n  public handleSubmit(event: Event) {\n    event.preventDefault();\n    this.state.refine([this.minInputValue, this.maxInputValue]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeInput } from './range-input';\n\n@NgModule({\n  declarations: [NgAisRangeInput],\n  entryComponents: [NgAisRangeInput],\n  exports: [NgAisRangeInput],\n  imports: [CommonModule],\n})\nexport class NgAisRangeInputModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ais-panel',\n  template: `\n    <div class=\"ais-Panel\">\n      <div *ngIf=\"header\" class=\"ais-Panel-header\">\n        {{header}}\n      </div>\n\n      <div class=\"ais-Panel-body\">\n        <ng-content></ng-content>\n      </div>\n\n      <div *ngIf=\"footer\" class=\"ais-Panel-footer\">\n        {{footer}}\n      </div>\n    </div>\n  `,\n})\nexport class NgAisPanel {\n  @Input() public header?: string;\n  @Input() public footer?: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPanel } from './panel';\nexport { NgAisPanel } from './panel';\n\n@NgModule({\n  declarations: [NgAisPanel],\n  entryComponents: [NgAisPanel],\n  exports: [NgAisPanel],\n  imports: [CommonModule],\n})\nexport class NgAisPanelModule {}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  Optional,\n} from '@angular/core';\n\nimport { connectConfigure } from 'instantsearch.js/es/connectors';\nimport {\n  ConfigureWidgetDescription,\n  ConfigureRenderState,\n  ConfigureConnectorParams,\n} from 'instantsearch.js/es/connectors/configure/connectConfigure';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-configure',\n  template: '',\n})\nexport class NgAisConfigure extends TypedBaseWidget<\n  ConfigureWidgetDescription,\n  ConfigureConnectorParams\n> {\n  // instance options\n  private internalSearchParameters: ConfigureConnectorParams['searchParameters'];\n\n  private differ: KeyValueDiffer<string, any>;\n\n  public state: ConfigureRenderState = {\n    refine: noop,\n  };\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Configure');\n  }\n\n  @Input()\n  set searchParameters(values: ConfigureConnectorParams['searchParameters']) {\n    this.internalSearchParameters = values;\n    if (!this.differ && values) {\n      this.differ = this.differs.find(values).create();\n    }\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectConfigure, {\n      searchParameters: this.internalSearchParameters,\n    });\n    super.ngOnInit();\n  }\n\n  ngDoCheck() {\n    if (this.differ) {\n      const changes = this.differ.diff(this.internalSearchParameters);\n      if (changes) {\n        this.state.refine(this.internalSearchParameters);\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisConfigure } from './configure';\n\n@NgModule({\n  declarations: [NgAisConfigure],\n  entryComponents: [NgAisConfigure],\n  exports: [NgAisConfigure],\n  imports: [CommonModule],\n})\nexport class NgAisConfigureModule {}\n","import { Component, forwardRef, Inject, Input, Optional } from '@angular/core';\n\nimport { EXPERIMENTAL_connectConfigureRelatedItems } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport {\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetDescription,\n} from 'instantsearch.js/es/connectors/configure-related-items/connectConfigureRelatedItems';\n\n@Component({\n  selector: 'ais-experimental-configure-related-items',\n  template: '',\n})\nexport class NgAisConfigureRelatedItems extends TypedBaseWidget<\n  ConfigureRelatedItemsWidgetDescription,\n  ConfigureRelatedItemsConnectorParams\n> {\n  @Input() hit: ConfigureRelatedItemsConnectorParams['hit'];\n  @Input()\n  public matchingPatterns: ConfigureRelatedItemsConnectorParams['matchingPatterns'];\n  @Input()\n  public transformSearchParameters: ConfigureRelatedItemsConnectorParams['transformSearchParameters'];\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('ExperimentalConfigureRelatedItems');\n  }\n\n  public ngOnInit() {\n    this.createWidget(EXPERIMENTAL_connectConfigureRelatedItems, {\n      hit: this.hit,\n      matchingPatterns: this.matchingPatterns,\n      transformSearchParameters: this.transformSearchParameters,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisConfigureRelatedItems } from './configure-related-items';\n\n@NgModule({\n  declarations: [NgAisConfigureRelatedItems],\n  entryComponents: [NgAisConfigureRelatedItems],\n  exports: [NgAisConfigureRelatedItems],\n  imports: [CommonModule],\n})\nexport class NgAisConfigureRelatedItemsModule {}\n","import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  forwardRef,\n  Input,\n  Optional,\n} from '@angular/core';\n\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\nimport {\n  QueryRulesConnectorParams,\n  QueryRulesWidgetDescription,\n  QueryRulesRenderState,\n} from 'instantsearch.js/es/connectors/query-rules/connectQueryRules';\n\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\n\n@Component({\n  selector: 'ais-query-rule-custom-data',\n  template: `\n    <div [class]='cx()'>\n      <ng-container *ngTemplateOutlet='template; context: templateContext'>\n      </ng-container>\n\n      <div *ngIf='!template'>\n        <div *ngFor='let item of state.items'>\n          <pre>{{ item | json }}</pre>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisQueryRuleCustomData extends TypedBaseWidget<\n  QueryRulesWidgetDescription,\n  QueryRulesConnectorParams\n> {\n  @ContentChild(TemplateRef, { static: false })\n  public template: any;\n\n  @Input() public transformItems?: QueryRulesConnectorParams['transformItems'];\n\n  public state: QueryRulesRenderState = {\n    items: [],\n  };\n\n  get templateContext() {\n    return {\n      items: this.state.items,\n    };\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('QueryRuleCustomData');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectQueryRules, {\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisQueryRuleCustomData } from './query-rule-custom-data';\n\n@NgModule({\n  declarations: [NgAisQueryRuleCustomData],\n  entryComponents: [NgAisQueryRuleCustomData],\n  exports: [NgAisQueryRuleCustomData],\n  imports: [CommonModule],\n})\nexport class NgAisQueryRuleCustomDataModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport {\n  QueryRulesConnectorParams,\n  QueryRulesWidgetDescription,\n} from 'instantsearch.js/es/connectors/query-rules/connectQueryRules';\n\n@Component({\n  selector: 'ais-query-rule-context',\n  template: '',\n})\nexport class NgAisQueryRuleContext extends TypedBaseWidget<\n  QueryRulesWidgetDescription,\n  QueryRulesConnectorParams\n> {\n  @Input() public trackedFilters: QueryRulesConnectorParams['trackedFilters'];\n  @Input()\n  public transformRuleContexts?: QueryRulesConnectorParams['transformRuleContexts'];\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('QueryRuleContext');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectQueryRules, {\n      trackedFilters: this.trackedFilters,\n      transformRuleContexts: this.transformRuleContexts,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisQueryRuleContext } from './query-rule-context';\n\n@NgModule({\n  declarations: [NgAisQueryRuleContext],\n  entryComponents: [NgAisQueryRuleContext],\n  exports: [NgAisQueryRuleContext],\n  imports: [CommonModule],\n})\nexport class NgAisQueryRuleContextModule {}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  NgZone,\n  ContentChild,\n  ElementRef,\n  TemplateRef,\n  OnInit,\n  Optional,\n} from '@angular/core';\n\nimport { connectVoiceSearch } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  VoiceSearchConnectorParams,\n  VoiceSearchWidgetDescription,\n  VoiceSearchRenderState,\n} from 'instantsearch.js/es/connectors/voice-search/connectVoiceSearch';\n\n@Component({\n  selector: 'ais-voice-search',\n  template: `\n    <div [class]=\"cx()\">\n      <button\n        type=\"button\"\n        [class]=\"cx('button')\"\n        [title]=\"state.isBrowserSupported ? buttonTitle : disabledButtonTitle\"\n        [disabled]=\"!state.isBrowserSupported\"\n        (click)=\"handleClick($event)\"\n      >\n        <ng-container *ngTemplateOutlet=\"button ? button : defaultButton; context: templateContext\"></ng-container>\n      </button>\n      <div [class]=\"cx('status')\">\n        <ng-container *ngTemplateOutlet=\"status ? status : defaultStatus; context: templateContext\"></ng-container>\n      </div>\n    </div>\n\n    <ng-template #defaultButton let-status=\"status\" let-errorCode=\"errorCode\" let-isListening=\"isListening\">\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 24 24'\n        fill='none'\n        stroke='currentColor'\n        strokeWidth='2'\n        strokeLinecap='round'\n        strokeLinejoin='round'\n      >\n        <ng-container *ngIf=\"isNotAllowedError(); then errorSvgContent else normalSvgContent\">\n        </ng-container>\n        <ng-template #errorSvgContent>\n          <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>\n          <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"></path>\n          <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"></path>\n          <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n          <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n        </ng-template>\n        <ng-template #normalSvgContent>\n          <path\n            d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n            [attr.fill]=\"isListening ? 'currentColor' : 'none'\"\n          ></path>\n          <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path>\n          <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n          <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n        </ng-template>\n      </svg>\n    </ng-template>\n    <ng-template #defaultStatus let-transcript=\"transcript\">\n      <p>{{transcript}}</p>\n    </ng-template>\n  `,\n})\nexport class NgAisVoiceSearch\n  extends TypedBaseWidget<\n    VoiceSearchWidgetDescription,\n    VoiceSearchConnectorParams\n  >\n  implements OnInit {\n  @ContentChild('button', { static: false })\n  button: TemplateRef<ElementRef>;\n  @ContentChild('status', { static: false })\n  status: TemplateRef<ElementRef>;\n\n  // rendering options\n  @Input() public buttonTitle: string = 'Search by voice';\n  @Input()\n  public disabledButtonTitle: string =\n    'Search by voice (not supported on this browser)';\n\n  // instance option\n  @Input()\n  public searchAsYouSpeak?: VoiceSearchConnectorParams['searchAsYouSpeak'];\n\n  public state: VoiceSearchRenderState = {\n    isBrowserSupported: undefined,\n    isListening: undefined,\n    toggleListening: noop,\n    voiceListeningState: {\n      status: 'initial',\n      transcript: '',\n      isSpeechFinal: false,\n      errorCode: undefined,\n    },\n  };\n\n  public templateContext: VoiceSearchRenderState['voiceListeningState'] & {\n    isListening: boolean;\n    isBrowserSupported: boolean;\n  } = {\n    status: 'initial',\n    errorCode: undefined,\n    transcript: '',\n    isSpeechFinal: false,\n    isListening: false,\n    isBrowserSupported: false,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch,\n    private zone: NgZone\n  ) {\n    super('VoiceSearch');\n  }\n\n  ngOnInit() {\n    this.createWidget(connectVoiceSearch, {\n      searchAsYouSpeak: this.searchAsYouSpeak,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick = (event: MouseEvent): void => {\n    (event.currentTarget as HTMLElement).blur();\n    this.state.toggleListening();\n  };\n\n  public isNotAllowedError = (): boolean =>\n    this.state.voiceListeningState.status === 'error' &&\n    this.state.voiceListeningState.errorCode === 'not-allowed';\n\n  public updateState = (state: VoiceSearchRenderState): void => {\n    this.zone.run(() => {\n      this.templateContext = {\n        status: state.voiceListeningState.status,\n        errorCode: state.voiceListeningState.errorCode,\n        transcript: state.voiceListeningState.transcript,\n        isSpeechFinal: state.voiceListeningState.isSpeechFinal,\n        isListening: state.isListening,\n        isBrowserSupported: state.isBrowserSupported,\n      };\n      this.state = state;\n    });\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisVoiceSearch } from './voice-search';\n\n@NgModule({\n  declarations: [NgAisVoiceSearch],\n  entryComponents: [NgAisVoiceSearch],\n  exports: [NgAisVoiceSearch],\n  imports: [CommonModule],\n})\nexport class NgAisVoiceSearchModule {}\n","import * as algoliasearchProxy from 'algoliasearch/lite';\nimport * as encodeProxy from 'querystring-es3/encode';\nimport { VERSION as AngularVersion } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { TransferState, StateKey } from '@angular/platform-browser';\nimport { VERSION } from './version';\n\ntype SSRSearchClientOptions = {\n  appId: string;\n  apiKey: string;\n  httpClient: HttpClient;\n  HttpHeaders: typeof HttpHeaders;\n  transferState: TransferState;\n  options?: object;\n  makeStateKey<T = void>(key: string): StateKey<T>;\n};\n\ntype RequestOptions = {\n  // Algolia only uses GET and POST methods for searching.\n  // See: https://www.algolia.com/doc/rest-api/search/#search-endpoints\n  method: 'GET' | 'POST';\n  headers: string;\n  body: string;\n};\n\n// compatibility with different typescript settings:\n// - esModuleInterop\n// - allowSyntheticDefaultImports\nconst algoliasearch = (typeof algoliasearchProxy.default === 'function'\n  ? algoliasearchProxy.default\n  : algoliasearchProxy) as typeof algoliasearchProxy.default extends Function\n  ? typeof algoliasearchProxy.default\n  : typeof algoliasearchProxy;\n\nconst encode = encodeProxy.default || encodeProxy;\n\nexport function createSSRSearchClient({\n  appId,\n  apiKey,\n  httpClient,\n  HttpHeaders,\n  transferState,\n  makeStateKey,\n  options = {},\n}: SSRSearchClientOptions) {\n  // A custom network request needs to be done, using TransferState of Angular.\n  // This is done to make sure the request done backend for SSR doesn't get\n  // made again frontend during hydration.\n  // For compatibility with both v3 and v4 of algoliasearch, we are overriding the\n  // network request function in two places:\n  // v4: custom \"requester\"\n  // v3: override \"_request\" on the prototype\n  // since neither v3 uses the requester argument, and v4 use the _request, we\n  // can safely do this without checking the version\n  const searchClient = algoliasearch(appId, apiKey, {\n    ...options,\n    requester: {\n      send({ headers, method, url, data }) {\n        const transferStateKey = makeStateKey<string>(`ngais(${data})`);\n\n        if (transferState.hasKey(transferStateKey)) {\n          const response = JSON.parse(\n            transferState.get(transferStateKey, JSON.stringify({}))\n          );\n\n          return Promise.resolve({\n            status: response.status,\n            content: JSON.stringify(response.body),\n            isTimedOut: false,\n          });\n        }\n\n        return new Promise((resolve, reject) => {\n          httpClient\n            .request(method, url, {\n              headers,\n              body: data,\n              observe: 'response',\n            })\n            .subscribe(\n              response => {\n                transferState.set(transferStateKey, JSON.stringify(response));\n\n                resolve({\n                  status: response.status,\n                  content: JSON.stringify(response.body),\n                  isTimedOut: false,\n                });\n              },\n              response =>\n                reject({\n                  status: response.status,\n                  body: response.body,\n                })\n            );\n        });\n      },\n    },\n  });\n\n  searchClient.addAlgoliaAgent(`angular (${AngularVersion.full})`);\n  searchClient.addAlgoliaAgent(`angular-instantsearch (${VERSION})`);\n  searchClient.addAlgoliaAgent(`angular-instantsearch-server (${VERSION})`);\n\n  (searchClient as any)._request = (\n    rawUrl: string,\n    options: RequestOptions\n  ) => {\n    let headers = new HttpHeaders();\n\n    headers = headers.set(\n      'content-type',\n      options.method === 'POST'\n        ? 'application/x-www-form-urlencoded'\n        : 'application/json'\n    );\n\n    headers = headers.set('accept', 'application/json');\n\n    const url =\n      rawUrl + (rawUrl.includes('?') ? '&' : '?') + encode(options.headers);\n\n    const transferStateKey = makeStateKey<string>(`ngais(${options.body})`);\n\n    if (transferState.hasKey(transferStateKey)) {\n      const response = JSON.parse(\n        transferState.get(transferStateKey, JSON.stringify({}))\n      );\n\n      return Promise.resolve({\n        statusCode: response.status,\n        body: response.body,\n        headers: response.headers,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      httpClient\n        .request(options.method, url, {\n          headers,\n          body: options.body,\n          observe: 'response',\n        })\n        .subscribe(\n          response => {\n            transferState.set(transferStateKey, JSON.stringify(response));\n\n            resolve({\n              statusCode: response.status,\n              body: response.body,\n              headers: response.headers,\n            });\n          },\n          response =>\n            reject({\n              statusCode: response.status,\n              body: response.body,\n              headers: response.headers,\n            })\n        );\n    });\n  };\n\n  return searchClient;\n}\n","import { Input, OnDestroy, OnInit, forwardRef } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { bem, noop } from './utils';\nimport { NgAisInstantSearch } from './instantsearch/instantsearch';\nimport { NgAisIndex } from './index-widget/index-widget';\nimport { Widget as W } from 'instantsearch.js/es/types';\nimport { IndexWidget } from 'instantsearch.js/es/widgets/index/index';\n\nexport type Widget = W | IndexWidget;\n\n// TODO: use Connector type from InstantSearch. Not yet possible now,\n// since non-ts connectors can't have generics like Connector has,\n// as well as sometimes being not accurate enough / missing keys.\nexport type Connector = (\n  renderFn: (state: object, isFirstRendering: boolean) => void,\n  unmountFn: () => void\n) => (widgetOptions?: object) => Widget;\n\nexport abstract class BaseWidget<TState extends Record<string, unknown> = {}>\n  implements OnInit, OnDestroy {\n  @Input() public autoHideContainer?: boolean;\n\n  public widget?: Widget;\n  public state?: TState = {} as TState;\n  public cx: ReturnType<typeof bem>;\n  public abstract instantSearchInstance: NgAisInstantSearch;\n  public abstract parentIndex?: NgAisIndex;\n\n  constructor(widgetName: string) {\n    this.cx = bem(widgetName);\n  }\n\n  get parent() {\n    if (this.parentIndex) {\n      return this.parentIndex;\n    }\n    return this.instantSearchInstance;\n  }\n\n  public createWidget(connector: Connector, options: object = {}) {\n    this.widget = connector(this.updateState, noop)(options);\n  }\n\n  public ngOnInit() {\n    this.parent.addWidgets([this.widget]);\n  }\n\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.instantSearchInstance.platformId)) {\n      this.parent.removeWidgets([this.widget]);\n    }\n  }\n\n  public updateState = (\n    state: TState,\n    isFirstRendering: boolean\n  ): Promise<void> | void => {\n    if (isFirstRendering) {\n      return Promise.resolve().then(() => {\n        this.state = state;\n      });\n    }\n\n    this.state = state;\n  };\n\n  /**\n   * Helper to generate class names for an item\n   * @param item element to generate a class name for\n   */\n  public getItemClass(item: { isRefined?: boolean }) {\n    const className = this.cx('item');\n\n    if (item.isRefined) {\n      return `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    return className;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\n// Modules\nimport { NgAisBreadcrumbModule } from './breadcrumb/breadcrumb.module';\nexport { NgAisBreadcrumbModule };\n\nimport { NgAisClearRefinementsModule } from './clear-refinements/clear-refinements.module';\nexport { NgAisClearRefinementsModule };\n\nimport { NgAisCurrentRefinementsModule } from './current-refinements/current-refinements.module';\nexport { NgAisCurrentRefinementsModule };\n\nimport { NgAisHierarchicalMenuModule } from './hierarchical-menu/hierarchical-menu.module';\nexport { NgAisHierarchicalMenuModule };\n\nimport { NgAisHitsPerPageModule } from './hits-per-page/hits-per-page.module';\nexport { NgAisHitsPerPageModule };\n\nimport { NgAisHitsModule } from './hits/hits.module';\nexport { NgAisHitsModule };\n\nimport { NgAisIndexModule } from './index-widget/index-widget.module';\nexport { NgAisIndexModule };\n\nimport { NgAisInfiniteHitsModule } from './infinite-hits/infinite-hits.module';\nexport { NgAisInfiniteHitsModule };\n\nimport { NgAisInstantSearchModule } from './instantsearch/instantsearch.module';\nexport { NgAisInstantSearchModule };\n\nimport { NgAisMenuModule } from './menu/menu.module';\nexport { NgAisMenuModule };\n\nimport { NgAisNumericMenuModule } from './numeric-menu/numeric-menu.module';\nexport { NgAisNumericMenuModule };\n\nimport { NgAisPaginationModule } from './pagination/pagination.module';\nexport { NgAisPaginationModule };\n\nimport { NgAisRangeSliderModule } from './range-slider/range-slider.module';\nexport { NgAisRangeSliderModule };\n\nimport { NgAisRefinementListModule } from './refinement-list/refinement-list.module';\nexport { NgAisRefinementListModule };\n\nimport { NgAisSearchBoxModule } from './search-box/search-box.module';\nexport { NgAisSearchBoxModule };\n\nimport { NgAisSortByModule } from './sort-by/sort-by.module';\nexport { NgAisSortByModule };\n\nimport { NgAisRatingMenuModule } from './rating-menu/rating-menu.module';\nexport { NgAisRatingMenuModule };\n\nimport { NgAisStatsModule } from './stats/stats.module';\nexport { NgAisStatsModule };\n\nimport { NgAisToggleModule } from './toggle/toggle.module';\nexport { NgAisToggleModule };\n\nimport { NgAisHighlightModule } from './highlight/highlight.module';\nexport { NgAisHighlightModule };\n\nimport { NgAisRangeInputModule } from './range-input/range-input.module';\nexport { NgAisRangeInputModule };\n\nimport { NgAisPanelModule } from './panel/panel.module';\nexport { NgAisPanelModule };\n\nimport { NgAisConfigureModule } from './configure/configure.module';\nexport { NgAisConfigureModule };\n\nimport { NgAisConfigureRelatedItemsModule } from './configure-related-items/configure-related-items.module';\nexport { NgAisConfigureRelatedItemsModule };\n\nimport { NgAisQueryRuleCustomDataModule } from './query-rule-custom-data/query-rule-custom-data.module';\nexport { NgAisQueryRuleCustomDataModule };\n\nimport { NgAisQueryRuleContextModule } from './query-rule-context/query-rule-context.module';\nexport { NgAisQueryRuleContextModule };\n\nimport { NgAisVoiceSearchModule } from './voice-search/voice-search.module';\nexport { NgAisVoiceSearchModule };\n\n// Server-side rendering\nexport { createSSRSearchClient } from './create-ssr-search-client';\n\n// Custom widget with BaseWidget class\nexport { BaseWidget, Widget, Connector } from './base-widget';\nexport { TypedBaseWidget } from './typed-base-widget';\n\nexport { NgAisInstantSearch } from './instantsearch/instantsearch';\nexport { NgAisIndex } from './index-widget/index-widget';\n\nconst NGIS_MODULES = [\n  NgAisInstantSearchModule,\n  NgAisIndexModule,\n  NgAisHitsModule,\n  NgAisSearchBoxModule,\n  NgAisClearRefinementsModule,\n  NgAisMenuModule,\n  NgAisPaginationModule,\n  NgAisRefinementListModule,\n  NgAisHitsPerPageModule,\n  NgAisSortByModule,\n  NgAisNumericMenuModule,\n  NgAisStatsModule,\n  NgAisToggleModule,\n  NgAisInfiniteHitsModule,\n  NgAisCurrentRefinementsModule,\n  NgAisHierarchicalMenuModule,\n  NgAisRatingMenuModule,\n  NgAisRangeSliderModule,\n  NgAisBreadcrumbModule,\n  NgAisHighlightModule,\n  NgAisRangeInputModule,\n  NgAisPanelModule,\n  NgAisConfigureModule,\n  NgAisConfigureRelatedItemsModule,\n  NgAisQueryRuleCustomDataModule,\n  NgAisQueryRuleContextModule,\n  NgAisVoiceSearchModule,\n];\n\n@NgModule({\n  exports: NGIS_MODULES,\n  imports: [NgAisInstantSearchModule.forRoot()],\n})\nexport class NgAisRootModule {}\n\n@NgModule({ imports: NGIS_MODULES, exports: NGIS_MODULES })\nexport class NgAisModule {\n  public static forRoot(): ModuleWithProviders<NgAisRootModule> {\n    return { ngModule: NgAisRootModule };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {NgAisBreadcrumb as ɵb} from './breadcrumb/breadcrumb';\nexport {NgAisClearRefinements as ɵc} from './clear-refinements/clear-refinements';\nexport {NgAisConfigureRelatedItems as ɵx} from './configure-related-items/configure-related-items';\nexport {NgAisConfigure as ɵw} from './configure/configure';\nexport {NgAisCurrentRefinements as ɵd} from './current-refinements/current-refinements';\nexport {NgAisHierarchicalMenu as ɵe} from './hierarchical-menu/hierarchical-menu';\nexport {NgAisHierarchicalMenuItem as ɵf} from './hierarchical-menu/hierarchical-menu-item';\nexport {NgAisHighlight as ɵi} from './highlight/highlight';\nexport {NgAisHitsPerPage as ɵg} from './hits-per-page/hits-per-page';\nexport {NgAisHits as ɵh} from './hits/hits';\nexport {NgAisInfiniteHits as ɵj} from './infinite-hits/infinite-hits';\nexport {NgAisMenu as ɵk} from './menu/menu';\nexport {NgAisNumericMenu as ɵl} from './numeric-menu/numeric-menu';\nexport {NgAisPagination as ɵm} from './pagination/pagination';\nexport {NgAisPanel as ɵa} from './panel/panel';\nexport {NgAisQueryRuleContext as ɵz} from './query-rule-context/query-rule-context';\nexport {NgAisQueryRuleCustomData as ɵy} from './query-rule-custom-data/query-rule-custom-data';\nexport {NgAisRangeInput as ɵv} from './range-input/range-input';\nexport {NgAisRangeSlider as ɵn} from './range-slider/range-slider';\nexport {NgAisRatingMenu as ɵs} from './rating-menu/rating-menu';\nexport {NgAisFacetsSearch as ɵp} from './refinement-list/facets-search';\nexport {NgAisRefinementList as ɵo} from './refinement-list/refinement-list';\nexport {NgAisSearchBox as ɵq} from './search-box/search-box';\nexport {NgAisSortBy as ɵr} from './sort-by/sort-by';\nexport {NgAisStats as ɵt} from './stats/stats';\nexport {NgAisToggle as ɵu} from './toggle/toggle';\nexport {NgAisVoiceSearch as ɵba} from './voice-search/voice-search';"]}