import { Input, EventEmitter, VERSION as VERSION$1, Component, Inject, PLATFORM_ID, Output, SkipSelf, forwardRef, Optional, NgModule, ContentChild, TemplateRef, ViewChild, KeyValueDiffers, NgZone } from '@angular/core';
import { isPlatformBrowser, CommonModule } from '@angular/common';
import { connectBreadcrumb, connectClearRefinements, connectCurrentRefinements, connectHierarchicalMenu, connectHitsPerPage, connectHitsWithInsights, connectInfiniteHitsWithInsights, connectMenu, connectNumericMenu, connectPagination, connectRange, connectRefinementList, connectSearchBox, connectSortBy, connectRatingMenu, connectStats, connectToggleRefinement, connectConfigure, EXPERIMENTAL_connectConfigureRelatedItems, connectQueryRules, connectVoiceSearch } from 'instantsearch.js/es/connectors';
import * as algoliasearchProxy from 'algoliasearch/lite';
import instantsearch from 'instantsearch.js/es';
import indexWidget from 'instantsearch.js/es/widgets/index/index';
import * as noUiSlider from 'nouislider';
import * as encodeProxy from 'querystring-es3/encode';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = ["*"];
function NgAisBreadcrumb_div_0_li_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 6);
    ɵngcc0.ɵɵtext(1, " > ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("separator"));
} }
function NgAisBreadcrumb_div_0_li_2_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 7);
    ɵngcc0.ɵɵlistener("click", function NgAisBreadcrumb_div_0_li_2_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const item_r2 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.handleClick($event, item_r2); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r4.cx("link"));
    ɵngcc0.ɵɵpropertyInterpolate("href", ctx_r4.state.createURL(item_r2.value), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r2.label, " ");
} }
function NgAisBreadcrumb_div_0_li_2_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r2.label, " ");
} }
const _c1 = function (a0, a1) { return [a0, a1]; };
function NgAisBreadcrumb_div_0_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 2);
    ɵngcc0.ɵɵlistener("click", function NgAisBreadcrumb_div_0_li_2_Template_li_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const item_r2 = restoredCtx.$implicit; const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.handleClick($event, item_r2); });
    ɵngcc0.ɵɵtemplate(1, NgAisBreadcrumb_div_0_li_2_span_1_Template, 2, 2, "span", 3);
    ɵngcc0.ɵɵtemplate(2, NgAisBreadcrumb_div_0_li_2_a_2_Template, 2, 4, "a", 4);
    ɵngcc0.ɵɵtemplate(3, NgAisBreadcrumb_div_0_li_2_span_3_Template, 2, 1, "span", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c1, ctx_r1.cx("item"), item_r2.isLast ? ctx_r1.cx("item", "selected") : ""));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r2.separator);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !item_r2.isLast);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r2.isLast);
} }
function NgAisBreadcrumb_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "ul");
    ɵngcc0.ɵɵtemplate(2, NgAisBreadcrumb_div_0_li_2_Template, 4, 7, "li", 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.items);
} }
function NgAisClearRefinements_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "button", 1);
    ɵngcc0.ɵɵlistener("click", function NgAisClearRefinements_div_0_Template_button_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.handleClick($event); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("button") + (!ctx_r0.state.hasRefinements ? " " + ctx_r0.cx("button", "disabled") : ""));
    ɵngcc0.ɵɵproperty("disabled", !ctx_r0.state.hasRefinements);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.resetLabel, " ");
} }
function NgAisCurrentRefinements_div_0_ul_1_span_5_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 2);
    ɵngcc0.ɵɵlistener("click", function NgAisCurrentRefinements_div_0_ul_1_span_5_Template_button_click_3_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r6); const refinement_r4 = restoredCtx.$implicit; const ctx_r5 = ɵngcc0.ɵɵnextContext(3); return ctx_r5.handleClick($event, refinement_r4); });
    ɵngcc0.ɵɵtext(4, "\u2715");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const refinement_r4 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("category"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("categoryLabel"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(refinement_r4.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("delete"));
} }
function NgAisCurrentRefinements_div_0_ul_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul");
    ɵngcc0.ɵɵelementStart(1, "li");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "titlecase");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, NgAisCurrentRefinements_div_0_ul_1_span_5_Template, 5, 7, "span", 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("list"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("item"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("label"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(4, 8, item_r2.label), ":");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", item_r2.refinements);
} }
function NgAisCurrentRefinements_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, NgAisCurrentRefinements_div_0_ul_1_Template, 6, 10, "ul", 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.state.items);
} }
function NgAisHierarchicalMenu_div_0_ais_hierarchical_menu_item_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "ais-hierarchical-menu-item", 2);
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("item", item_r2)("createURL", ctx_r1.state.createURL)("refine", ctx_r1.state.refine);
} }
function NgAisHierarchicalMenu_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "ul");
    ɵngcc0.ɵɵtemplate(2, NgAisHierarchicalMenu_div_0_ais_hierarchical_menu_item_2_Template, 1, 3, "ais-hierarchical-menu-item", 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list") + " " + ctx_r0.cx("list", "lvl0"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.state.items);
} }
function NgAisHierarchicalMenuItem_ul_6_ais_hierarchical_menu_item_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "ais-hierarchical-menu-item", 4);
} if (rf & 2) {
    const child_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("item", child_r2)("createURL", ctx_r1.createURL)("refine", ctx_r1.refine)("lvl", ctx_r1.lvl + 1);
} }
function NgAisHierarchicalMenuItem_ul_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul");
    ɵngcc0.ɵɵtemplate(1, NgAisHierarchicalMenuItem_ul_6_ais_hierarchical_menu_item_1_Template, 1, 4, "ais-hierarchical-menu-item", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.getListClass());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.item.data);
} }
function NgAisHitsPerPage_div_0_option_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("option"));
    ɵngcc0.ɵɵproperty("value", item_r2.value)("selected", item_r2.isRefined);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r2.label, " ");
} }
function NgAisHitsPerPage_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "select", 1);
    ɵngcc0.ɵɵlistener("change", function NgAisHitsPerPage_div_0_Template_select_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.state.refine($event.target.value); });
    ɵngcc0.ɵɵtemplate(2, NgAisHitsPerPage_div_0_option_2_Template, 2, 5, "option", 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("select"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.state.items);
} }
function NgAisHits_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function NgAisHits_div_2_li_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelement(1, "ais-highlight", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const hit_r3 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("item"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("hit", hit_r3);
} }
function NgAisHits_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "ul");
    ɵngcc0.ɵɵtemplate(2, NgAisHits_div_2_li_2_Template, 2, 3, "li", 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("list"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.state.hits);
} }
function NgAisInfiniteHits_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function NgAisInfiniteHits_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisInfiniteHits_button_2_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.showPreviousHandler($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(3, _c1, ctx_r1.cx("loadPrevious"), ctx_r1.state.isFirstPage ? ctx_r1.cx("loadPrevious", "disabled") : ""))("disabled", ctx_r1.state.isFirstPage);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.showPreviousLabel, " ");
} }
function NgAisInfiniteHits_div_3_li_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelement(1, "ais-highlight", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const hit_r7 = ctx.$implicit;
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r6.cx("item"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("hit", hit_r7);
} }
function NgAisInfiniteHits_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "ul");
    ɵngcc0.ɵɵtemplate(2, NgAisInfiniteHits_div_3_li_2_Template, 2, 3, "li", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("list"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.state.hits);
} }
function NgAisInfiniteHits_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisInfiniteHits_button_4_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.showMoreHandler($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(3, _c1, ctx_r3.cx("loadMore"), ctx_r3.state.isLastPage ? ctx_r3.cx("loadMore", "disabled") : ""))("disabled", ctx_r3.state.isLastPage);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.showMoreLabel, " ");
} }
function NgAisMenu_div_0_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisMenu_div_0_li_2_Template_li_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const item_r3 = restoredCtx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.handleClick($event, item_r3.value); });
    ɵngcc0.ɵɵelementStart(1, "a", 4);
    ɵngcc0.ɵɵlistener("click", function NgAisMenu_div_0_li_2_Template_a_click_1_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const item_r3 = restoredCtx.$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.handleClick($event, item_r3.value); });
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r3 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.getItemClass(item_r3));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("link"));
    ɵngcc0.ɵɵpropertyInterpolate("href", ctx_r1.state.createURL(item_r3.value), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("label"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r3.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("count"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r3.count);
} }
function NgAisMenu_div_0_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 5);
    ɵngcc0.ɵɵlistener("click", function NgAisMenu_div_0_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.state.toggleShowMore(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.showMoreClass);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r2.state.canToggleShowMore);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.state.isShowingMore ? ctx_r2.showLessLabel : ctx_r2.showMoreLabel, " ");
} }
function NgAisMenu_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "ul");
    ɵngcc0.ɵɵtemplate(2, NgAisMenu_div_0_li_2_Template, 6, 11, "li", 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, NgAisMenu_div_0_button_3_Template, 2, 4, "button", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.state.items);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.showMore);
} }
function NgAisNumericMenu_div_0_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelementStart(1, "label");
    ɵngcc0.ɵɵelementStart(2, "input", 2);
    ɵngcc0.ɵɵlistener("change", function NgAisNumericMenu_div_0_li_2_Template_input_change_2_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r4); const item_r2 = restoredCtx.$implicit; const ctx_r3 = ɵngcc0.ɵɵnextContext(2); return ctx_r3.refine($event, item_r2); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.getItemClass(item_r2));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("label"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("radio"));
    ɵngcc0.ɵɵproperty("checked", item_r2.isRefined);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("labelText"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r2.label);
} }
function NgAisNumericMenu_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "ul");
    ɵngcc0.ɵɵtemplate(2, NgAisNumericMenu_div_0_li_2_Template, 5, 10, "li", 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.state.items);
} }
function NgAisPagination_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisPagination_li_2_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.refine($event, 0); });
    ɵngcc0.ɵɵelementStart(1, "a", 4);
    ɵngcc0.ɵɵtext(2, " \u2039\u2039 ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("item") + " " + ctx_r0.cx("item", "firstPage") + (ctx_r0.state.currentRefinement === 0 ? " " + ctx_r0.cx("item", "disabled") : ""));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("link"));
    ɵngcc0.ɵɵproperty("href", ctx_r0.state.createURL(0), ɵngcc0.ɵɵsanitizeUrl);
} }
function NgAisPagination_li_3_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisPagination_li_3_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.refine($event, ctx_r7.state.currentRefinement - 1); });
    ɵngcc0.ɵɵelementStart(1, "a", 4);
    ɵngcc0.ɵɵtext(2, " \u2039 ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("item") + " " + ctx_r1.cx("item", "previousPage") + (ctx_r1.state.currentRefinement === 0 ? " " + ctx_r1.cx("item", "disabled") : ""));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("link"));
    ɵngcc0.ɵɵproperty("href", ctx_r1.state.createURL(ctx_r1.state.currentRefinement - 1), ɵngcc0.ɵɵsanitizeUrl);
} }
function NgAisPagination_li_4_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisPagination_li_4_Template_li_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r11); const page_r9 = restoredCtx.$implicit; const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.refine($event, page_r9); });
    ɵngcc0.ɵɵelementStart(1, "a", 4);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const page_r9 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("item") + " " + ctx_r2.cx("item", "page") + (ctx_r2.state.currentRefinement === page_r9 ? " " + ctx_r2.cx("item", "selected") : ""));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("link"));
    ɵngcc0.ɵɵproperty("href", ctx_r2.state.createURL(page_r9), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", page_r9 + 1, " ");
} }
function NgAisPagination_li_5_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisPagination_li_5_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.refine($event, ctx_r12.state.currentRefinement + 1); });
    ɵngcc0.ɵɵelementStart(1, "a", 4);
    ɵngcc0.ɵɵtext(2, " \u203A ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("item") + " " + ctx_r3.cx("item", "nextPage") + (ctx_r3.state.currentRefinement + 1 === ctx_r3.state.nbPages ? " " + ctx_r3.cx("item", "disabled") : ""));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("link"));
    ɵngcc0.ɵɵproperty("href", ctx_r3.state.createURL(ctx_r3.state.currentRefinement + 1), ɵngcc0.ɵɵsanitizeUrl);
} }
function NgAisPagination_li_6_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisPagination_li_6_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.refine($event, ctx_r14.state.nbPages - 1); });
    ɵngcc0.ɵɵelementStart(1, "a", 4);
    ɵngcc0.ɵɵtext(2, " \u203A\u203A ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r4.cx("item") + " " + ctx_r4.cx("item", "lastPage") + (ctx_r4.state.currentRefinement + 1 === ctx_r4.state.nbPages ? " " + ctx_r4.cx("item", "disabled") : ""));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r4.cx("link"));
    ɵngcc0.ɵɵproperty("href", ctx_r4.state.createURL(ctx_r4.state.nbPages - 1), ɵngcc0.ɵɵsanitizeUrl);
} }
const _c2 = ["sliderContainer"];
function NgAisRefinementList_div_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelement(1, "ais-facets-search", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("searchBox"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("search", ctx_r1.state.searchForItems)("searchPlaceholder", ctx_r1.searchPlaceholder);
} }
function NgAisRefinementList_div_0_li_3_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 4);
    ɵngcc0.ɵɵlistener("click", function NgAisRefinementList_div_0_li_3_Template_li_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r6); const item_r4 = restoredCtx.$implicit; const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.refine($event, item_r4); });
    ɵngcc0.ɵɵelementStart(1, "label");
    ɵngcc0.ɵɵelement(2, "input", 5);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵelement(4, "ais-highlight", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r4 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.getItemClass(item_r4));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("label"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("checkbox"));
    ɵngcc0.ɵɵpropertyInterpolate("value", item_r4.value);
    ɵngcc0.ɵɵproperty("checked", item_r4.isRefined);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("labelText"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("hit", item_r4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("count"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r4.count);
} }
function NgAisRefinementList_div_0_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 7);
    ɵngcc0.ɵɵlistener("click", function NgAisRefinementList_div_0_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.state.toggleShowMore(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("showMore"));
    ɵngcc0.ɵɵproperty("disabled", !ctx_r3.state.canToggleShowMore);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.state.isShowingMore ? ctx_r3.showLessLabel : ctx_r3.showMoreLabel, " ");
} }
function NgAisRefinementList_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, NgAisRefinementList_div_0_div_1_Template, 2, 4, "div", 0);
    ɵngcc0.ɵɵelementStart(2, "ul");
    ɵngcc0.ɵɵtemplate(3, NgAisRefinementList_div_0_li_3_Template, 7, 14, "li", 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, NgAisRefinementList_div_0_button_4_Template, 2, 4, "button", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.searchable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.state.items);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.showMore);
} }
const _c3 = ["searchBox"];
function NgAisSortBy_option_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("option"));
    ɵngcc0.ɵɵproperty("value", item_r1.value)("selected", item_r1.value === ctx_r0.state.currentRefinement);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r1.label, " ");
} }
function NgAisRatingMenu_div_0_li_7__svg_svg_2__svg_use_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelement(0, "use", 15);
} }
function NgAisRatingMenu_div_0_li_7__svg_svg_2__svg_use_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelement(0, "use", 16);
} }
function NgAisRatingMenu_div_0_li_7__svg_svg_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 12);
    ɵngcc0.ɵɵtemplate(1, NgAisRatingMenu_div_0_li_7__svg_svg_2__svg_use_1_Template, 1, 0, "use", 13);
    ɵngcc0.ɵɵtemplate(2, NgAisRatingMenu_div_0_li_7__svg_svg_2__svg_use_2_Template, 1, 0, "use", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const star_r4 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r3.cx("starIcon") + " " + (star_r4 ? ctx_r3.cx("starIcon", "full") : ctx_r3.cx("starIcon", "empty")));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", star_r4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !star_r4);
} }
function NgAisRatingMenu_div_0_li_7_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 8);
    ɵngcc0.ɵɵlistener("click", function NgAisRatingMenu_div_0_li_7_Template_li_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r8); const item_r2 = restoredCtx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.handleClick($event, item_r2.value); });
    ɵngcc0.ɵɵelementStart(1, "a", 9);
    ɵngcc0.ɵɵlistener("click", function NgAisRatingMenu_div_0_li_7_Template_a_click_1_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r8); const item_r2 = restoredCtx.$implicit; const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.handleClick($event, item_r2.value); });
    ɵngcc0.ɵɵtemplate(2, NgAisRatingMenu_div_0_li_7__svg_svg_2_Template, 3, 3, "svg", 10);
    ɵngcc0.ɵɵelementStart(3, "span", 11);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.getItemClass(item_r2));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("link"));
    ɵngcc0.ɵɵpropertyInterpolate("href", ctx_r1.state.createURL(item_r2.value), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", item_r2.stars);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("label"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.andUpLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("count"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r2.count);
} }
function NgAisRatingMenu_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 2);
    ɵngcc0.ɵɵelementStart(2, "symbol", 3);
    ɵngcc0.ɵɵelement(3, "path", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "symbol", 5);
    ɵngcc0.ɵɵelement(5, "path", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵnamespaceHTML();
    ɵngcc0.ɵɵelementStart(6, "ul");
    ɵngcc0.ɵɵtemplate(7, NgAisRatingMenu_div_0_li_7_Template, 7, 12, "li", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c1, ctx_r0.cx(), ctx_r0.state.items.length === 0 ? ctx_r0.cx("", "noRefinement") : ""));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.state.items);
} }
function NgAisStats_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function NgAisStats_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("text"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ctx_r1.state.nbHits, " results found in ", ctx_r1.state.processingTimeMS, "ms. ");
} }
function NgAisPanel_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.header, " ");
} }
function NgAisPanel_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.footer, " ");
} }
function NgAisQueryRuleCustomData_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function NgAisQueryRuleCustomData_div_2_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "pre");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "json");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r3 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, item_r3));
} }
function NgAisQueryRuleCustomData_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, NgAisQueryRuleCustomData_div_2_div_1_Template, 4, 3, "div", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.state.items);
} }
const _c4 = ["button"];
const _c5 = ["status"];
function NgAisVoiceSearch_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function NgAisVoiceSearch_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function NgAisVoiceSearch_ng_template_5__svg_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementContainer(0);
} }
function NgAisVoiceSearch_ng_template_5__svg_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelement(0, "line", 8);
    ɵngcc0.ɵɵelement(1, "path", 9);
    ɵngcc0.ɵɵelement(2, "path", 10);
    ɵngcc0.ɵɵelement(3, "line", 11);
    ɵngcc0.ɵɵelement(4, "line", 12);
} }
function NgAisVoiceSearch_ng_template_5__svg_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelement(0, "path", 13);
    ɵngcc0.ɵɵelement(1, "path", 14);
    ɵngcc0.ɵɵelement(2, "line", 11);
    ɵngcc0.ɵɵelement(3, "line", 12);
} if (rf & 2) {
    const isListening_r8 = ɵngcc0.ɵɵnextContext().isListening;
    ɵngcc0.ɵɵattribute("fill", isListening_r8 ? "currentColor" : "none");
} }
function NgAisVoiceSearch_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 4);
    ɵngcc0.ɵɵtemplate(1, NgAisVoiceSearch_ng_template_5__svg_ng_container_1_Template, 1, 0, "ng-container", 5);
    ɵngcc0.ɵɵtemplate(2, NgAisVoiceSearch_ng_template_5__svg_ng_template_2_Template, 5, 0, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(4, NgAisVoiceSearch_ng_template_5__svg_ng_template_4_Template, 4, 1, "ng-template", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r10 = ɵngcc0.ɵɵreference(3);
    const _r12 = ɵngcc0.ɵɵreference(5);
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.isNotAllowedError())("ngIfThen", _r10)("ngIfElse", _r12);
} }
function NgAisVoiceSearch_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const transcript_r15 = ctx.transcript;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(transcript_r15);
} }
function bem(widgetName) {
    const cx = function (element, subElement) {
        let cssClass = `ais-${widgetName}`;
        if (element) {
            cssClass += `-${element}`;
        }
        if (subElement) {
            cssClass += `--${subElement}`;
        }
        return cssClass;
    };
    return cx;
}
function parseNumberInput(input) {
    return typeof input === 'string' ? parseInt(input, 10) : input;
}
function noop(...args) { }
function capitalize(s) {
    return s.charAt(0).toUpperCase() + s.slice(1);
}
// See https://github.com/algolia/instantsearch.js/blob/9296022fecadfbf82f15e837c215a1356eac4bc5/src/lib/utils/range.ts
function range({ start = 0, end, step = 1, }) {
    // We can't divide by 0 so we re-assign the step to 1 if it happens.
    const limitStep = step === 0 ? 1 : step;
    // In some cases the array to create has a decimal length.
    // We therefore need to round the value.
    // Example:
    //   { start: 1, end: 5000, step: 500 }
    //   => Array length = (5000 - 1) / 500 = 9.998
    const arrayLength = Math.round((end - start) / limitStep);
    return [...Array(arrayLength)].map((_, current) => start + current * limitStep);
}
// See https://github.com/algolia/react-instantsearch/blob/86dfe8674d566124af55a8f044051d0062786c1a/packages/react-instantsearch-core/src/core/utils.ts#L138-L142
function getPropertyByPath(object, path) {
    return path
        .replace(/\[(\d+)]/g, '.$1')
        .split('.')
        .reduce((current, key) => (current ? current[key] : undefined), object);
}

class TypedBaseWidget {
    constructor(widgetName) {
        this.updateState = (state, isFirstRendering) => {
            if (isFirstRendering) {
                Promise.resolve().then(() => {
                    this.state = state;
                });
            }
            else {
                this.state = state;
            }
        };
        this.cx = bem(widgetName);
    }
    get parent() {
        if (this.parentIndex) {
            return this.parentIndex;
        }
        return this.instantSearchInstance;
    }
    createWidget(connector, options) {
        this.widget = connector(this.updateState, noop)(options);
    }
    ngOnInit() {
        this.parent.addWidgets([this.widget]);
    }
    ngOnDestroy() {
        if (isPlatformBrowser(this.instantSearchInstance.platformId)) {
            this.parent.removeWidgets([this.widget]);
        }
    }
    /**
     * Helper to generate class names for an item
     * @param item element to generate a class name for
     */
    getItemClass(item) {
        const className = this.cx('item');
        if (item.isRefined) {
            return `${className} ${this.cx('item', 'selected')}`;
        }
        return className;
    }
}
TypedBaseWidget.ɵfac = function TypedBaseWidget_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };
TypedBaseWidget.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TypedBaseWidget, inputs: { autoHideContainer: "autoHideContainer" } });
TypedBaseWidget.propDecorators = {
    autoHideContainer: [{ type: Input }]
};


const VERSION = '4.0.1';

// this is needed for different webpack/typescript configurations
const algoliasearch$1 = algoliasearchProxy.default || algoliasearchProxy;
class NgAisInstantSearch {
    constructor(platformId) {
        this.platformId = platformId;
        this.instanceName = 'default';
        this.change = new EventEmitter();
        this.onRender = () => {
            this.change.emit({
                results: this.instantSearchInstance.helper.lastResults,
                state: this.instantSearchInstance.helper.state,
            });
        };
    }
    ngOnInit() {
        if (typeof this.config.searchClient.addAlgoliaAgent === 'function') {
            this.config.searchClient.addAlgoliaAgent(`angular (${VERSION$1.full})`);
            this.config.searchClient.addAlgoliaAgent(`angular-instantsearch (${VERSION})`);
        }
        this.instantSearchInstance = instantsearch(this.config);
        this.instantSearchInstance.on('render', this.onRender);
    }
    ngAfterViewInit() {
        this.instantSearchInstance.start();
    }
    ngOnDestroy() {
        if (this.instantSearchInstance) {
            this.instantSearchInstance.removeListener('render', this.onRender);
            this.instantSearchInstance.dispose();
        }
    }
    addWidgets(widgets) {
        this.instantSearchInstance.addWidgets(widgets);
    }
    removeWidgets(widgets) {
        this.instantSearchInstance.removeWidgets(widgets);
    }
    refresh() {
        this.instantSearchInstance.refresh();
    }
}
NgAisInstantSearch.ɵfac = function NgAisInstantSearch_Factory(t) { return new (t || NgAisInstantSearch)(ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };
NgAisInstantSearch.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisInstantSearch, selectors: [["ais-instantsearch"]], inputs: { instanceName: "instanceName", config: "config" }, outputs: { change: "change" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function NgAisInstantSearch_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
NgAisInstantSearch.ctorParameters = () => [
    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
];
NgAisInstantSearch.propDecorators = {
    config: [{ type: Input }],
    instanceName: [{ type: Input }],
    change: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisInstantSearch, [{
        type: Component,
        args: [{
                selector: 'ais-instantsearch',
                template: '<ng-content></ng-content>'
            }]
    }], function () { return [{ type: Object, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }]; }, { instanceName: [{
            type: Input
        }], change: [{
            type: Output
        }], config: [{
            type: Input
        }] }); })();

class NgAisIndex {
    constructor(
    // public API does not include SkipSelf, but the index widget should accept parents, avoiding itself.
    parentIndex, instantSearchInstance) {
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
    }
    get parent() {
        if (this.parentIndex) {
            return this.parentIndex;
        }
        return this.instantSearchInstance;
    }
    createWidget() {
        this.widget = indexWidget({
            indexName: this.indexName,
            indexId: this.indexId,
        });
    }
    addWidgets(widgets) {
        this.widget.addWidgets(widgets);
    }
    removeWidgets(widgets) {
        this.widget.removeWidgets(widgets);
    }
    ngOnInit() {
        this.createWidget();
        this.parent.addWidgets([this.widget]);
    }
    ngOnDestroy() {
        if (isPlatformBrowser(this.instantSearchInstance.platformId)) {
            this.parent.removeWidgets([this.widget]);
        }
    }
}
NgAisIndex.ɵfac = function NgAisIndex_Factory(t) { return new (t || NgAisIndex)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 12), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisIndex.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisIndex, selectors: [["ais-index"]], inputs: { indexName: "indexName", indexId: "indexId" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function NgAisIndex_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
NgAisIndex.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: SkipSelf }, { type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisIndex.propDecorators = {
    indexName: [{ type: Input }],
    indexId: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisIndex, [{
        type: Component,
        args: [{
                selector: 'ais-index',
                template: `<ng-content></ng-content>`
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: SkipSelf
            }, {
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { indexName: [{
            type: Input
        }], indexId: [{
            type: Input
        }] }); })();

class NgAisBreadcrumb extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('Breadcrumb');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.state = {
            createURL: () => '#',
            items: [],
            refine: noop,
            canRefine: false,
        };
    }
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    get items() {
        return this.state.items.map((item, idx) => (Object.assign(Object.assign({}, item), { separator: idx !== 0, isLast: idx === this.state.items.length - 1 })));
    }
    ngOnInit() {
        this.createWidget(connectBreadcrumb, {
            attributes: this.attributes,
            rootPath: this.rootPath,
            separator: this.separator,
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
    handleClick(event, item) {
        event.preventDefault();
        event.stopPropagation();
        if (item.value) {
            this.state.refine(item.value);
        }
    }
}
NgAisBreadcrumb.ɵfac = function NgAisBreadcrumb_Factory(t) { return new (t || NgAisBreadcrumb)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisBreadcrumb.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisBreadcrumb, selectors: [["ais-breadcrumb"]], inputs: { attributes: "attributes", rootPath: "rootPath", separator: "separator", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "ngClass", "click", 4, "ngFor", "ngForOf"], [3, "ngClass", "click"], ["aria-hidden", "true", 3, "class", 4, "ngIf"], [3, "class", "href", "click", 4, "ngIf"], [4, "ngIf"], ["aria-hidden", "true"], [3, "href", "click"]], template: function NgAisBreadcrumb_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgAisBreadcrumb_div_0_Template, 3, 5, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], encapsulation: 2 });
NgAisBreadcrumb.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisBreadcrumb.propDecorators = {
    attributes: [{ type: Input }],
    rootPath: [{ type: Input }],
    separator: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisBreadcrumb, [{
        type: Component,
        args: [{
                selector: 'ais-breadcrumb',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <ul [class]="cx('list')">
        <li
          *ngFor="let item of items"
          [ngClass]="[cx('item'), item.isLast ? cx('item', 'selected') : '']"
          (click)="handleClick($event, item)"
        >
          <span
            *ngIf="item.separator"
            [class]="cx('separator')"
            aria-hidden="true"
          >
            >
          </span>
          <a
            [class]="cx('link')"
            href="{{state.createURL(item.value)}}"
            *ngIf="!item.isLast"
            (click)="handleClick($event, item)"
          >
            {{item.label}}
          </a>

          <span *ngIf="item.isLast">
            {{item.label}}
          </span>
        </li>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { attributes: [{
            type: Input
        }], rootPath: [{
            type: Input
        }], separator: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisBreadcrumbModule {
}
NgAisBreadcrumbModule.ɵfac = function NgAisBreadcrumbModule_Factory(t) { return new (t || NgAisBreadcrumbModule)(); };
NgAisBreadcrumbModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisBreadcrumbModule });
NgAisBreadcrumbModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisBreadcrumbModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisBreadcrumb],
                entryComponents: [NgAisBreadcrumb],
                exports: [NgAisBreadcrumb],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisBreadcrumbModule, { declarations: function () { return [NgAisBreadcrumb]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisBreadcrumb]; } }); })();

class NgAisClearRefinements extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('ClearRefinements');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        // rendering options
        this.resetLabel = 'Clear refinements';
        this.state = {
            hasRefinements: false,
            canRefine: false,
            refine: noop,
            createURL: () => '#',
        };
    }
    get isHidden() {
        return !this.state.hasRefinements && this.autoHideContainer;
    }
    ngOnInit() {
        this.createWidget(connectClearRefinements, {
            includedAttributes: this.includedAttributes,
            excludedAttributes: this.excludedAttributes,
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
    handleClick(event) {
        event.preventDefault();
        if (this.state.hasRefinements) {
            this.state.refine();
        }
    }
}
NgAisClearRefinements.ɵfac = function NgAisClearRefinements_Factory(t) { return new (t || NgAisClearRefinements)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisClearRefinements.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisClearRefinements, selectors: [["ais-clear-refinements"]], inputs: { resetLabel: "resetLabel", includedAttributes: "includedAttributes", excludedAttributes: "excludedAttributes", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "disabled", "click"]], template: function NgAisClearRefinements_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgAisClearRefinements_div_0_Template, 3, 6, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
NgAisClearRefinements.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisClearRefinements.propDecorators = {
    resetLabel: [{ type: Input }],
    includedAttributes: [{ type: Input }],
    excludedAttributes: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisClearRefinements, [{
        type: Component,
        args: [{
                selector: 'ais-clear-refinements',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <button
        [class]="cx('button') + (!state.hasRefinements ? (' ' + cx('button', 'disabled')) : '')"
        (click)="handleClick($event)"
        [disabled]="!state.hasRefinements"
      >
        {{resetLabel}}
      </button>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { resetLabel: [{
            type: Input
        }], includedAttributes: [{
            type: Input
        }], excludedAttributes: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisClearRefinementsModule {
}
NgAisClearRefinementsModule.ɵfac = function NgAisClearRefinementsModule_Factory(t) { return new (t || NgAisClearRefinementsModule)(); };
NgAisClearRefinementsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisClearRefinementsModule });
NgAisClearRefinementsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisClearRefinementsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisClearRefinements],
                entryComponents: [NgAisClearRefinements],
                exports: [NgAisClearRefinements],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisClearRefinementsModule, { declarations: function () { return [NgAisClearRefinements]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisClearRefinements]; } }); })();

class NgAisCurrentRefinements extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('CurrentRefinements');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.state = {
            createURL: () => '#',
            refine: noop,
            items: [],
            canRefine: false,
        };
    }
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    ngOnInit() {
        this.createWidget(connectCurrentRefinements, {
            includedAttributes: this.includedAttributes,
            excludedAttributes: this.excludedAttributes,
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
    handleClick(event, refinement) {
        event.preventDefault();
        this.state.refine(refinement);
    }
}
NgAisCurrentRefinements.ɵfac = function NgAisCurrentRefinements_Factory(t) { return new (t || NgAisCurrentRefinements)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisCurrentRefinements.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisCurrentRefinements, selectors: [["ais-current-refinements"]], inputs: { includedAttributes: "includedAttributes", excludedAttributes: "excludedAttributes", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "class", 4, "ngFor", "ngForOf"], [3, "click"]], template: function NgAisCurrentRefinements_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgAisCurrentRefinements_div_0_Template, 2, 3, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], pipes: [ɵngcc1.TitleCasePipe], encapsulation: 2 });
NgAisCurrentRefinements.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisCurrentRefinements.propDecorators = {
    includedAttributes: [{ type: Input }],
    excludedAttributes: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisCurrentRefinements, [{
        type: Component,
        args: [{
                selector: 'ais-current-refinements',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <ul
        [class]="cx('list')"
        *ngFor="let item of state.items"
      >
        <li [class]="cx('item')">
          <span [class]="cx('label')">{{item.label | titlecase}}:</span>

          <span
            [class]="cx('category')"
            *ngFor="let refinement of item.refinements"
          >
            <span [class]="cx('categoryLabel')">{{refinement.label}}</span>
            <button [class]="cx('delete')" (click)="handleClick($event, refinement)">✕</button>
          </span>
        </li>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { includedAttributes: [{
            type: Input
        }], excludedAttributes: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisCurrentRefinementsModule {
}
NgAisCurrentRefinementsModule.ɵfac = function NgAisCurrentRefinementsModule_Factory(t) { return new (t || NgAisCurrentRefinementsModule)(); };
NgAisCurrentRefinementsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisCurrentRefinementsModule });
NgAisCurrentRefinementsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisCurrentRefinementsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisCurrentRefinements],
                entryComponents: [NgAisCurrentRefinements],
                exports: [NgAisCurrentRefinements],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisCurrentRefinementsModule, { declarations: function () { return [NgAisCurrentRefinements]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisCurrentRefinements]; } }); })();

class NgAisHierarchicalMenu extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('HierarchicalMenu');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.state = {
            createURL: () => '#',
            items: [],
            refine: noop,
            canRefine: false,
            isShowingMore: false,
            toggleShowMore: noop,
            canToggleShowMore: false,
            sendEvent: noop,
        };
    }
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    ngOnInit() {
        this.createWidget(connectHierarchicalMenu, {
            limit: parseNumberInput(this.limit),
            attributes: this.attributes,
            rootPath: this.rootPath,
            separator: this.separator,
            showParentLevel: this.showParentLevel,
            sortBy: this.sortBy,
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
}
NgAisHierarchicalMenu.ɵfac = function NgAisHierarchicalMenu_Factory(t) { return new (t || NgAisHierarchicalMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisHierarchicalMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisHierarchicalMenu, selectors: [["ais-hierarchical-menu"]], inputs: { attributes: "attributes", separator: "separator", rootPath: "rootPath", showParentLevel: "showParentLevel", limit: "limit", sortBy: "sortBy", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "item", "createURL", "refine", 4, "ngFor", "ngForOf"], [3, "item", "createURL", "refine"]], template: function NgAisHierarchicalMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgAisHierarchicalMenu_div_0_Template, 3, 5, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgForOf, NgAisHierarchicalMenuItem]; }, encapsulation: 2 });
NgAisHierarchicalMenu.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisHierarchicalMenu.propDecorators = {
    attributes: [{ type: Input }],
    separator: [{ type: Input }],
    rootPath: [{ type: Input }],
    showParentLevel: [{ type: Input }],
    limit: [{ type: Input }],
    sortBy: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHierarchicalMenu, [{
        type: Component,
        args: [{
                selector: 'ais-hierarchical-menu',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <ul [class]="cx('list') + ' ' + cx('list', 'lvl0')">
        <ais-hierarchical-menu-item
          *ngFor="let item of state.items"
          [item]="item"
          [createURL]="state.createURL"
          [refine]="state.refine"
        >
        </ais-hierarchical-menu-item>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { attributes: [{
            type: Input
        }], separator: [{
            type: Input
        }], rootPath: [{
            type: Input
        }], showParentLevel: [{
            type: Input
        }], limit: [{
            type: Input
        }], sortBy: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisHierarchicalMenuItem {
    constructor() {
        this.lvl = 1;
        this.cx = bem('HierarchicalMenu');
    }
    getItemClass(item) {
        let className = this.cx('item');
        if (item.isRefined) {
            className = `${className} ${this.cx('item', 'selected')}`;
        }
        if (this.isArray(item.data) && item.data.length > 0) {
            className = `${className} ${this.cx('item', 'parent')}`;
        }
        return className;
    }
    getListClass() {
        return `${this.cx('list')} ${this.cx('list', 'child')} ${this.cx('list', `lvl${this.lvl}`)}`;
    }
    isArray(potentialArray) {
        return Array.isArray(potentialArray);
    }
    handleClick(event, item) {
        event.preventDefault();
        event.stopPropagation();
        this.refine(item.value);
    }
}
NgAisHierarchicalMenuItem.ɵfac = function NgAisHierarchicalMenuItem_Factory(t) { return new (t || NgAisHierarchicalMenuItem)(); };
NgAisHierarchicalMenuItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisHierarchicalMenuItem, selectors: [["ais-hierarchical-menu-item"]], inputs: { lvl: "lvl", refine: "refine", createURL: "createURL", item: "item" }, decls: 7, vars: 12, consts: [[3, "click"], [3, "href", "click"], [3, "class", 4, "ngIf"], [3, "item", "createURL", "refine", "lvl", 4, "ngFor", "ngForOf"], [3, "item", "createURL", "refine", "lvl"]], template: function NgAisHierarchicalMenuItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵlistener("click", function NgAisHierarchicalMenuItem_Template_li_click_0_listener($event) { return ctx.handleClick($event, ctx.item); });
        ɵngcc0.ɵɵelementStart(1, "a", 1);
        ɵngcc0.ɵɵlistener("click", function NgAisHierarchicalMenuItem_Template_a_click_1_listener($event) { return ctx.handleClick($event, ctx.item); });
        ɵngcc0.ɵɵelementStart(2, "span");
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "span");
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, NgAisHierarchicalMenuItem_ul_6_Template, 2, 3, "ul", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getItemClass(ctx.item));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("link"));
        ɵngcc0.ɵɵpropertyInterpolate("href", ctx.createURL(ctx.item.value), ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("label"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.item.label);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("count"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.item.count);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.item.isRefined && ctx.isArray(ctx.item.data) && ctx.item.data.length > 0);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, NgAisHierarchicalMenuItem], encapsulation: 2 });
NgAisHierarchicalMenuItem.propDecorators = {
    lvl: [{ type: Input }],
    refine: [{ type: Input }],
    createURL: [{ type: Input }],
    item: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHierarchicalMenuItem, [{
        type: Component,
        args: [{
                selector: 'ais-hierarchical-menu-item',
                template: `
    <li
      [class]="getItemClass(item)"
      (click)="handleClick($event, item)"
    >
      <a
        [class]="cx('link')"
        href="{{createURL(item.value)}}"
        (click)="handleClick($event, item)"
      >
        <span [class]="cx('label')">{{item.label}}</span>
        <span [class]="cx('count')">{{item.count}}</span>
      </a>

      <ul
        [class]="getListClass()"
        *ngIf="item.isRefined && isArray(item.data) && item.data.length > 0"
      >
        <ais-hierarchical-menu-item
          *ngFor="let child of item.data"
          [item]="child"
          [createURL]="createURL"
          [refine]="refine"
          [lvl]="lvl + 1"
        >
        </ais-hierarchical-menu-item>
      </ul>
    </li>
  `
            }]
    }], function () { return []; }, { lvl: [{
            type: Input
        }], refine: [{
            type: Input
        }], createURL: [{
            type: Input
        }], item: [{
            type: Input
        }] }); })();

class NgAisHierarchicalMenuModule {
}
NgAisHierarchicalMenuModule.ɵfac = function NgAisHierarchicalMenuModule_Factory(t) { return new (t || NgAisHierarchicalMenuModule)(); };
NgAisHierarchicalMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisHierarchicalMenuModule });
NgAisHierarchicalMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHierarchicalMenuModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisHierarchicalMenu, NgAisHierarchicalMenuItem],
                entryComponents: [NgAisHierarchicalMenu],
                exports: [NgAisHierarchicalMenu],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisHierarchicalMenuModule, { declarations: function () { return [NgAisHierarchicalMenu, NgAisHierarchicalMenuItem]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisHierarchicalMenu]; } }); })();

class NgAisHitsPerPage extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('HitsPerPage');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.state = {
            items: [],
            refine: noop,
            hasNoResults: true, // TODO: disable <select> when true
        };
    }
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    ngOnInit() {
        this.createWidget(connectHitsPerPage, {
            items: this.items,
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
}
NgAisHitsPerPage.ɵfac = function NgAisHitsPerPage_Factory(t) { return new (t || NgAisHitsPerPage)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisHitsPerPage.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisHitsPerPage, selectors: [["ais-hits-per-page"]], inputs: { items: "items", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "change"], [3, "class", "value", "selected", 4, "ngFor", "ngForOf"], [3, "value", "selected"]], template: function NgAisHitsPerPage_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgAisHitsPerPage_div_0_Template, 3, 5, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
NgAisHitsPerPage.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisHitsPerPage.propDecorators = {
    items: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHitsPerPage, [{
        type: Component,
        args: [{
                selector: 'ais-hits-per-page',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <select
        [class]="cx('select')"
        (change)="state.refine($event.target.value)"
      >
        <option
          [class]="cx('option')"
          *ngFor="let item of state.items"
          [value]="item.value"
          [selected]="item.isRefined"
        >
          {{item.label}}
        </option>
      </select>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { items: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisHitsPerPageModule {
}
NgAisHitsPerPageModule.ɵfac = function NgAisHitsPerPageModule_Factory(t) { return new (t || NgAisHitsPerPageModule)(); };
NgAisHitsPerPageModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisHitsPerPageModule });
NgAisHitsPerPageModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHitsPerPageModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisHitsPerPage],
                entryComponents: [NgAisHitsPerPage],
                exports: [NgAisHitsPerPage],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisHitsPerPageModule, { declarations: function () { return [NgAisHitsPerPage]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisHitsPerPage]; } }); })();

class NgAisHighlight {
    constructor() {
        this.tagName = 'em';
        this.cx = bem('Highlight');
    }
    get content() {
        if (this.attribute === 'highlighted') {
            return this.hit.highlighted
                ? this.replaceWithTagName(this.hit.highlighted)
                : this.hit.label;
        }
        if (this.hit.hasOwnProperty('_highlightResult')) {
            const attributeHighlighted = getPropertyByPath(this.hit._highlightResult, this.attribute);
            // check that the attributeHighlighted is a string
            if (attributeHighlighted !== undefined &&
                typeof attributeHighlighted.value === 'string') {
                return this.replaceWithTagName(attributeHighlighted.value);
            }
        }
        const fallback = getPropertyByPath(this.hit, this.attribute);
        if (!fallback) {
            console.warn(`Could not find attribute [${this.attribute}] into hit object, will display an empty string.`);
            return '';
        }
        return fallback;
    }
    replaceWithTagName(value) {
        return value
            .replace(new RegExp('<em>', 'g'), `<${this.tagName} class="${this.cx('highlighted')}">`)
            .replace(new RegExp('</em>', 'g'), `</${this.tagName}>`);
    }
}
NgAisHighlight.ɵfac = function NgAisHighlight_Factory(t) { return new (t || NgAisHighlight)(); };
NgAisHighlight.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisHighlight, selectors: [["ais-highlight"]], inputs: { tagName: "tagName", attribute: "attribute", hit: "hit" }, decls: 1, vars: 3, consts: [[3, "innerHtml"]], template: function NgAisHighlight_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵproperty("innerHtml", ctx.content, ɵngcc0.ɵɵsanitizeHtml);
    } }, encapsulation: 2 });
NgAisHighlight.propDecorators = {
    attribute: [{ type: Input }],
    hit: [{ type: Input }],
    tagName: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHighlight, [{
        type: Component,
        args: [{
                selector: 'ais-highlight',
                template: `<span [class]="cx()" [innerHtml]="content"></span>`
            }]
    }], function () { return []; }, { tagName: [{
            type: Input
        }], attribute: [{
            type: Input
        }], hit: [{
            type: Input
        }] }); })();

class NgAisHighlightModule {
}
NgAisHighlightModule.ɵfac = function NgAisHighlightModule_Factory(t) { return new (t || NgAisHighlightModule)(); };
NgAisHighlightModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisHighlightModule });
NgAisHighlightModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHighlightModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisHighlight],
                entryComponents: [NgAisHighlight],
                exports: [NgAisHighlight],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisHighlightModule, { declarations: function () { return [NgAisHighlight]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisHighlight]; } }); })();

class NgAisHits extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('Hits');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.state = {
            hits: [],
            results: undefined,
            bindEvent: undefined,
            sendEvent: undefined,
        };
        this.updateState = (state, isFirstRendering) => {
            if (isFirstRendering)
                return;
            this.state = state;
        };
    }
    ngOnInit() {
        this.createWidget(connectHitsWithInsights, {
            escapeHTML: this.escapeHTML,
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
}
NgAisHits.ɵfac = function NgAisHits_Factory(t) { return new (t || NgAisHits)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisHits.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisHits, selectors: [["ais-hits"]], contentQueries: function NgAisHits_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { escapeHTML: "escapeHTML", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 5, consts: [[4, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngIf"], [3, "class", 4, "ngFor", "ngForOf"], ["attribute", "name", 3, "hit"]], template: function NgAisHits_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵtemplate(1, NgAisHits_ng_container_1_Template, 1, 0, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(2, NgAisHits_div_2_Template, 3, 3, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template)("ngTemplateOutletContext", ctx.state);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf, ɵngcc1.NgForOf, NgAisHighlight], encapsulation: 2 });
NgAisHits.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisHits.propDecorators = {
    template: [{ type: ContentChild, args: [TemplateRef, { static: false },] }],
    escapeHTML: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHits, [{
        type: Component,
        args: [{
                selector: 'ais-hits',
                template: `
    <div [class]="cx()">
      <ng-container *ngTemplateOutlet="template; context: state"></ng-container>

      <!-- default rendering if no template specified -->
      <div *ngIf="!template">
        <ul [class]="cx('list')">
          <li
            [class]="cx('item')"
            *ngFor="let hit of state.hits"
          >
            <ais-highlight attribute="name" [hit]="hit">
            </ais-highlight>
          </li>
        </ul>
      </div>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { template: [{
            type: ContentChild,
            args: [TemplateRef, { static: false }]
        }], escapeHTML: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisHitsModule {
}
NgAisHitsModule.ɵfac = function NgAisHitsModule_Factory(t) { return new (t || NgAisHitsModule)(); };
NgAisHitsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisHitsModule });
NgAisHitsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, NgAisHighlightModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHitsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisHits],
                entryComponents: [NgAisHits],
                exports: [NgAisHits],
                imports: [CommonModule, NgAisHighlightModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisHitsModule, { declarations: function () { return [NgAisHits]; }, imports: function () { return [CommonModule, NgAisHighlightModule]; }, exports: function () { return [NgAisHits]; } }); })();

class NgAisIndexModule {
    static forRoot() {
        return {
            ngModule: NgAisIndexModule,
            providers: [],
        };
    }
}
NgAisIndexModule.ɵfac = function NgAisIndexModule_Factory(t) { return new (t || NgAisIndexModule)(); };
NgAisIndexModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisIndexModule });
NgAisIndexModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisIndexModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisIndex],
                entryComponents: [NgAisIndex],
                exports: [NgAisIndex],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisIndexModule, { declarations: function () { return [NgAisIndex]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisIndex]; } }); })();

class NgAisInfiniteHits extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('InfiniteHits');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.showPrevious = false;
        this.showPreviousLabel = 'Show previous results';
        this.showMoreLabel = 'Show more results';
        this.state = {
            hits: [],
            results: undefined,
            currentPageHits: [],
            isFirstPage: false,
            isLastPage: false,
            showMore: noop,
            showPrevious: noop,
            sendEvent: noop,
            bindEvent: () => '',
        };
        this.updateState = (state, isFirstRendering) => {
            if (isFirstRendering)
                return;
            this.state = state;
        };
    }
    ngOnInit() {
        this.createWidget(connectInfiniteHitsWithInsights, {
            escapeHTML: this.escapeHTML,
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
    showMoreHandler(event) {
        event.preventDefault();
        this.state.showMore();
    }
    showPreviousHandler(event) {
        event.preventDefault();
        this.state.showPrevious();
    }
}
NgAisInfiniteHits.ɵfac = function NgAisInfiniteHits_Factory(t) { return new (t || NgAisInfiniteHits)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisInfiniteHits.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisInfiniteHits, selectors: [["ais-infinite-hits"]], contentQueries: function NgAisInfiniteHits_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { showPrevious: "showPrevious", showPreviousLabel: "showPreviousLabel", showMoreLabel: "showMoreLabel", escapeHTML: "escapeHTML", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 7, consts: [[4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "ngClass", "disabled", "click", 4, "ngIf"], [4, "ngIf"], [3, "ngClass", "disabled", "click"], [3, "class", 4, "ngFor", "ngForOf"], ["attribute", "name", 3, "hit"]], template: function NgAisInfiniteHits_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵtemplate(1, NgAisInfiniteHits_ng_container_1_Template, 1, 0, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(2, NgAisInfiniteHits_button_2_Template, 2, 6, "button", 1);
        ɵngcc0.ɵɵtemplate(3, NgAisInfiniteHits_div_3_Template, 3, 3, "div", 2);
        ɵngcc0.ɵɵtemplate(4, NgAisInfiniteHits_button_4_Template, 2, 6, "button", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template)("ngTemplateOutletContext", ctx.state);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showPrevious && !ctx.template);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgForOf, NgAisHighlight], encapsulation: 2 });
NgAisInfiniteHits.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisInfiniteHits.propDecorators = {
    template: [{ type: ContentChild, args: [TemplateRef, { static: false },] }],
    escapeHTML: [{ type: Input }],
    showPrevious: [{ type: Input }],
    showPreviousLabel: [{ type: Input }],
    showMoreLabel: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisInfiniteHits, [{
        type: Component,
        args: [{
                selector: 'ais-infinite-hits',
                template: `
    <div [class]="cx()">
      <ng-container *ngTemplateOutlet="template; context: state"></ng-container>

      <!-- default rendering if no template specified -->
      <button
        [ngClass]="[cx('loadPrevious'), this.state.isFirstPage ? cx('loadPrevious', 'disabled') : '']"
        (click)="showPreviousHandler($event)"
        [disabled]="state.isFirstPage"
        *ngIf="showPrevious && !template"
      >
        {{showPreviousLabel}}
      </button>

      <div *ngIf="!template">
        <ul [class]="cx('list')">
          <li
            [class]="cx('item')"
            *ngFor="let hit of state.hits"
          >
            <ais-highlight attribute="name" [hit]="hit">
            </ais-highlight>
          </li>
        </ul>
      </div>

      <button
        [ngClass]="[cx('loadMore'), this.state.isLastPage ? cx('loadMore', 'disabled') : '']"
        (click)="showMoreHandler($event)"
        [disabled]="state.isLastPage"
        *ngIf="!template"
      >
        {{showMoreLabel}}
      </button>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { showPrevious: [{
            type: Input
        }], showPreviousLabel: [{
            type: Input
        }], showMoreLabel: [{
            type: Input
        }], template: [{
            type: ContentChild,
            args: [TemplateRef, { static: false }]
        }], escapeHTML: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisInfiniteHitsModule {
}
NgAisInfiniteHitsModule.ɵfac = function NgAisInfiniteHitsModule_Factory(t) { return new (t || NgAisInfiniteHitsModule)(); };
NgAisInfiniteHitsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisInfiniteHitsModule });
NgAisInfiniteHitsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, NgAisHighlightModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisInfiniteHitsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisInfiniteHits],
                entryComponents: [NgAisInfiniteHits],
                exports: [NgAisInfiniteHits],
                imports: [CommonModule, NgAisHighlightModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisInfiniteHitsModule, { declarations: function () { return [NgAisInfiniteHits]; }, imports: function () { return [CommonModule, NgAisHighlightModule]; }, exports: function () { return [NgAisInfiniteHits]; } }); })();

class NgAisInstantSearchModule {
    static forRoot() {
        return {
            ngModule: NgAisInstantSearchModule,
            providers: [],
        };
    }
}
NgAisInstantSearchModule.ɵfac = function NgAisInstantSearchModule_Factory(t) { return new (t || NgAisInstantSearchModule)(); };
NgAisInstantSearchModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisInstantSearchModule });
NgAisInstantSearchModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisInstantSearchModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisInstantSearch],
                entryComponents: [NgAisInstantSearch],
                exports: [NgAisInstantSearch],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisInstantSearchModule, { declarations: function () { return [NgAisInstantSearch]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisInstantSearch]; } }); })();

class NgAisMenu extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('Menu');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        // rendering options
        this.showMoreLabel = 'Show more';
        this.showLessLabel = 'Show less';
        this.state = {
            items: [],
            refine: noop,
            createURL: () => '#',
            canRefine: false,
            isShowingMore: false,
            canToggleShowMore: false,
            toggleShowMore: noop,
            sendEvent: noop,
        };
    }
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    get showMoreClass() {
        let className = this.cx('showMore');
        if (!this.state.canToggleShowMore) {
            className = `${className} ${this.cx('showMore', 'disabled')}`;
        }
        return className;
    }
    ngOnInit() {
        this.createWidget(connectMenu, {
            attribute: this.attribute,
            showMore: this.showMore,
            limit: this.limit,
            showMoreLimit: this.showMoreLimit,
            sortBy: this.sortBy,
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
    handleClick(event, value) {
        event.preventDefault();
        event.stopPropagation();
        this.state.refine(value);
    }
}
NgAisMenu.ɵfac = function NgAisMenu_Factory(t) { return new (t || NgAisMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisMenu, selectors: [["ais-menu"]], inputs: { showMoreLabel: "showMoreLabel", showLessLabel: "showLessLabel", attribute: "attribute", showMore: "showMore", limit: "limit", showMoreLimit: "showMoreLimit", sortBy: "sortBy", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "class", "click", 4, "ngFor", "ngForOf"], [3, "class", "disabled", "click", 4, "ngIf"], [3, "click"], [3, "href", "click"], [3, "disabled", "click"]], template: function NgAisMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgAisMenu_div_0_Template, 4, 6, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
NgAisMenu.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisMenu.propDecorators = {
    showMoreLabel: [{ type: Input }],
    showLessLabel: [{ type: Input }],
    attribute: [{ type: Input }],
    showMore: [{ type: Input }],
    limit: [{ type: Input }],
    showMoreLimit: [{ type: Input }],
    sortBy: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisMenu, [{
        type: Component,
        args: [{
                selector: 'ais-menu',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <ul [class]="cx('list')">
        <li
          [class]="getItemClass(item)"
          *ngFor="let item of state.items"
          (click)="handleClick($event, item.value)"
        >
          <a
            href="{{state.createURL(item.value)}}"
            [class]="cx('link')"
            (click)="handleClick($event, item.value)"
          >
            <span [class]="cx('label')">{{item.label}}</span>
            <span [class]="cx('count')">{{item.count}}</span>
          </a>
        </li>
      </ul>

      <button
        *ngIf="showMore"
        (click)="state.toggleShowMore()"
        [class]="showMoreClass"
        [disabled]="!state.canToggleShowMore"
      >
        {{state.isShowingMore ? showLessLabel : showMoreLabel}}
      </button>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { showMoreLabel: [{
            type: Input
        }], showLessLabel: [{
            type: Input
        }], attribute: [{
            type: Input
        }], showMore: [{
            type: Input
        }], limit: [{
            type: Input
        }], showMoreLimit: [{
            type: Input
        }], sortBy: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisMenuModule {
}
NgAisMenuModule.ɵfac = function NgAisMenuModule_Factory(t) { return new (t || NgAisMenuModule)(); };
NgAisMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisMenuModule });
NgAisMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisMenuModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisMenu],
                entryComponents: [NgAisMenu],
                exports: [NgAisMenu],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisMenuModule, { declarations: function () { return [NgAisMenu]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisMenu]; } }); })();

class NgAisNumericMenu extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('NumericMenu');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.state = {
            items: [],
            refine: noop,
            createURL: () => '#',
            hasNoResults: true,
            sendEvent: noop,
        };
    }
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    ngOnInit() {
        this.createWidget(connectNumericMenu, {
            attribute: this.attribute,
            items: this.items,
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
    refine(event, item) {
        event.preventDefault();
        event.stopPropagation();
        this.state.refine(item.value);
    }
}
NgAisNumericMenu.ɵfac = function NgAisNumericMenu_Factory(t) { return new (t || NgAisNumericMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisNumericMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisNumericMenu, selectors: [["ais-numeric-menu"]], inputs: { attribute: "attribute", items: "items", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "class", 4, "ngFor", "ngForOf"], ["type", "radio", "name", "NumericMenu", 3, "checked", "change"]], template: function NgAisNumericMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgAisNumericMenu_div_0_Template, 3, 5, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
NgAisNumericMenu.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisNumericMenu.propDecorators = {
    attribute: [{ type: Input }],
    items: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisNumericMenu, [{
        type: Component,
        args: [{
                selector: 'ais-numeric-menu',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <ul [class]="cx('list')">
        <li
          [class]="getItemClass(item)"
          *ngFor="let item of state.items"
        >
          <label [class]="cx('label')">
            <input
              [class]="cx('radio')"
              type="radio"
              name="NumericMenu"
              [checked]="item.isRefined"
              (change)="refine($event, item)"
            />
            <span [class]="cx('labelText')">{{item.label}}</span>
          </label>
        </li>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { attribute: [{
            type: Input
        }], items: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisNumericMenuModule {
}
NgAisNumericMenuModule.ɵfac = function NgAisNumericMenuModule_Factory(t) { return new (t || NgAisNumericMenuModule)(); };
NgAisNumericMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisNumericMenuModule });
NgAisNumericMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisNumericMenuModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisNumericMenu],
                entryComponents: [NgAisNumericMenu],
                exports: [NgAisNumericMenu],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisNumericMenuModule, { declarations: function () { return [NgAisNumericMenu]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisNumericMenu]; } }); })();

class NgAisPagination extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('Pagination');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        // rendering options
        this.showFirst = true;
        this.showLast = true;
        this.showPrevious = true;
        this.showNext = true;
        // instance options
        this.padding = 3;
        // TODO: check if this works, padding and totalPages are most likely strings when passed to the template
        this.state = {
            createURL: () => '#',
            currentRefinement: 0,
            nbHits: 0,
            nbPages: 0,
            refine: noop,
            pages: [],
            canRefine: false,
            isFirstPage: false,
            isLastPage: false,
        };
    }
    get pages() {
        const { nbPages, currentRefinement } = this.state;
        const pagesArray = Array.apply(null, { length: nbPages }).map(Number.call, Number);
        const pagesPadding = typeof this.padding === 'string'
            ? parseInt(this.padding, 10)
            : this.padding;
        if (pagesPadding && pagesPadding > 0) {
            // should not display pages that does not exists
            if (nbPages < pagesPadding * 2 + 1) {
                return pagesArray;
            }
            const minDelta = currentRefinement - pagesPadding - 1;
            const maxDelta = currentRefinement + pagesPadding + 1;
            if (minDelta < 0) {
                return range({
                    start: 0,
                    end: currentRefinement + pagesPadding + Math.abs(minDelta),
                });
            }
            if (maxDelta > nbPages) {
                return range({
                    start: currentRefinement - pagesPadding - (maxDelta - nbPages),
                    end: nbPages,
                });
            }
            return range({
                start: currentRefinement - pagesPadding,
                end: currentRefinement + pagesPadding + 1,
            });
        }
        return pagesArray;
    }
    ngOnInit() {
        this.createWidget(connectPagination, {
            totalPages: parseNumberInput(this.totalPages),
        });
        super.ngOnInit();
    }
    refine(event, page) {
        event.stopPropagation();
        event.preventDefault();
        if (page < 0 ||
            page === this.state.currentRefinement ||
            page >= this.state.nbPages) {
            return;
        }
        this.state.refine(page);
    }
}
NgAisPagination.ɵfac = function NgAisPagination_Factory(t) { return new (t || NgAisPagination)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisPagination.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisPagination, selectors: [["ais-pagination"]], inputs: { showFirst: "showFirst", showLast: "showLast", showPrevious: "showPrevious", showNext: "showNext", padding: "padding", totalPages: "totalPages" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 7, vars: 11, consts: [[3, "ngClass"], [3, "class", "click", 4, "ngIf"], [3, "class", "click", 4, "ngFor", "ngForOf"], [3, "click"], [3, "href"]], template: function NgAisPagination_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "ul");
        ɵngcc0.ɵɵtemplate(2, NgAisPagination_li_2_Template, 3, 5, "li", 1);
        ɵngcc0.ɵɵtemplate(3, NgAisPagination_li_3_Template, 3, 5, "li", 1);
        ɵngcc0.ɵɵtemplate(4, NgAisPagination_li_4_Template, 3, 6, "li", 2);
        ɵngcc0.ɵɵtemplate(5, NgAisPagination_li_5_Template, 3, 5, "li", 1);
        ɵngcc0.ɵɵtemplate(6, NgAisPagination_li_6_Template, 3, 5, "li", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(8, _c1, ctx.cx(), ctx.state.nbPages <= 1 ? ctx.cx("", "noRefinement") : ""));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("list"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showFirst);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showPrevious);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.pages);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showNext);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showLast);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
NgAisPagination.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisPagination.propDecorators = {
    showFirst: [{ type: Input }],
    showLast: [{ type: Input }],
    showPrevious: [{ type: Input }],
    showNext: [{ type: Input }],
    padding: [{ type: Input }],
    totalPages: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisPagination, [{
        type: Component,
        args: [{
                selector: 'ais-pagination',
                template: `
    <div [ngClass]="[cx(), state.nbPages <= 1 ? cx('', 'noRefinement') : '']">
      <ul [class]="cx('list')">
        <li
          *ngIf="showFirst"
          (click)="refine($event, 0)"
          [class]="
            cx('item') +
            ' ' +
            cx('item', 'firstPage') +
            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')
          "
        >
          <a
            [href]="state.createURL(0)"
            [class]="cx('link')"
          >
            ‹‹
          </a>
        </li>

        <li
          *ngIf="showPrevious"
          (click)="refine($event, state.currentRefinement - 1)"
          [class]="
            cx('item') +
            ' ' +
            cx('item', 'previousPage') +
            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')
          "
        >
          <a
            [href]="state.createURL(state.currentRefinement - 1)"
            [class]="cx('link')"
          >
            ‹
          </a>
        </li>

        <li
          [class]="
            cx('item') +
            ' ' +
            cx('item', 'page') +
            (state.currentRefinement === page ? ' ' + cx('item', 'selected') : '')
          "
          *ngFor="let page of pages"
          (click)="refine($event, page)"
        >
          <a
            [class]="cx('link')"
            [href]="state.createURL(page)"
          >
            {{page + 1}}
          </a>
        </li>

        <li
          *ngIf="showNext"
          (click)="refine($event, state.currentRefinement + 1)"
          [class]="
            cx('item') +
            ' ' +
            cx('item', 'nextPage') +
            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')
          "
        >
          <a
            [href]="state.createURL(state.currentRefinement + 1)"
            [class]="cx('link')"
          >
            ›
          </a>
        </li>

        <li
          *ngIf="showLast"
          (click)="refine($event, state.nbPages - 1)"
          [class]="
            cx('item') +
            ' ' +
            cx('item', 'lastPage') +
            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')
          "
        >
          <a
            [href]="state.createURL(state.nbPages - 1)"
            [class]="cx('link')"
          >
            ››
          </a>
        </li>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { showFirst: [{
            type: Input
        }], showLast: [{
            type: Input
        }], showPrevious: [{
            type: Input
        }], showNext: [{
            type: Input
        }], padding: [{
            type: Input
        }], totalPages: [{
            type: Input
        }] }); })();

class NgAisPaginationModule {
}
NgAisPaginationModule.ɵfac = function NgAisPaginationModule_Factory(t) { return new (t || NgAisPaginationModule)(); };
NgAisPaginationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisPaginationModule });
NgAisPaginationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisPaginationModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisPagination],
                entryComponents: [NgAisPagination],
                exports: [NgAisPagination],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisPaginationModule, { declarations: function () { return [NgAisPagination]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisPagination]; } }); })();

class NgAisRangeSlider extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('RangeSlider');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        // rendering options
        this.pips = true;
        this.tooltips = true;
        this.state = {
            canRefine: false,
            format: {
                from: () => '',
                to: () => '',
            },
            range: { min: 0, max: 1 },
            refine: noop,
            start: [0, 1],
            sendEvent: noop,
        };
        this.updateState = (state, isFirstRendering) => {
            if (isFirstRendering) {
                // create slider
                const config = {
                    animate: false,
                    behaviour: 'snap',
                    connect: true,
                    range: { min: 0, max: 1 },
                    start: [0, 1],
                    step: this.step,
                    tooltips: this.tooltips && [
                        { to: this.formatTooltip },
                        { to: this.formatTooltip },
                    ],
                };
                // tslint:disable-next-line: no-boolean-literal-compare (pips is @Input, so could be not a boolean)
                if (this.pips === true || typeof this.pips === 'undefined') {
                    Object.assign(config, {
                        pips: {
                            density: 3,
                            mode: 'positions',
                            stepped: true,
                            values: [0, 50, 100],
                        },
                    });
                }
                else if (this.pips !== undefined) {
                    Object.assign(config, { pips: this.pips });
                }
                this.slider = noUiSlider.create(this.sliderContainer.nativeElement, config);
                // register listen events
                this.sliderContainer.nativeElement.noUiSlider.on('change', this.handleChange);
            }
            // update component inner state
            this.state = state;
            // update the slider state
            const { range: { min, max }, start, } = state;
            const disabled = min === max;
            const range = disabled ? { min, max: max + 0.0001 } : { min, max };
            // TODO: test this as we're nolonger passing disable
            // it seems the API has changed: slider.setAttribute('disabled', true) / slider.removeAttribute('disabled');
            // see: https://refreshless.com/nouislider/more/#section-disable
            this.slider.updateOptions({ range, start });
        };
        this.handleChange = (values) => {
            this.state.refine(values);
        };
        this.formatTooltip = (value) => {
            return value.toFixed(parseNumberInput(this.precision));
        };
    }
    get step() {
        // compute step from the precision value
        const precision = parseNumberInput(this.precision) || 2;
        return 1 / Math.pow(10, precision);
    }
    ngOnInit() {
        this.createWidget(connectRange, {
            attribute: this.attribute,
            max: parseNumberInput(this.max),
            min: parseNumberInput(this.min),
            precision: parseNumberInput(this.precision),
        });
        super.ngOnInit();
    }
}
NgAisRangeSlider.ɵfac = function NgAisRangeSlider_Factory(t) { return new (t || NgAisRangeSlider)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisRangeSlider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisRangeSlider, selectors: [["ais-range-slider"]], viewQuery: function NgAisRangeSlider_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c2, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sliderContainer = _t.first);
    } }, inputs: { pips: "pips", tooltips: "tooltips", attribute: "attribute", min: "min", max: "max", precision: "precision" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 4, consts: [["sliderContainer", ""]], template: function NgAisRangeSlider_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵelement(2, "div", null, 0);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("body"));
    } }, encapsulation: 2 });
NgAisRangeSlider.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisRangeSlider.propDecorators = {
    sliderContainer: [{ type: ViewChild, args: ['sliderContainer', { static: false },] }],
    pips: [{ type: Input }],
    tooltips: [{ type: Input }],
    attribute: [{ type: Input }],
    min: [{ type: Input }],
    max: [{ type: Input }],
    precision: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRangeSlider, [{
        type: Component,
        args: [{
                selector: 'ais-range-slider',
                template: `
    <div [class]="cx()">
      <div [class]="cx('body')">
        <div #sliderContainer></div>
      </div>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { pips: [{
            type: Input
        }], tooltips: [{
            type: Input
        }], sliderContainer: [{
            type: ViewChild,
            args: ['sliderContainer', { static: false }]
        }], attribute: [{
            type: Input
        }], min: [{
            type: Input
        }], max: [{
            type: Input
        }], precision: [{
            type: Input
        }] }); })();

class NgAisRangeSliderModule {
}
NgAisRangeSliderModule.ɵfac = function NgAisRangeSliderModule_Factory(t) { return new (t || NgAisRangeSliderModule)(); };
NgAisRangeSliderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisRangeSliderModule });
NgAisRangeSliderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRangeSliderModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisRangeSlider],
                entryComponents: [NgAisRangeSlider],
                exports: [NgAisRangeSlider],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisRangeSliderModule, { declarations: function () { return [NgAisRangeSlider]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisRangeSlider]; } }); })();

class NgAisRefinementList extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('RefinementList');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        // rendering options
        this.showMoreLabel = 'Show more';
        this.showLessLabel = 'Show less';
        this.searchPlaceholder = 'Search here...';
        this.state = {
            canRefine: false,
            canToggleShowMore: false,
            createURL: () => '',
            isShowingMore: false,
            items: [],
            refine: noop,
            toggleShowMore: noop,
            searchForItems: noop,
            isFromSearch: false,
            hasExhaustiveItems: false,
            sendEvent: noop,
        };
    }
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    ngOnInit() {
        this.createWidget(connectRefinementList, {
            showMore: this.showMore,
            limit: parseNumberInput(this.limit),
            showMoreLimit: parseNumberInput(this.showMoreLimit),
            attribute: this.attribute,
            operator: this.operator,
            sortBy: this.sortBy,
            escapeFacetValues: true,
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
    refine(event, item) {
        event.preventDefault();
        event.stopPropagation();
        if (this.state.canRefine) {
            // update UI directly, it will update the checkbox state
            item.isRefined = !item.isRefined;
            // refine through Algolia API
            this.state.refine(item.value);
        }
    }
}
NgAisRefinementList.ɵfac = function NgAisRefinementList_Factory(t) { return new (t || NgAisRefinementList)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisRefinementList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisRefinementList, selectors: [["ais-refinement-list"]], inputs: { showMoreLabel: "showMoreLabel", showLessLabel: "showLessLabel", searchPlaceholder: "searchPlaceholder", searchable: "searchable", attribute: "attribute", operator: "operator", limit: "limit", showMore: "showMore", showMoreLimit: "showMoreLimit", sortBy: "sortBy", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "class", "click", 4, "ngFor", "ngForOf"], [3, "class", "disabled", "click", 4, "ngIf"], [3, "search", "searchPlaceholder"], [3, "click"], ["type", "checkbox", 3, "value", "checked"], ["attribute", "highlighted", 3, "hit"], [3, "disabled", "click"]], template: function NgAisRefinementList_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgAisRefinementList_div_0_Template, 5, 7, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgForOf, NgAisFacetsSearch, NgAisHighlight]; }, encapsulation: 2 });
NgAisRefinementList.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisRefinementList.propDecorators = {
    showMoreLabel: [{ type: Input }],
    showLessLabel: [{ type: Input }],
    searchable: [{ type: Input }],
    searchPlaceholder: [{ type: Input }],
    attribute: [{ type: Input }],
    operator: [{ type: Input }],
    limit: [{ type: Input }],
    showMore: [{ type: Input }],
    showMoreLimit: [{ type: Input }],
    sortBy: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRefinementList, [{
        type: Component,
        args: [{
                selector: 'ais-refinement-list',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <div
        *ngIf="searchable"
        [class]="cx('searchBox')"
      >
        <ais-facets-search
          [search]="state.searchForItems"
          [searchPlaceholder]="searchPlaceholder"
        >
        </ais-facets-search>
      </div>

      <ul [class]="cx('list')">
        <li
          [class]="getItemClass(item)"
          *ngFor="let item of state.items"
          (click)="refine($event, item)"
        >
          <label [class]="cx('label')">
            <input
              [class]="cx('checkbox')"
              type="checkbox"
              value="{{item.value}}"
              [checked]="item.isRefined"
            />
            <span [class]="cx('labelText')">
              <ais-highlight attribute="highlighted" [hit]="item"></ais-highlight>
            </span>
            <span [class]="cx('count')">{{item.count}}</span>
          </label>
        </li>
      </ul>

      <button
        [class]="cx('showMore')"
        *ngIf="showMore"
        (click)="state.toggleShowMore()"
        [disabled]="!state.canToggleShowMore"
      >
        {{state.isShowingMore ? showLessLabel : showMoreLabel}}
      </button>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { showMoreLabel: [{
            type: Input
        }], showLessLabel: [{
            type: Input
        }], searchPlaceholder: [{
            type: Input
        }], searchable: [{
            type: Input
        }], attribute: [{
            type: Input
        }], operator: [{
            type: Input
        }], limit: [{
            type: Input
        }], showMore: [{
            type: Input
        }], showMoreLimit: [{
            type: Input
        }], sortBy: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisFacetsSearch {
    constructor() {
        this.cx = bem('SearchBox');
        this.searchQuery = '';
    }
    handleChange(value) {
        this.searchQuery = value;
        this.search(value);
    }
    handleSubmit(event) {
        event.preventDefault();
        this.search(this.searchQuery);
    }
}
NgAisFacetsSearch.ɵfac = function NgAisFacetsSearch_Factory(t) { return new (t || NgAisFacetsSearch)(); };
NgAisFacetsSearch.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisFacetsSearch, selectors: [["ais-facets-search"]], inputs: { searchPlaceholder: "searchPlaceholder", search: "search" }, decls: 9, vars: 14, consts: [["novalidate", "", 3, "submit"], ["autocapitalize", "off", "autocorrect", "off", "role", "textbox", "spellcheck", "false", "type", "text", 3, "placeholder", "value", "input"], ["title", "Submit the search query.", "type", "submit"], ["viewBox", "0 0 40 40", "width", "10", "height", "10", 3, "ngClass"], ["d", "M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"], ["type", "reset", "title", "Clear the search query.", "hidden", ""], ["viewBox", "0 0 20 20", "width", "10", "height", "10", 3, "ngClass"], ["d", "M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z"]], template: function NgAisFacetsSearch_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "form", 0);
        ɵngcc0.ɵɵlistener("submit", function NgAisFacetsSearch_Template_form_submit_1_listener($event) { return ctx.handleSubmit($event); });
        ɵngcc0.ɵɵelementStart(2, "input", 1);
        ɵngcc0.ɵɵlistener("input", function NgAisFacetsSearch_Template_input_input_2_listener($event) { return ctx.handleChange($event.target.value); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "button", 2);
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(4, "svg", 3);
        ɵngcc0.ɵɵelement(5, "path", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵnamespaceHTML();
        ɵngcc0.ɵɵelementStart(6, "button", 5);
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(7, "svg", 6);
        ɵngcc0.ɵɵelement(8, "path", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("form"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("input"));
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx.searchPlaceholder);
        ɵngcc0.ɵɵproperty("value", ctx.searchQuery);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("submit"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.cx("submitIcon"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("reset"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.cx("resetIcon"));
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
NgAisFacetsSearch.propDecorators = {
    searchPlaceholder: [{ type: Input }],
    search: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisFacetsSearch, [{
        type: Component,
        args: [{
                selector: 'ais-facets-search',
                template: `
    <div [class]="cx()">
      <form
        [class]="cx('form')"
        (submit)="handleSubmit($event)"
        novalidate
      >
        <input
          [class]="cx('input')"
          autocapitalize="off"
          autocorrect="off"
          placeholder="{{searchPlaceholder}}"
          role="textbox"
          spellcheck="false"
          type="text"
          [value]="searchQuery"
          (input)="handleChange($event.target.value)"
        />

        <button
          [class]="cx('submit')"
          title="Submit the search query."
          type="submit"
        >
          <svg
            [ngClass]="cx('submitIcon')"
            viewBox="0 0 40 40"
            width="10"
            height="10"
          >
            <path d="M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"></path>
          </svg>
        </button>

        <button
          [class]="cx('reset')"
          type="reset"
          title="Clear the search query."
          hidden
        >
          <svg
            [ngClass]="cx('resetIcon')"
            viewBox="0 0 20 20"
            width="10"
            height="10"
          >
            <path d="M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z"></path>
          </svg>
        </button>
      </form>
    </div>
  `
            }]
    }], function () { return []; }, { searchPlaceholder: [{
            type: Input
        }], search: [{
            type: Input
        }] }); })();

class NgAisRefinementListModule {
}
NgAisRefinementListModule.ɵfac = function NgAisRefinementListModule_Factory(t) { return new (t || NgAisRefinementListModule)(); };
NgAisRefinementListModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisRefinementListModule });
NgAisRefinementListModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, NgAisHighlightModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRefinementListModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisRefinementList, NgAisFacetsSearch],
                entryComponents: [NgAisRefinementList],
                exports: [NgAisRefinementList],
                imports: [CommonModule, NgAisHighlightModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisRefinementListModule, { declarations: function () { return [NgAisRefinementList, NgAisFacetsSearch]; }, imports: function () { return [CommonModule, NgAisHighlightModule]; }, exports: function () { return [NgAisRefinementList]; } }); })();

class NgAisSearchBox extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('SearchBox');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.placeholder = 'Search';
        this.submitTitle = 'Submit';
        this.resetTitle = 'Reset';
        this.searchAsYouType = true;
        this.autofocus = false;
        // Output events
        // form
        this.submit = new EventEmitter();
        this.reset = new EventEmitter();
        // input
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
        this.blur = new EventEmitter();
        this.state = {
            query: '',
            refine: noop,
            clear: noop,
            isSearchStalled: false,
        };
        this.createWidget(connectSearchBox, {});
    }
    ngAfterViewInit() {
        if (this.autofocus) {
            this.searchBox.nativeElement.focus();
        }
    }
    handleChange(query) {
        this.change.emit(query);
        if (this.searchAsYouType) {
            this.state.refine(query);
        }
    }
    handleSubmit(event) {
        // send submit event to parent component
        this.submit.emit(event);
        event.preventDefault();
        if (!this.searchAsYouType) {
            this.state.refine(this.searchBox.nativeElement.value);
        }
    }
    handleReset(event) {
        // send reset event to parent component
        this.reset.emit(event);
        // reset search
        this.state.refine('');
    }
}
NgAisSearchBox.ɵfac = function NgAisSearchBox_Factory(t) { return new (t || NgAisSearchBox)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisSearchBox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisSearchBox, selectors: [["ais-search-box"]], viewQuery: function NgAisSearchBox_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c3, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchBox = _t.first);
    } }, inputs: { placeholder: "placeholder", submitTitle: "submitTitle", resetTitle: "resetTitle", searchAsYouType: "searchAsYouType", autofocus: "autofocus" }, outputs: { submit: "submit", reset: "reset", change: "change", focus: "focus", blur: "blur" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 17, consts: [["novalidate", "", 3, "submit"], ["autocapitalize", "off", "autocorrect", "off", "role", "textbox", "spellcheck", "false", "type", "text", 3, "placeholder", "value", "input", "focus", "blur"], ["searchBox", ""], ["type", "submit", 3, "title"], ["viewBox", "0 0 40 40", "width", "40", "height", "40", 3, "ngClass"], ["d", "M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"], ["type", "reset", 3, "title", "hidden", "click"], ["viewBox", "0 0 20 20", "width", "20", "height", "20", 3, "ngClass"], ["d", "M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z"]], template: function NgAisSearchBox_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "form", 0);
        ɵngcc0.ɵɵlistener("submit", function NgAisSearchBox_Template_form_submit_1_listener($event) { return ctx.handleSubmit($event); });
        ɵngcc0.ɵɵelementStart(2, "input", 1, 2);
        ɵngcc0.ɵɵlistener("input", function NgAisSearchBox_Template_input_input_2_listener($event) { return ctx.handleChange($event.target.value); })("focus", function NgAisSearchBox_Template_input_focus_2_listener($event) { return ctx.focus.emit($event); })("blur", function NgAisSearchBox_Template_input_blur_2_listener($event) { return ctx.blur.emit($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "button", 3);
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(5, "svg", 4);
        ɵngcc0.ɵɵelement(6, "path", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵnamespaceHTML();
        ɵngcc0.ɵɵelementStart(7, "button", 6);
        ɵngcc0.ɵɵlistener("click", function NgAisSearchBox_Template_button_click_7_listener($event) { return ctx.handleReset($event); });
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(8, "svg", 7);
        ɵngcc0.ɵɵelement(9, "path", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("form"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("input"));
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx.placeholder);
        ɵngcc0.ɵɵproperty("value", ctx.state.query);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("submit"));
        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.submitTitle);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.cx("submitIcon"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("reset"));
        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.resetTitle);
        ɵngcc0.ɵɵproperty("hidden", !ctx.state.query || ctx.state.query && !ctx.state.query.trim());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.cx("resetIcon"));
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
NgAisSearchBox.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisSearchBox.propDecorators = {
    searchBox: [{ type: ViewChild, args: ['searchBox', { static: false },] }],
    placeholder: [{ type: Input }],
    submitTitle: [{ type: Input }],
    resetTitle: [{ type: Input }],
    searchAsYouType: [{ type: Input }],
    autofocus: [{ type: Input }],
    submit: [{ type: Output }],
    reset: [{ type: Output }],
    change: [{ type: Output }],
    focus: [{ type: Output }],
    blur: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisSearchBox, [{
        type: Component,
        args: [{
                selector: 'ais-search-box',
                template: `
    <div [class]="cx()">
      <form
        [class]="cx('form')"
        novalidate
        (submit)="handleSubmit($event)"
      >
        <input
          [class]="cx('input')"
          autocapitalize="off"
          autocorrect="off"
          placeholder="{{placeholder}}"
          role="textbox"
          spellcheck="false"
          type="text"
          [value]="state.query"
          (input)="handleChange($event.target.value)"
          (focus)="focus.emit($event)"
          (blur)="blur.emit($event)"
          #searchBox
        />

        <button
          [class]="cx('submit')"
          type="submit"
          title="{{submitTitle}}"
        >
          <svg
            [ngClass]="cx('submitIcon')"
            viewBox="0 0 40 40"
            width="40"
            height="40"
          >
            <path d="M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"></path>
          </svg>
        </button>

        <button
          [class]="cx('reset')"
          type="reset"
          title="{{resetTitle}}"
          (click)="handleReset($event)"
          [hidden]="!state.query || (state.query && !state.query.trim())">
          <svg
            [ngClass]="cx('resetIcon')"
            viewBox="0 0 20 20"
            width="20"
            height="20"
          >
            <path d="M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z"></path>
          </svg>
        </button>
      </form>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { placeholder: [{
            type: Input
        }], submitTitle: [{
            type: Input
        }], resetTitle: [{
            type: Input
        }], searchAsYouType: [{
            type: Input
        }], autofocus: [{
            type: Input
        }], submit: [{
            type: Output
        }], reset: [{
            type: Output
        }], change: [{
            type: Output
        }], focus: [{
            type: Output
        }], blur: [{
            type: Output
        }], searchBox: [{
            type: ViewChild,
            args: ['searchBox', { static: false }]
        }] }); })();

class NgAisSearchBoxModule {
}
NgAisSearchBoxModule.ɵfac = function NgAisSearchBoxModule_Factory(t) { return new (t || NgAisSearchBoxModule)(); };
NgAisSearchBoxModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisSearchBoxModule });
NgAisSearchBoxModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisSearchBoxModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisSearchBox],
                entryComponents: [NgAisSearchBox],
                exports: [NgAisSearchBox],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisSearchBoxModule, { declarations: function () { return [NgAisSearchBox]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisSearchBox]; } }); })();

class NgAisSortBy extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('SortBy');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.state = {
            currentRefinement: null,
            options: [],
            refine: noop,
            hasNoResults: false,
        };
    }
    ngOnInit() {
        this.createWidget(connectSortBy, {
            items: this.items,
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
}
NgAisSortBy.ɵfac = function NgAisSortBy_Factory(t) { return new (t || NgAisSortBy)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisSortBy.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisSortBy, selectors: [["ais-sort-by"]], inputs: { items: "items", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 5, consts: [[3, "change"], [3, "class", "value", "selected", 4, "ngFor", "ngForOf"], [3, "value", "selected"]], template: function NgAisSortBy_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "select", 0);
        ɵngcc0.ɵɵlistener("change", function NgAisSortBy_Template_select_change_1_listener($event) { return ctx.state.refine($event.target.value); });
        ɵngcc0.ɵɵtemplate(2, NgAisSortBy_option_2_Template, 2, 5, "option", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("select"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.state.options);
    } }, directives: [ɵngcc1.NgForOf], encapsulation: 2 });
NgAisSortBy.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisSortBy.propDecorators = {
    items: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisSortBy, [{
        type: Component,
        args: [{
                selector: 'ais-sort-by',
                template: `
    <div [class]="cx()">
      <select
        [class]="cx('select')"
        (change)="state.refine($event.target.value)"
      >
        <option
          [class]="cx('option')"
          *ngFor="let item of state.options"
          [value]="item.value"
          [selected]="item.value === state.currentRefinement"
        >
          {{item.label}}
        </option>
      </select>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { items: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisSortByModule {
}
NgAisSortByModule.ɵfac = function NgAisSortByModule_Factory(t) { return new (t || NgAisSortByModule)(); };
NgAisSortByModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisSortByModule });
NgAisSortByModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisSortByModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisSortBy],
                entryComponents: [NgAisSortBy],
                exports: [NgAisSortBy],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisSortByModule, { declarations: function () { return [NgAisSortBy]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisSortBy]; } }); })();

class NgAisRatingMenu extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('RatingMenu');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        // rendering options
        this.andUpLabel = '& Up';
        this.state = {
            createURL: () => '#',
            hasNoResults: false,
            items: [],
            refine: noop,
            canRefine: false,
            sendEvent: noop,
        };
    }
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    ngOnInit() {
        this.createWidget(connectRatingMenu, {
            attribute: this.attribute,
            max: parseNumberInput(this.max),
        });
        super.ngOnInit();
    }
    handleClick(event, value) {
        event.preventDefault();
        event.stopPropagation();
        this.state.refine(value);
    }
}
NgAisRatingMenu.ɵfac = function NgAisRatingMenu_Factory(t) { return new (t || NgAisRatingMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisRatingMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisRatingMenu, selectors: [["ais-rating-menu"]], inputs: { andUpLabel: "andUpLabel", attribute: "attribute", max: "max" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[3, "ngClass", 4, "ngIf"], [3, "ngClass"], [2, "display", "none"], ["id", "ais-StarRating-starSymbol", "viewBox", "0 0 24 24"], ["d", "M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z"], ["id", "ais-StarRating-starEmptySymbol", "viewBox", "0 0 24 24"], ["d", "M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z"], [3, "class", "click", 4, "ngFor", "ngForOf"], [3, "click"], [3, "href", "click"], ["width", "24", "height", "24", "aria-hidden", "true", 3, "ngClass", 4, "ngFor", "ngForOf"], ["aria-hidden", "true"], ["width", "24", "height", "24", "aria-hidden", "true", 3, "ngClass"], [0, "xlink", "href", "#ais-StarRating-starSymbol", 4, "ngIf"], [0, "xlink", "href", "#ais-StarRating-starEmptySymbol", 4, "ngIf"], [0, "xlink", "href", "#ais-StarRating-starSymbol"], [0, "xlink", "href", "#ais-StarRating-starEmptySymbol"]], template: function NgAisRatingMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgAisRatingMenu_div_0_Template, 8, 7, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgForOf], encapsulation: 2 });
NgAisRatingMenu.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisRatingMenu.propDecorators = {
    andUpLabel: [{ type: Input }],
    attribute: [{ type: Input }],
    max: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRatingMenu, [{
        type: Component,
        args: [{
                selector: 'ais-rating-menu',
                template: `
    <div
      [ngClass]="[
        cx(),
        state.items.length === 0 ? cx('', 'noRefinement') : ''
      ]"
      *ngIf="!isHidden"
    >
      <svg style="display:none;">
        <symbol
          id="ais-StarRating-starSymbol"
          viewBox="0 0 24 24"
        >
          <path d="M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z"/>
        </symbol>
        <symbol
          id="ais-StarRating-starEmptySymbol"
          viewBox="0 0 24 24"
        >
          <path d="M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z"/>
        </symbol>
      </svg>

      <ul [class]="cx('list')">
        <li
          *ngFor="let item of state.items"
          [class]="getItemClass(item)"
          (click)="handleClick($event, item.value)"
        >
          <a
            href="{{state.createURL(item.value)}}"
            [class]="cx('link')"
            (click)="handleClick($event, item.value)"
          >
            <svg
              width="24"
              height="24"
              *ngFor="let star of item.stars"
              [ngClass]="cx('starIcon') + ' ' + (star ? cx('starIcon', 'full') : cx('starIcon', 'empty'))"
              aria-hidden="true"
            >
              <use
                *ngIf="star"
                xlink:href="#ais-StarRating-starSymbol"
              >
              </use>

              <use
                *ngIf="!star"
                xlink:href="#ais-StarRating-starEmptySymbol"
              >
              </use>
            </svg>

            <span [class]="cx('label')" aria-hidden="true">{{andUpLabel}}</span>
            <span [class]="cx('count')">{{item.count}}</span>
          </a>
        </li>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { andUpLabel: [{
            type: Input
        }], attribute: [{
            type: Input
        }], max: [{
            type: Input
        }] }); })();

class NgAisRatingMenuModule {
}
NgAisRatingMenuModule.ɵfac = function NgAisRatingMenuModule_Factory(t) { return new (t || NgAisRatingMenuModule)(); };
NgAisRatingMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisRatingMenuModule });
NgAisRatingMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRatingMenuModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisRatingMenu],
                entryComponents: [NgAisRatingMenu],
                exports: [NgAisRatingMenu],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisRatingMenuModule, { declarations: function () { return [NgAisRatingMenu]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisRatingMenu]; } }); })();

class NgAisStats extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('Stats');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.state = {
            nbHits: 0,
            nbPages: 0,
            page: 0,
            processingTimeMS: 0,
            query: '',
            areHitsSorted: false,
        };
        this.createWidget(connectStats, {});
    }
    get templateContext() {
        return { state: this.state };
    }
}
NgAisStats.ɵfac = function NgAisStats_Factory(t) { return new (t || NgAisStats)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisStats.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisStats, selectors: [["ais-stats"]], contentQueries: function NgAisStats_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 5, consts: [[4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "class", 4, "ngIf"]], template: function NgAisStats_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵtemplate(1, NgAisStats_ng_container_1_Template, 1, 0, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(2, NgAisStats_span_2_Template, 2, 4, "span", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template)("ngTemplateOutletContext", ctx.templateContext);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf], encapsulation: 2 });
NgAisStats.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisStats.propDecorators = {
    template: [{ type: ContentChild, args: [TemplateRef, { static: false },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisStats, [{
        type: Component,
        args: [{
                selector: 'ais-stats',
                template: `
    <div [class]="cx()">
      <ng-container *ngTemplateOutlet="template; context: templateContext">
      </ng-container>

      <span *ngIf="!template" [class]="cx('text')">
        {{state.nbHits}} results found in {{state.processingTimeMS}}ms.
      </span>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { template: [{
            type: ContentChild,
            args: [TemplateRef, { static: false }]
        }] }); })();

class NgAisStatsModule {
}
NgAisStatsModule.ɵfac = function NgAisStatsModule_Factory(t) { return new (t || NgAisStatsModule)(); };
NgAisStatsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisStatsModule });
NgAisStatsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisStatsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisStats],
                entryComponents: [NgAisStats],
                exports: [NgAisStats],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisStatsModule, { declarations: function () { return [NgAisStats]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisStats]; } }); })();

class NgAisToggle extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('ToggleRefinement');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.state = {
            canRefine: false,
            sendEvent: undefined,
            value: {
                count: undefined,
                isRefined: false,
                name: '',
                offFacetValue: undefined,
                onFacetValue: undefined,
            },
            createURL: () => '#',
            refine: noop,
        };
    }
    ngOnInit() {
        this.createWidget(connectToggleRefinement, {
            attribute: this.attribute,
            on: this.on,
            off: this.off,
        });
        super.ngOnInit();
    }
    handleChange(event) {
        event.preventDefault();
        event.stopPropagation();
        this.state.refine(this.state.value);
    }
}
NgAisToggle.ɵfac = function NgAisToggle_Factory(t) { return new (t || NgAisToggle)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisToggle, selectors: [["ais-toggle"]], inputs: { label: "label", attribute: "attribute", on: "on", off: "off" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 7, vars: 14, consts: [["type", "checkbox", 3, "value", "checked", "change"]], template: function NgAisToggle_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "label");
        ɵngcc0.ɵɵelementStart(2, "input", 0);
        ɵngcc0.ɵɵlistener("change", function NgAisToggle_Template_input_change_2_listener($event) { return ctx.handleChange($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "span");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "span");
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("label"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("checkbox"));
        ɵngcc0.ɵɵpropertyInterpolate("value", ctx.state.value.name);
        ɵngcc0.ɵɵproperty("checked", ctx.state.value.isRefined);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("labelText"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.label || ctx.state.value.name, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("count"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.state.value.count);
    } }, encapsulation: 2 });
NgAisToggle.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisToggle.propDecorators = {
    label: [{ type: Input }],
    attribute: [{ type: Input }],
    on: [{ type: Input }],
    off: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisToggle, [{
        type: Component,
        args: [{
                selector: 'ais-toggle',
                template: `
    <div [class]='cx()'>
      <label [class]="cx('label')">
        <input
          [class]="cx('checkbox')"
          type='checkbox'
          value='{{state.value.name}}'
          [checked]='state.value.isRefined'
          (change)='handleChange($event)'
        />

        <span [class]="cx('labelText')">
          {{label || state.value.name}}
        </span>

        <span [class]="cx('count')">{{state.value.count}}</span>
      </label>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { label: [{
            type: Input
        }], attribute: [{
            type: Input
        }], on: [{
            type: Input
        }], off: [{
            type: Input
        }] }); })();

class NgAisToggleModule {
}
NgAisToggleModule.ɵfac = function NgAisToggleModule_Factory(t) { return new (t || NgAisToggleModule)(); };
NgAisToggleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisToggleModule });
NgAisToggleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisToggleModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisToggle],
                entryComponents: [NgAisToggle],
                exports: [NgAisToggle],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisToggleModule, { declarations: function () { return [NgAisToggle]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisToggle]; } }); })();

class NgAisRangeInput extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('RangeInput');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        // rendering options
        this.currency = '$';
        this.separator = 'to';
        this.submitLabel = 'Go';
        this.precision = 0;
        this.state = {
            range: { min: undefined, max: undefined },
            refine: noop,
            start: [0, 0],
            // TODO: use canRefine & format
            canRefine: false,
            format: {
                from: () => '',
                to: () => '',
            },
            sendEvent: undefined,
        };
    }
    get step() {
        const precision = parseNumberInput(this.precision);
        return 1 / Math.pow(10, precision);
    }
    get canRefine() {
        return this.state.range.min !== this.state.range.max;
    }
    ngOnInit() {
        this.createWidget(connectRange, {
            attribute: this.attribute,
            max: parseNumberInput(this.max),
            min: parseNumberInput(this.min),
            precision: parseNumberInput(this.precision),
        });
        super.ngOnInit();
    }
    handleChange(event, type) {
        const value = parseNumberInput(event.target.value);
        if (type === 'min') {
            this.minInputValue = value;
        }
        else {
            this.maxInputValue = value;
        }
    }
    handleSubmit(event) {
        event.preventDefault();
        this.state.refine([this.minInputValue, this.maxInputValue]);
    }
}
NgAisRangeInput.ɵfac = function NgAisRangeInput_Factory(t) { return new (t || NgAisRangeInput)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisRangeInput.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisRangeInput, selectors: [["ais-range-input"]], inputs: { currency: "currency", separator: "separator", submitLabel: "submitLabel", precision: "precision", attribute: "attribute", min: "min", max: "max" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 40, consts: [[3, "ngClass"], ["novalidate", "", 3, "submit"], ["type", "number", 3, "ngClass", "min", "max", "placeholder", "value", "step", "change"], [3, "click"]], template: function NgAisRangeInput_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "form", 1);
        ɵngcc0.ɵɵlistener("submit", function NgAisRangeInput_Template_form_submit_1_listener($event) { return ctx.handleSubmit($event); });
        ɵngcc0.ɵɵelementStart(2, "label");
        ɵngcc0.ɵɵelementStart(3, "span");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "input", 2);
        ɵngcc0.ɵɵlistener("change", function NgAisRangeInput_Template_input_change_5_listener($event) { return ctx.handleChange($event, "min"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "span");
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "label");
        ɵngcc0.ɵɵelementStart(9, "span");
        ɵngcc0.ɵɵtext(10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "input", 2);
        ɵngcc0.ɵɵlistener("change", function NgAisRangeInput_Template_input_change_11_listener($event) { return ctx.handleChange($event, "max"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "button", 3);
        ɵngcc0.ɵɵlistener("click", function NgAisRangeInput_Template_button_click_12_listener($event) { return ctx.handleSubmit($event); });
        ɵngcc0.ɵɵtext(13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(31, _c1, ctx.cx(), !ctx.canRefine ? ctx.cx("", "noRefinement") : ""));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("form"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("label"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("currency"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.currency);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(34, _c1, ctx.cx("input"), ctx.cx("input", "min")))("min", ctx.state.range.min)("max", ctx.state.range.max)("placeholder", ctx.state.range.min)("value", ctx.minInputValue)("step", ctx.step);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("separator"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.separator);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("label"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("currency"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.currency);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(37, _c1, ctx.cx("input"), ctx.cx("input", "max")))("min", ctx.state.range.min)("max", ctx.state.range.max)("placeholder", ctx.state.range.max)("value", ctx.maxInputValue)("step", ctx.step);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("submit"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.submitLabel, " ");
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
NgAisRangeInput.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisRangeInput.propDecorators = {
    currency: [{ type: Input }],
    separator: [{ type: Input }],
    submitLabel: [{ type: Input }],
    attribute: [{ type: Input }],
    min: [{ type: Input }],
    max: [{ type: Input }],
    precision: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRangeInput, [{
        type: Component,
        args: [{
                selector: 'ais-range-input',
                template: `
    <div [ngClass]="[
        cx(),
        !canRefine ? cx('', 'noRefinement') : ''
      ]">
      <form
        [class]="cx('form')"
        (submit)="handleSubmit($event)"
        novalidate
      >
        <label [class]="cx('label')">
          <span [class]="cx('currency')">{{currency}}</span>
          <input
            [ngClass]="[
              cx('input'),
              cx('input', 'min')
            ]"
            type="number"
            [min]="state.range.min"
            [max]="state.range.max"
            [placeholder]="state.range.min"
            [value]="minInputValue"
            [step]="step"
            (change)="handleChange($event, 'min')"
          />
        </label>

        <span [class]="cx('separator')">{{separator}}</span>

        <label [class]="cx('label')">
          <span [class]="cx('currency')">{{currency}}</span>
          <input
            [ngClass]="[
              cx('input'),
              cx('input', 'max')
            ]"
            type="number"
            [min]="state.range.min"
            [max]="state.range.max"
            [placeholder]="state.range.max"
            [value]="maxInputValue"
            [step]="step"
            (change)="handleChange($event, 'max')"
          />
        </label>

        <button
          [class]="cx('submit')"
          (click)="handleSubmit($event)"
        >
          {{submitLabel}}
        </button>
      </form>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { currency: [{
            type: Input
        }], separator: [{
            type: Input
        }], submitLabel: [{
            type: Input
        }], precision: [{
            type: Input
        }], attribute: [{
            type: Input
        }], min: [{
            type: Input
        }], max: [{
            type: Input
        }] }); })();

class NgAisRangeInputModule {
}
NgAisRangeInputModule.ɵfac = function NgAisRangeInputModule_Factory(t) { return new (t || NgAisRangeInputModule)(); };
NgAisRangeInputModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisRangeInputModule });
NgAisRangeInputModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRangeInputModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisRangeInput],
                entryComponents: [NgAisRangeInput],
                exports: [NgAisRangeInput],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisRangeInputModule, { declarations: function () { return [NgAisRangeInput]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisRangeInput]; } }); })();

class NgAisPanel {
}
NgAisPanel.ɵfac = function NgAisPanel_Factory(t) { return new (t || NgAisPanel)(); };
NgAisPanel.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisPanel, selectors: [["ais-panel"]], inputs: { header: "header", footer: "footer" }, ngContentSelectors: _c0, decls: 5, vars: 2, consts: [[1, "ais-Panel"], ["class", "ais-Panel-header", 4, "ngIf"], [1, "ais-Panel-body"], ["class", "ais-Panel-footer", 4, "ngIf"], [1, "ais-Panel-header"], [1, "ais-Panel-footer"]], template: function NgAisPanel_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, NgAisPanel_div_1_Template, 2, 1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(4, NgAisPanel_div_4_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.header);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.footer);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
NgAisPanel.propDecorators = {
    header: [{ type: Input }],
    footer: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisPanel, [{
        type: Component,
        args: [{
                selector: 'ais-panel',
                template: `
    <div class="ais-Panel">
      <div *ngIf="header" class="ais-Panel-header">
        {{header}}
      </div>

      <div class="ais-Panel-body">
        <ng-content></ng-content>
      </div>

      <div *ngIf="footer" class="ais-Panel-footer">
        {{footer}}
      </div>
    </div>
  `
            }]
    }], null, { header: [{
            type: Input
        }], footer: [{
            type: Input
        }] }); })();

class NgAisPanelModule {
}
NgAisPanelModule.ɵfac = function NgAisPanelModule_Factory(t) { return new (t || NgAisPanelModule)(); };
NgAisPanelModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisPanelModule });
NgAisPanelModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisPanelModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisPanel],
                entryComponents: [NgAisPanel],
                exports: [NgAisPanel],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisPanelModule, { declarations: function () { return [NgAisPanel]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisPanel]; } }); })();

class NgAisConfigure extends TypedBaseWidget {
    constructor(differs, parentIndex, instantSearchInstance) {
        super('Configure');
        this.differs = differs;
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.state = {
            refine: noop,
        };
    }
    set searchParameters(values) {
        this.internalSearchParameters = values;
        if (!this.differ && values) {
            this.differ = this.differs.find(values).create();
        }
    }
    ngOnInit() {
        this.createWidget(connectConfigure, {
            searchParameters: this.internalSearchParameters,
        });
        super.ngOnInit();
    }
    ngDoCheck() {
        if (this.differ) {
            const changes = this.differ.diff(this.internalSearchParameters);
            if (changes) {
                this.state.refine(this.internalSearchParameters);
            }
        }
    }
}
NgAisConfigure.ɵfac = function NgAisConfigure_Factory(t) { return new (t || NgAisConfigure)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisConfigure.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisConfigure, selectors: [["ais-configure"]], inputs: { searchParameters: "searchParameters" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function NgAisConfigure_Template(rf, ctx) { }, encapsulation: 2 });
NgAisConfigure.ctorParameters = () => [
    { type: KeyValueDiffers },
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisConfigure.propDecorators = {
    searchParameters: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisConfigure, [{
        type: Component,
        args: [{
                selector: 'ais-configure',
                template: ''
            }]
    }], function () { return [{ type: ɵngcc0.KeyValueDiffers }, { type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { searchParameters: [{
            type: Input
        }] }); })();

class NgAisConfigureModule {
}
NgAisConfigureModule.ɵfac = function NgAisConfigureModule_Factory(t) { return new (t || NgAisConfigureModule)(); };
NgAisConfigureModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisConfigureModule });
NgAisConfigureModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisConfigureModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisConfigure],
                entryComponents: [NgAisConfigure],
                exports: [NgAisConfigure],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisConfigureModule, { declarations: function () { return [NgAisConfigure]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisConfigure]; } }); })();

class NgAisConfigureRelatedItems extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('ExperimentalConfigureRelatedItems');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
    }
    ngOnInit() {
        this.createWidget(EXPERIMENTAL_connectConfigureRelatedItems, {
            hit: this.hit,
            matchingPatterns: this.matchingPatterns,
            transformSearchParameters: this.transformSearchParameters,
        });
        super.ngOnInit();
    }
}
NgAisConfigureRelatedItems.ɵfac = function NgAisConfigureRelatedItems_Factory(t) { return new (t || NgAisConfigureRelatedItems)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisConfigureRelatedItems.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisConfigureRelatedItems, selectors: [["ais-experimental-configure-related-items"]], inputs: { hit: "hit", matchingPatterns: "matchingPatterns", transformSearchParameters: "transformSearchParameters" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function NgAisConfigureRelatedItems_Template(rf, ctx) { }, encapsulation: 2 });
NgAisConfigureRelatedItems.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisConfigureRelatedItems.propDecorators = {
    hit: [{ type: Input }],
    matchingPatterns: [{ type: Input }],
    transformSearchParameters: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisConfigureRelatedItems, [{
        type: Component,
        args: [{
                selector: 'ais-experimental-configure-related-items',
                template: ''
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { hit: [{
            type: Input
        }], matchingPatterns: [{
            type: Input
        }], transformSearchParameters: [{
            type: Input
        }] }); })();

class NgAisConfigureRelatedItemsModule {
}
NgAisConfigureRelatedItemsModule.ɵfac = function NgAisConfigureRelatedItemsModule_Factory(t) { return new (t || NgAisConfigureRelatedItemsModule)(); };
NgAisConfigureRelatedItemsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisConfigureRelatedItemsModule });
NgAisConfigureRelatedItemsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisConfigureRelatedItemsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisConfigureRelatedItems],
                entryComponents: [NgAisConfigureRelatedItems],
                exports: [NgAisConfigureRelatedItems],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisConfigureRelatedItemsModule, { declarations: function () { return [NgAisConfigureRelatedItems]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisConfigureRelatedItems]; } }); })();

class NgAisQueryRuleCustomData extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('QueryRuleCustomData');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.state = {
            items: [],
        };
    }
    get templateContext() {
        return {
            items: this.state.items,
        };
    }
    ngOnInit() {
        this.createWidget(connectQueryRules, {
            transformItems: this.transformItems,
        });
        super.ngOnInit();
    }
}
NgAisQueryRuleCustomData.ɵfac = function NgAisQueryRuleCustomData_Factory(t) { return new (t || NgAisQueryRuleCustomData)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisQueryRuleCustomData.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisQueryRuleCustomData, selectors: [["ais-query-rule-custom-data"]], contentQueries: function NgAisQueryRuleCustomData_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 5, consts: [[4, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngIf"], [4, "ngFor", "ngForOf"]], template: function NgAisQueryRuleCustomData_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵtemplate(1, NgAisQueryRuleCustomData_ng_container_1_Template, 1, 0, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(2, NgAisQueryRuleCustomData_div_2_Template, 2, 1, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template)("ngTemplateOutletContext", ctx.templateContext);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf, ɵngcc1.NgForOf], pipes: [ɵngcc1.JsonPipe], encapsulation: 2 });
NgAisQueryRuleCustomData.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisQueryRuleCustomData.propDecorators = {
    template: [{ type: ContentChild, args: [TemplateRef, { static: false },] }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisQueryRuleCustomData, [{
        type: Component,
        args: [{
                selector: 'ais-query-rule-custom-data',
                template: `
    <div [class]='cx()'>
      <ng-container *ngTemplateOutlet='template; context: templateContext'>
      </ng-container>

      <div *ngIf='!template'>
        <div *ngFor='let item of state.items'>
          <pre>{{ item | json }}</pre>
        </div>
      </div>
    </div>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { template: [{
            type: ContentChild,
            args: [TemplateRef, { static: false }]
        }], transformItems: [{
            type: Input
        }] }); })();

class NgAisQueryRuleCustomDataModule {
}
NgAisQueryRuleCustomDataModule.ɵfac = function NgAisQueryRuleCustomDataModule_Factory(t) { return new (t || NgAisQueryRuleCustomDataModule)(); };
NgAisQueryRuleCustomDataModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisQueryRuleCustomDataModule });
NgAisQueryRuleCustomDataModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisQueryRuleCustomDataModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisQueryRuleCustomData],
                entryComponents: [NgAisQueryRuleCustomData],
                exports: [NgAisQueryRuleCustomData],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisQueryRuleCustomDataModule, { declarations: function () { return [NgAisQueryRuleCustomData]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisQueryRuleCustomData]; } }); })();

class NgAisQueryRuleContext extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance) {
        super('QueryRuleContext');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
    }
    ngOnInit() {
        this.createWidget(connectQueryRules, {
            trackedFilters: this.trackedFilters,
            transformRuleContexts: this.transformRuleContexts,
        });
        super.ngOnInit();
    }
}
NgAisQueryRuleContext.ɵfac = function NgAisQueryRuleContext_Factory(t) { return new (t || NgAisQueryRuleContext)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch))); };
NgAisQueryRuleContext.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisQueryRuleContext, selectors: [["ais-query-rule-context"]], inputs: { trackedFilters: "trackedFilters", transformRuleContexts: "transformRuleContexts" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function NgAisQueryRuleContext_Template(rf, ctx) { }, encapsulation: 2 });
NgAisQueryRuleContext.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] }
];
NgAisQueryRuleContext.propDecorators = {
    trackedFilters: [{ type: Input }],
    transformRuleContexts: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisQueryRuleContext, [{
        type: Component,
        args: [{
                selector: 'ais-query-rule-context',
                template: ''
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }]; }, { trackedFilters: [{
            type: Input
        }], transformRuleContexts: [{
            type: Input
        }] }); })();

class NgAisQueryRuleContextModule {
}
NgAisQueryRuleContextModule.ɵfac = function NgAisQueryRuleContextModule_Factory(t) { return new (t || NgAisQueryRuleContextModule)(); };
NgAisQueryRuleContextModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisQueryRuleContextModule });
NgAisQueryRuleContextModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisQueryRuleContextModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisQueryRuleContext],
                entryComponents: [NgAisQueryRuleContext],
                exports: [NgAisQueryRuleContext],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisQueryRuleContextModule, { declarations: function () { return [NgAisQueryRuleContext]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisQueryRuleContext]; } }); })();

class NgAisVoiceSearch extends TypedBaseWidget {
    constructor(parentIndex, instantSearchInstance, zone) {
        super('VoiceSearch');
        this.parentIndex = parentIndex;
        this.instantSearchInstance = instantSearchInstance;
        this.zone = zone;
        // rendering options
        this.buttonTitle = 'Search by voice';
        this.disabledButtonTitle = 'Search by voice (not supported on this browser)';
        this.state = {
            isBrowserSupported: undefined,
            isListening: undefined,
            toggleListening: noop,
            voiceListeningState: {
                status: 'initial',
                transcript: '',
                isSpeechFinal: false,
                errorCode: undefined,
            },
        };
        this.templateContext = {
            status: 'initial',
            errorCode: undefined,
            transcript: '',
            isSpeechFinal: false,
            isListening: false,
            isBrowserSupported: false,
        };
        this.handleClick = (event) => {
            event.currentTarget.blur();
            this.state.toggleListening();
        };
        this.isNotAllowedError = () => this.state.voiceListeningState.status === 'error' &&
            this.state.voiceListeningState.errorCode === 'not-allowed';
        this.updateState = (state) => {
            this.zone.run(() => {
                this.templateContext = {
                    status: state.voiceListeningState.status,
                    errorCode: state.voiceListeningState.errorCode,
                    transcript: state.voiceListeningState.transcript,
                    isSpeechFinal: state.voiceListeningState.isSpeechFinal,
                    isListening: state.isListening,
                    isBrowserSupported: state.isBrowserSupported,
                };
                this.state = state;
            });
        };
    }
    ngOnInit() {
        this.createWidget(connectVoiceSearch, {
            searchAsYouSpeak: this.searchAsYouSpeak,
        });
        super.ngOnInit();
    }
}
NgAisVoiceSearch.ɵfac = function NgAisVoiceSearch_Factory(t) { return new (t || NgAisVoiceSearch)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisIndex), 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgAisInstantSearch)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
NgAisVoiceSearch.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgAisVoiceSearch, selectors: [["ais-voice-search"]], contentQueries: function NgAisVoiceSearch_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c4, 5);
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c5, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.button = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.status = _t.first);
    } }, inputs: { buttonTitle: "buttonTitle", disabledButtonTitle: "disabledButtonTitle", searchAsYouSpeak: "searchAsYouSpeak" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 12, consts: [["type", "button", 3, "title", "disabled", "click"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["defaultButton", ""], ["defaultStatus", ""], ["xmlns", "http://www.w3.org/2000/svg", "width", "16", "height", "16", "viewBox", "0 0 24 24", "fill", "none", "stroke", "currentColor", "strokeWidth", "2", "strokeLinecap", "round", "strokeLinejoin", "round"], [4, "ngIf", "ngIfThen", "ngIfElse"], ["errorSvgContent", ""], ["normalSvgContent", ""], ["x1", "1", "y1", "1", "x2", "23", "y2", "23"], ["d", "M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"], ["d", "M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"], ["x1", "12", "y1", "19", "x2", "12", "y2", "23"], ["x1", "8", "y1", "23", "x2", "16", "y2", "23"], ["d", "M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"], ["d", "M19 10v2a7 7 0 0 1-14 0v-2"]], template: function NgAisVoiceSearch_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "button", 0);
        ɵngcc0.ɵɵlistener("click", function NgAisVoiceSearch_Template_button_click_1_listener($event) { return ctx.handleClick($event); });
        ɵngcc0.ɵɵtemplate(2, NgAisVoiceSearch_ng_container_2_Template, 1, 0, "ng-container", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div");
        ɵngcc0.ɵɵtemplate(4, NgAisVoiceSearch_ng_container_4_Template, 1, 0, "ng-container", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, NgAisVoiceSearch_ng_template_5_Template, 6, 3, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(7, NgAisVoiceSearch_ng_template_7_Template, 2, 1, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r2 = ɵngcc0.ɵɵreference(6);
        const _r4 = ɵngcc0.ɵɵreference(8);
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("button"));
        ɵngcc0.ɵɵproperty("title", ctx.state.isBrowserSupported ? ctx.buttonTitle : ctx.disabledButtonTitle)("disabled", !ctx.state.isBrowserSupported);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.button ? ctx.button : _r2)("ngTemplateOutletContext", ctx.templateContext);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx("status"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.status ? ctx.status : _r4)("ngTemplateOutletContext", ctx.templateContext);
    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf], encapsulation: 2 });
NgAisVoiceSearch.ctorParameters = () => [
    { type: NgAisIndex, decorators: [{ type: Inject, args: [forwardRef(() => NgAisIndex),] }, { type: Optional }] },
    { type: NgAisInstantSearch, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch),] }] },
    { type: NgZone }
];
NgAisVoiceSearch.propDecorators = {
    button: [{ type: ContentChild, args: ['button', { static: false },] }],
    status: [{ type: ContentChild, args: ['status', { static: false },] }],
    buttonTitle: [{ type: Input }],
    disabledButtonTitle: [{ type: Input }],
    searchAsYouSpeak: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisVoiceSearch, [{
        type: Component,
        args: [{
                selector: 'ais-voice-search',
                template: `
    <div [class]="cx()">
      <button
        type="button"
        [class]="cx('button')"
        [title]="state.isBrowserSupported ? buttonTitle : disabledButtonTitle"
        [disabled]="!state.isBrowserSupported"
        (click)="handleClick($event)"
      >
        <ng-container *ngTemplateOutlet="button ? button : defaultButton; context: templateContext"></ng-container>
      </button>
      <div [class]="cx('status')">
        <ng-container *ngTemplateOutlet="status ? status : defaultStatus; context: templateContext"></ng-container>
      </div>
    </div>

    <ng-template #defaultButton let-status="status" let-errorCode="errorCode" let-isListening="isListening">
      <svg
        xmlns='http://www.w3.org/2000/svg'
        width='16'
        height='16'
        viewBox='0 0 24 24'
        fill='none'
        stroke='currentColor'
        strokeWidth='2'
        strokeLinecap='round'
        strokeLinejoin='round'
      >
        <ng-container *ngIf="isNotAllowedError(); then errorSvgContent else normalSvgContent">
        </ng-container>
        <ng-template #errorSvgContent>
          <line x1="1" y1="1" x2="23" y2="23"></line>
          <path d="M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"></path>
          <path d="M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"></path>
          <line x1="12" y1="19" x2="12" y2="23"></line>
          <line x1="8" y1="23" x2="16" y2="23"></line>
        </ng-template>
        <ng-template #normalSvgContent>
          <path
            d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"
            [attr.fill]="isListening ? 'currentColor' : 'none'"
          ></path>
          <path d="M19 10v2a7 7 0 0 1-14 0v-2"></path>
          <line x1="12" y1="19" x2="12" y2="23"></line>
          <line x1="8" y1="23" x2="16" y2="23"></line>
        </ng-template>
      </svg>
    </ng-template>
    <ng-template #defaultStatus let-transcript="transcript">
      <p>{{transcript}}</p>
    </ng-template>
  `
            }]
    }], function () { return [{ type: NgAisIndex, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisIndex)]
            }, {
                type: Optional
            }] }, { type: NgAisInstantSearch, decorators: [{
                type: Inject,
                args: [forwardRef(() => NgAisInstantSearch)]
            }] }, { type: ɵngcc0.NgZone }]; }, { buttonTitle: [{
            type: Input
        }], disabledButtonTitle: [{
            type: Input
        }], button: [{
            type: ContentChild,
            args: ['button', { static: false }]
        }], status: [{
            type: ContentChild,
            args: ['status', { static: false }]
        }], searchAsYouSpeak: [{
            type: Input
        }] }); })();

class NgAisVoiceSearchModule {
}
NgAisVoiceSearchModule.ɵfac = function NgAisVoiceSearchModule_Factory(t) { return new (t || NgAisVoiceSearchModule)(); };
NgAisVoiceSearchModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisVoiceSearchModule });
NgAisVoiceSearchModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisVoiceSearchModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisVoiceSearch],
                entryComponents: [NgAisVoiceSearch],
                exports: [NgAisVoiceSearch],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisVoiceSearchModule, { declarations: function () { return [NgAisVoiceSearch]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisVoiceSearch]; } }); })();

// compatibility with different typescript settings:
// - esModuleInterop
// - allowSyntheticDefaultImports
const algoliasearch = (typeof algoliasearchProxy.default === 'function'
    ? algoliasearchProxy.default
    : algoliasearchProxy);
const encode = encodeProxy.default || encodeProxy;
function createSSRSearchClient({ appId, apiKey, httpClient, HttpHeaders, transferState, makeStateKey, options = {}, }) {
    // A custom network request needs to be done, using TransferState of Angular.
    // This is done to make sure the request done backend for SSR doesn't get
    // made again frontend during hydration.
    // For compatibility with both v3 and v4 of algoliasearch, we are overriding the
    // network request function in two places:
    // v4: custom "requester"
    // v3: override "_request" on the prototype
    // since neither v3 uses the requester argument, and v4 use the _request, we
    // can safely do this without checking the version
    const searchClient = algoliasearch(appId, apiKey, Object.assign(Object.assign({}, options), { requester: {
            send({ headers, method, url, data }) {
                const transferStateKey = makeStateKey(`ngais(${data})`);
                if (transferState.hasKey(transferStateKey)) {
                    const response = JSON.parse(transferState.get(transferStateKey, JSON.stringify({})));
                    return Promise.resolve({
                        status: response.status,
                        content: JSON.stringify(response.body),
                        isTimedOut: false,
                    });
                }
                return new Promise((resolve, reject) => {
                    httpClient
                        .request(method, url, {
                        headers,
                        body: data,
                        observe: 'response',
                    })
                        .subscribe(response => {
                        transferState.set(transferStateKey, JSON.stringify(response));
                        resolve({
                            status: response.status,
                            content: JSON.stringify(response.body),
                            isTimedOut: false,
                        });
                    }, response => reject({
                        status: response.status,
                        body: response.body,
                    }));
                });
            },
        } }));
    searchClient.addAlgoliaAgent(`angular (${VERSION$1.full})`);
    searchClient.addAlgoliaAgent(`angular-instantsearch (${VERSION})`);
    searchClient.addAlgoliaAgent(`angular-instantsearch-server (${VERSION})`);
    searchClient._request = (rawUrl, options) => {
        let headers = new HttpHeaders();
        headers = headers.set('content-type', options.method === 'POST'
            ? 'application/x-www-form-urlencoded'
            : 'application/json');
        headers = headers.set('accept', 'application/json');
        const url = rawUrl + (rawUrl.includes('?') ? '&' : '?') + encode(options.headers);
        const transferStateKey = makeStateKey(`ngais(${options.body})`);
        if (transferState.hasKey(transferStateKey)) {
            const response = JSON.parse(transferState.get(transferStateKey, JSON.stringify({})));
            return Promise.resolve({
                statusCode: response.status,
                body: response.body,
                headers: response.headers,
            });
        }
        return new Promise((resolve, reject) => {
            httpClient
                .request(options.method, url, {
                headers,
                body: options.body,
                observe: 'response',
            })
                .subscribe(response => {
                transferState.set(transferStateKey, JSON.stringify(response));
                resolve({
                    statusCode: response.status,
                    body: response.body,
                    headers: response.headers,
                });
            }, response => reject({
                statusCode: response.status,
                body: response.body,
                headers: response.headers,
            }));
        });
    };
    return searchClient;
}

class BaseWidget {
    constructor(widgetName) {
        this.state = {};
        this.updateState = (state, isFirstRendering) => {
            if (isFirstRendering) {
                return Promise.resolve().then(() => {
                    this.state = state;
                });
            }
            this.state = state;
        };
        this.cx = bem(widgetName);
    }
    get parent() {
        if (this.parentIndex) {
            return this.parentIndex;
        }
        return this.instantSearchInstance;
    }
    createWidget(connector, options = {}) {
        this.widget = connector(this.updateState, noop)(options);
    }
    ngOnInit() {
        this.parent.addWidgets([this.widget]);
    }
    ngOnDestroy() {
        if (isPlatformBrowser(this.instantSearchInstance.platformId)) {
            this.parent.removeWidgets([this.widget]);
        }
    }
    /**
     * Helper to generate class names for an item
     * @param item element to generate a class name for
     */
    getItemClass(item) {
        const className = this.cx('item');
        if (item.isRefined) {
            return `${className} ${this.cx('item', 'selected')}`;
        }
        return className;
    }
}
BaseWidget.ɵfac = function BaseWidget_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };
BaseWidget.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseWidget, inputs: { autoHideContainer: "autoHideContainer" } });
BaseWidget.propDecorators = {
    autoHideContainer: [{ type: Input }]
};


const NGIS_MODULES = [
    NgAisInstantSearchModule,
    NgAisIndexModule,
    NgAisHitsModule,
    NgAisSearchBoxModule,
    NgAisClearRefinementsModule,
    NgAisMenuModule,
    NgAisPaginationModule,
    NgAisRefinementListModule,
    NgAisHitsPerPageModule,
    NgAisSortByModule,
    NgAisNumericMenuModule,
    NgAisStatsModule,
    NgAisToggleModule,
    NgAisInfiniteHitsModule,
    NgAisCurrentRefinementsModule,
    NgAisHierarchicalMenuModule,
    NgAisRatingMenuModule,
    NgAisRangeSliderModule,
    NgAisBreadcrumbModule,
    NgAisHighlightModule,
    NgAisRangeInputModule,
    NgAisPanelModule,
    NgAisConfigureModule,
    NgAisConfigureRelatedItemsModule,
    NgAisQueryRuleCustomDataModule,
    NgAisQueryRuleContextModule,
    NgAisVoiceSearchModule,
];
class NgAisRootModule {
}
NgAisRootModule.ɵfac = function NgAisRootModule_Factory(t) { return new (t || NgAisRootModule)(); };
NgAisRootModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisRootModule });
NgAisRootModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[NgAisInstantSearchModule.forRoot()], NgAisInstantSearchModule, NgAisIndexModule, NgAisHitsModule, NgAisSearchBoxModule, NgAisClearRefinementsModule, NgAisMenuModule, NgAisPaginationModule, NgAisRefinementListModule, NgAisHitsPerPageModule, NgAisSortByModule, NgAisNumericMenuModule, NgAisStatsModule, NgAisToggleModule, NgAisInfiniteHitsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisRatingMenuModule, NgAisRangeSliderModule, NgAisBreadcrumbModule, NgAisHighlightModule, NgAisRangeInputModule, NgAisPanelModule, NgAisConfigureModule, NgAisConfigureRelatedItemsModule, NgAisQueryRuleCustomDataModule, NgAisQueryRuleContextModule, NgAisVoiceSearchModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRootModule, [{
        type: NgModule,
        args: [{
                exports: NGIS_MODULES,
                imports: [NgAisInstantSearchModule.forRoot()]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisRootModule, { imports: [NgAisInstantSearchModule], exports: [NgAisInstantSearchModule, NgAisIndexModule, NgAisHitsModule, NgAisSearchBoxModule, NgAisClearRefinementsModule, NgAisMenuModule, NgAisPaginationModule, NgAisRefinementListModule, NgAisHitsPerPageModule, NgAisSortByModule, NgAisNumericMenuModule, NgAisStatsModule, NgAisToggleModule, NgAisInfiniteHitsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisRatingMenuModule, NgAisRangeSliderModule, NgAisBreadcrumbModule, NgAisHighlightModule, NgAisRangeInputModule, NgAisPanelModule, NgAisConfigureModule, NgAisConfigureRelatedItemsModule, NgAisQueryRuleCustomDataModule, NgAisQueryRuleContextModule, NgAisVoiceSearchModule] }); })();
class NgAisModule {
    static forRoot() {
        return { ngModule: NgAisRootModule };
    }
}
NgAisModule.ɵfac = function NgAisModule_Factory(t) { return new (t || NgAisModule)(); };
NgAisModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgAisModule });
NgAisModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [NGIS_MODULES, NgAisInstantSearchModule, NgAisIndexModule, NgAisHitsModule, NgAisSearchBoxModule, NgAisClearRefinementsModule, NgAisMenuModule, NgAisPaginationModule, NgAisRefinementListModule, NgAisHitsPerPageModule, NgAisSortByModule, NgAisNumericMenuModule, NgAisStatsModule, NgAisToggleModule, NgAisInfiniteHitsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisRatingMenuModule, NgAisRangeSliderModule, NgAisBreadcrumbModule, NgAisHighlightModule, NgAisRangeInputModule, NgAisPanelModule, NgAisConfigureModule, NgAisConfigureRelatedItemsModule, NgAisQueryRuleCustomDataModule, NgAisQueryRuleContextModule, NgAisVoiceSearchModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisModule, [{
        type: NgModule,
        args: [{ imports: NGIS_MODULES, exports: NGIS_MODULES }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisModule, { imports: [NgAisInstantSearchModule, NgAisIndexModule, NgAisHitsModule, NgAisSearchBoxModule, NgAisClearRefinementsModule, NgAisMenuModule, NgAisPaginationModule, NgAisRefinementListModule, NgAisHitsPerPageModule, NgAisSortByModule, NgAisNumericMenuModule, NgAisStatsModule, NgAisToggleModule, NgAisInfiniteHitsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisRatingMenuModule, NgAisRangeSliderModule, NgAisBreadcrumbModule, NgAisHighlightModule, NgAisRangeInputModule, NgAisPanelModule, NgAisConfigureModule, NgAisConfigureRelatedItemsModule, NgAisQueryRuleCustomDataModule, NgAisQueryRuleContextModule, NgAisVoiceSearchModule], exports: [NgAisInstantSearchModule, NgAisIndexModule, NgAisHitsModule, NgAisSearchBoxModule, NgAisClearRefinementsModule, NgAisMenuModule, NgAisPaginationModule, NgAisRefinementListModule, NgAisHitsPerPageModule, NgAisSortByModule, NgAisNumericMenuModule, NgAisStatsModule, NgAisToggleModule, NgAisInfiniteHitsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisRatingMenuModule, NgAisRangeSliderModule, NgAisBreadcrumbModule, NgAisHighlightModule, NgAisRangeInputModule, NgAisPanelModule, NgAisConfigureModule, NgAisConfigureRelatedItemsModule, NgAisQueryRuleCustomDataModule, NgAisQueryRuleContextModule, NgAisVoiceSearchModule] }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { BaseWidget, NgAisBreadcrumbModule, NgAisClearRefinementsModule, NgAisConfigureModule, NgAisConfigureRelatedItemsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisHighlightModule, NgAisHitsModule, NgAisHitsPerPageModule, NgAisIndex, NgAisIndexModule, NgAisInfiniteHitsModule, NgAisInstantSearch, NgAisInstantSearchModule, NgAisMenuModule, NgAisModule, NgAisNumericMenuModule, NgAisPaginationModule, NgAisPanelModule, NgAisQueryRuleContextModule, NgAisQueryRuleCustomDataModule, NgAisRangeInputModule, NgAisRangeSliderModule, NgAisRatingMenuModule, NgAisRefinementListModule, NgAisRootModule, NgAisSearchBoxModule, NgAisSortByModule, NgAisStatsModule, NgAisToggleModule, NgAisVoiceSearchModule, TypedBaseWidget, createSSRSearchClient, NgAisPanel as ɵa, NgAisBreadcrumb as ɵb, NgAisVoiceSearch as ɵba, NgAisClearRefinements as ɵc, NgAisCurrentRefinements as ɵd, NgAisHierarchicalMenu as ɵe, NgAisHierarchicalMenuItem as ɵf, NgAisHitsPerPage as ɵg, NgAisHits as ɵh, NgAisHighlight as ɵi, NgAisInfiniteHits as ɵj, NgAisMenu as ɵk, NgAisNumericMenu as ɵl, NgAisPagination as ɵm, NgAisRangeSlider as ɵn, NgAisRefinementList as ɵo, NgAisFacetsSearch as ɵp, NgAisSearchBox as ɵq, NgAisSortBy as ɵr, NgAisRatingMenu as ɵs, NgAisStats as ɵt, NgAisToggle as ɵu, NgAisRangeInput as ɵv, NgAisConfigure as ɵw, NgAisConfigureRelatedItems as ɵx, NgAisQueryRuleCustomData as ɵy, NgAisQueryRuleContext as ɵz };

//# sourceMappingURL=angular-instantsearch.js.map