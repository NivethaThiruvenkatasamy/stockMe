import { QueryRulesConnectorParams, QueryRulesWidgetDescription, QueryRulesRenderState } from 'instantsearch.js/es/connectors/query-rules/connectQueryRules';
import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import * as ɵngcc0 from '@angular/core';
export declare class NgAisQueryRuleCustomData extends TypedBaseWidget<QueryRulesWidgetDescription, QueryRulesConnectorParams> {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    template: any;
    transformItems?: QueryRulesConnectorParams['transformItems'];
    state: QueryRulesRenderState;
    get templateContext(): {
        items: any[];
    };
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisQueryRuleCustomData, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisQueryRuleCustomData, "ais-query-rule-custom-data", never, { "transformItems": "transformItems"; }, {}, ["template"], never>;
}

//# sourceMappingURL=query-rule-custom-data.d.ts.map