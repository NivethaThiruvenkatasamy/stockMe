import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import { MenuConnectorParams, MenuWidgetDescription, MenuRenderState, MenuItem } from 'instantsearch.js/es/connectors/menu/connectMenu';
import * as ɵngcc0 from '@angular/core';
export declare class NgAisMenu extends TypedBaseWidget<MenuWidgetDescription, MenuConnectorParams> {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    showMoreLabel: string;
    showLessLabel: string;
    attribute: MenuConnectorParams['attribute'];
    showMore?: MenuConnectorParams['showMore'];
    limit?: MenuConnectorParams['limit'];
    showMoreLimit?: MenuConnectorParams['showMoreLimit'];
    sortBy?: MenuConnectorParams['sortBy'];
    transformItems?: MenuConnectorParams['transformItems'];
    state: MenuRenderState;
    get isHidden(): boolean;
    get showMoreClass(): string;
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    ngOnInit(): void;
    handleClick(event: MouseEvent, value: MenuItem['value']): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisMenu, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisMenu, "ais-menu", never, { "showMoreLabel": "showMoreLabel"; "showLessLabel": "showLessLabel"; "attribute": "attribute"; "showMore": "showMore"; "limit": "limit"; "showMoreLimit": "showMoreLimit"; "sortBy": "sortBy"; "transformItems": "transformItems"; }, {}, never, never>;
}

//# sourceMappingURL=menu.d.ts.map