{"version":3,"file":"base-widget.d.ts","sources":["base-widget.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, OnInit } from '@angular/core';\nimport { bem } from './utils';\nimport { NgAisInstantSearch } from './instantsearch/instantsearch';\nimport { NgAisIndex } from './index-widget/index-widget';\nimport { Widget as W } from 'instantsearch.js/es/types';\nimport { IndexWidget } from 'instantsearch.js/es/widgets/index/index';\nexport declare type Widget = W | IndexWidget;\nexport declare type Connector = (renderFn: (state: object, isFirstRendering: boolean) => void, unmountFn: () => void) => (widgetOptions?: object) => Widget;\nexport declare abstract class BaseWidget<TState extends Record<string, unknown> = {}> implements OnInit, OnDestroy {\n    autoHideContainer?: boolean;\n    widget?: Widget;\n    state?: TState;\n    cx: ReturnType<typeof bem>;\n    abstract instantSearchInstance: NgAisInstantSearch;\n    abstract parentIndex?: NgAisIndex;\n    constructor(widgetName: string);\n    get parent(): NgAisIndex | NgAisInstantSearch;\n    createWidget(connector: Connector, options?: object): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    updateState: (state: TState, isFirstRendering: boolean) => Promise<void> | void;\n    /**\n     * Helper to generate class names for an item\n     * @param item element to generate a class name for\n     */\n    getItemClass(item: {\n        isRefined?: boolean;\n    }): string;\n}\n"]}