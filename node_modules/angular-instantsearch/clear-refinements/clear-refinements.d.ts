import { ClearRefinementsConnectorParams, ClearRefinementsWidgetDescription, ClearRefinementsRenderState } from 'instantsearch.js/es/connectors/clear-refinements/connectClearRefinements';
import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import * as ɵngcc0 from '@angular/core';
export declare class NgAisClearRefinements extends TypedBaseWidget<ClearRefinementsWidgetDescription, ClearRefinementsConnectorParams> {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    resetLabel: string;
    includedAttributes: ClearRefinementsConnectorParams['includedAttributes'];
    excludedAttributes: ClearRefinementsConnectorParams['excludedAttributes'];
    transformItems?: ClearRefinementsConnectorParams['transformItems'];
    state: ClearRefinementsRenderState;
    get isHidden(): boolean;
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    ngOnInit(): void;
    handleClick(event: MouseEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisClearRefinements, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisClearRefinements, "ais-clear-refinements", never, { "resetLabel": "resetLabel"; "includedAttributes": "includedAttributes"; "excludedAttributes": "excludedAttributes"; "transformItems": "transformItems"; }, {}, never, never>;
}

//# sourceMappingURL=clear-refinements.d.ts.map