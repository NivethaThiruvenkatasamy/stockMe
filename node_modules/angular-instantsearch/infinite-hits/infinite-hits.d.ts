import { InfiniteHitsConnectorParams, InfiniteHitsWidgetDescription, InfiniteHitsRenderState } from 'instantsearch.js/es/connectors/infinite-hits/connectInfiniteHits';
import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import * as ɵngcc0 from '@angular/core';
export declare class NgAisInfiniteHits extends TypedBaseWidget<InfiniteHitsWidgetDescription, InfiniteHitsConnectorParams> {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    template?: any;
    escapeHTML: InfiniteHitsConnectorParams['escapeHTML'];
    showPrevious: InfiniteHitsConnectorParams['showPrevious'];
    showPreviousLabel: string;
    showMoreLabel: string;
    transformItems?: InfiniteHitsConnectorParams['transformItems'];
    state: InfiniteHitsRenderState;
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    ngOnInit(): void;
    showMoreHandler(event: MouseEvent): void;
    showPreviousHandler(event: MouseEvent): void;
    updateState: (state: any, isFirstRendering: boolean) => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisInfiniteHits, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisInfiniteHits, "ais-infinite-hits", never, { "showPrevious": "showPrevious"; "showPreviousLabel": "showPreviousLabel"; "showMoreLabel": "showMoreLabel"; "escapeHTML": "escapeHTML"; "transformItems": "transformItems"; }, {}, ["template"], never>;
}

//# sourceMappingURL=infinite-hits.d.ts.map