import { TypedBaseWidget } from '../typed-base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { NgAisIndex } from '../index-widget/index-widget';
import { SortByConnector, SortByConnectorParams, SortByWidgetDescription, SortByRenderState, SortByItem } from 'instantsearch.js/es/connectors/sort-by/connectSortBy';
import * as ɵngcc0 from '@angular/core';
export { SortByConnector, SortByConnectorParams, SortByWidgetDescription, SortByRenderState, SortByItem, };
export declare class NgAisSortBy extends TypedBaseWidget<SortByWidgetDescription, SortByConnectorParams> {
    parentIndex: NgAisIndex;
    instantSearchInstance: NgAisInstantSearch;
    items: SortByItem[];
    transformItems?: <U extends SortByItem>(items: SortByItem[]) => U[];
    state: SortByRenderState;
    constructor(parentIndex: NgAisIndex, instantSearchInstance: NgAisInstantSearch);
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgAisSortBy, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgAisSortBy, "ais-sort-by", never, { "items": "items"; "transformItems": "transformItems"; }, {}, never, never>;
}

//# sourceMappingURL=sort-by.d.ts.map