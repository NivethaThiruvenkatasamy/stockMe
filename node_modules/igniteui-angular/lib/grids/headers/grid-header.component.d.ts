import { ChangeDetectorRef, DoCheck, ElementRef, OnDestroy, TemplateRef } from '@angular/core';
import { SortingDirection } from '../../data-operations/sorting-expression.interface';
import { GridBaseAPIService } from '../api.service';
import { IgxColumnComponent } from '../columns/column.component';
import { IgxGridBaseDirective } from '../grid-base.directive';
import { IgxColumnResizingService } from '../resizing/resizing.service';
import { GridType } from '../common/grid.interface';
import { DisplayDensity } from '../../core/displayDensity';
/**
 * @hidden
 */
export declare class IgxGridHeaderComponent implements DoCheck, OnDestroy {
    gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>;
    colResizingService: IgxColumnResizingService;
    cdr: ChangeDetectorRef;
    private ref;
    column: IgxColumnComponent;
    density: DisplayDensity;
    /**
     * @hidden
     */
    protected defaultESFHeaderIconTemplate: TemplateRef<any>;
    /**
     * Returns the `aria-selected` of the header.
     */
    get ariaSelected(): boolean;
    get columnGroupStyle(): boolean;
    /**
     * @hidden
     * @internal
     */
    get cosyStyle(): boolean;
    /**
     * @hidden
     * @internal
     */
    get compactStyle(): boolean;
    get sortAscendingStyle(): boolean;
    get sortDescendingStyle(): boolean;
    get numberStyle(): boolean;
    get sortableStyle(): boolean;
    get selectableStyle(): boolean;
    get filterableStyle(): any;
    get sortedStyle(): boolean;
    get selectedStyle(): boolean;
    get height(): number;
    /**
     * @hidden
     */
    get esfIconTemplate(): any;
    get sorted(): boolean;
    get filterIconClassName(): "igx-excel-filter__icon--filtered" | "igx-excel-filter__icon";
    get selectable(): boolean;
    get selected(): boolean;
    get title(): string;
    get nativeElement(): HTMLElement;
    sortDirection: SortingDirection;
    private _destroy$;
    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>, colResizingService: IgxColumnResizingService, cdr: ChangeDetectorRef, ref: ElementRef<HTMLElement>);
    onClick(event: MouseEvent): void;
    /**
     * @hidden
     */
    onPinterEnter(): void;
    /**
     * @hidden
     */
    onPointerLeave(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    onFilteringIconClick(event: any): void;
    get grid(): any;
    onSortingIconClick(event: any): void;
    protected getSortDirection(): void;
    private triggerSort;
}
