import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { IgxGridFilterConditionPipe, IgxGridTransactionPipe, IgxGridNotGroupedPipe, IgxGridTopLevelColumns, IgxGridCellStylesPipe, IgxGridCellStyleClassesPipe, IgxGridPaginatorOptionsPipe, IgxHasVisibleColumnsPipe, IgxGridRowPinningPipe, IgxColumnActionEnabledPipe, IgxFilterActionColumnsPipe, IgxSortActionColumnsPipe, IgxGridDataMapperPipe, IgxStringReplacePipe, IgxGridTransactionStatePipe, IgxColumnFormatterPipe, IgxSummaryFormatterPipe, IgxGridAddRowPipe, IgxHeaderGroupWidthPipe, IgxGridRowClassesPipe, IgxGridRowStylesPipe, IgxHeaderGroupStylePipe } from './pipes';
export class IgxGridPipesModule {
}
IgxGridPipesModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    IgxGridFilterConditionPipe,
                    IgxGridTransactionPipe,
                    IgxGridNotGroupedPipe,
                    IgxGridTopLevelColumns,
                    IgxGridCellStylesPipe,
                    IgxGridCellStyleClassesPipe,
                    IgxGridPaginatorOptionsPipe,
                    IgxHasVisibleColumnsPipe,
                    IgxGridRowPinningPipe,
                    IgxColumnActionEnabledPipe,
                    IgxFilterActionColumnsPipe,
                    IgxSortActionColumnsPipe,
                    IgxGridDataMapperPipe,
                    IgxStringReplacePipe,
                    IgxGridTransactionStatePipe,
                    IgxGridAddRowPipe,
                    IgxColumnFormatterPipe,
                    IgxSummaryFormatterPipe,
                    IgxHeaderGroupWidthPipe,
                    IgxGridRowClassesPipe,
                    IgxGridRowStylesPipe,
                    IgxHeaderGroupStylePipe
                ],
                exports: [
                    IgxGridFilterConditionPipe,
                    IgxGridTransactionPipe,
                    IgxGridNotGroupedPipe,
                    IgxGridTopLevelColumns,
                    IgxGridCellStylesPipe,
                    IgxGridCellStyleClassesPipe,
                    IgxGridPaginatorOptionsPipe,
                    IgxHasVisibleColumnsPipe,
                    IgxGridRowPinningPipe,
                    IgxColumnActionEnabledPipe,
                    IgxFilterActionColumnsPipe,
                    IgxSortActionColumnsPipe,
                    IgxGridDataMapperPipe,
                    IgxStringReplacePipe,
                    IgxGridTransactionStatePipe,
                    IgxGridAddRowPipe,
                    IgxColumnFormatterPipe,
                    IgxSummaryFormatterPipe,
                    IgxHeaderGroupWidthPipe,
                    IgxGridRowClassesPipe,
                    IgxGridRowStylesPipe,
                    IgxHeaderGroupStylePipe
                ],
                imports: [
                    CommonModule
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1waXBlcy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvZ3JpZHMvY29tbW9uL2dyaWQtcGlwZXMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFDSCwwQkFBMEIsRUFDMUIsc0JBQXNCLEVBQ3RCLHFCQUFxQixFQUNyQixzQkFBc0IsRUFDdEIscUJBQXFCLEVBQ3JCLDJCQUEyQixFQUMzQiwyQkFBMkIsRUFDM0Isd0JBQXdCLEVBQ3hCLHFCQUFxQixFQUNyQiwwQkFBMEIsRUFDMUIsMEJBQTBCLEVBQzFCLHdCQUF3QixFQUN4QixxQkFBcUIsRUFDckIsb0JBQW9CLEVBQ3BCLDJCQUEyQixFQUMzQixzQkFBc0IsRUFDdEIsdUJBQXVCLEVBQ3ZCLGlCQUFpQixFQUNqQix1QkFBdUIsRUFDdkIscUJBQXFCLEVBQ3JCLG9CQUFvQixFQUNwQix1QkFBdUIsRUFDMUIsTUFBTSxTQUFTLENBQUM7QUF1RGpCLE1BQU0sT0FBTyxrQkFBa0I7OztZQXJEOUIsUUFBUSxTQUFDO2dCQUNOLFlBQVksRUFBRTtvQkFDViwwQkFBMEI7b0JBQzFCLHNCQUFzQjtvQkFDdEIscUJBQXFCO29CQUNyQixzQkFBc0I7b0JBQ3RCLHFCQUFxQjtvQkFDckIsMkJBQTJCO29CQUMzQiwyQkFBMkI7b0JBQzNCLHdCQUF3QjtvQkFDeEIscUJBQXFCO29CQUNyQiwwQkFBMEI7b0JBQzFCLDBCQUEwQjtvQkFDMUIsd0JBQXdCO29CQUN4QixxQkFBcUI7b0JBQ3JCLG9CQUFvQjtvQkFDcEIsMkJBQTJCO29CQUMzQixpQkFBaUI7b0JBQ2pCLHNCQUFzQjtvQkFDdEIsdUJBQXVCO29CQUN2Qix1QkFBdUI7b0JBQ3ZCLHFCQUFxQjtvQkFDckIsb0JBQW9CO29CQUNwQix1QkFBdUI7aUJBQzFCO2dCQUNELE9BQU8sRUFBRTtvQkFDTCwwQkFBMEI7b0JBQzFCLHNCQUFzQjtvQkFDdEIscUJBQXFCO29CQUNyQixzQkFBc0I7b0JBQ3RCLHFCQUFxQjtvQkFDckIsMkJBQTJCO29CQUMzQiwyQkFBMkI7b0JBQzNCLHdCQUF3QjtvQkFDeEIscUJBQXFCO29CQUNyQiwwQkFBMEI7b0JBQzFCLDBCQUEwQjtvQkFDMUIsd0JBQXdCO29CQUN4QixxQkFBcUI7b0JBQ3JCLG9CQUFvQjtvQkFDcEIsMkJBQTJCO29CQUMzQixpQkFBaUI7b0JBQ2pCLHNCQUFzQjtvQkFDdEIsdUJBQXVCO29CQUN2Qix1QkFBdUI7b0JBQ3ZCLHFCQUFxQjtvQkFDckIsb0JBQW9CO29CQUNwQix1QkFBdUI7aUJBQzFCO2dCQUNELE9BQU8sRUFBRTtvQkFDTCxZQUFZO2lCQUNmO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7XG4gICAgSWd4R3JpZEZpbHRlckNvbmRpdGlvblBpcGUsXG4gICAgSWd4R3JpZFRyYW5zYWN0aW9uUGlwZSxcbiAgICBJZ3hHcmlkTm90R3JvdXBlZFBpcGUsXG4gICAgSWd4R3JpZFRvcExldmVsQ29sdW1ucyxcbiAgICBJZ3hHcmlkQ2VsbFN0eWxlc1BpcGUsXG4gICAgSWd4R3JpZENlbGxTdHlsZUNsYXNzZXNQaXBlLFxuICAgIElneEdyaWRQYWdpbmF0b3JPcHRpb25zUGlwZSxcbiAgICBJZ3hIYXNWaXNpYmxlQ29sdW1uc1BpcGUsXG4gICAgSWd4R3JpZFJvd1Bpbm5pbmdQaXBlLFxuICAgIElneENvbHVtbkFjdGlvbkVuYWJsZWRQaXBlLFxuICAgIElneEZpbHRlckFjdGlvbkNvbHVtbnNQaXBlLFxuICAgIElneFNvcnRBY3Rpb25Db2x1bW5zUGlwZSxcbiAgICBJZ3hHcmlkRGF0YU1hcHBlclBpcGUsXG4gICAgSWd4U3RyaW5nUmVwbGFjZVBpcGUsXG4gICAgSWd4R3JpZFRyYW5zYWN0aW9uU3RhdGVQaXBlLFxuICAgIElneENvbHVtbkZvcm1hdHRlclBpcGUsXG4gICAgSWd4U3VtbWFyeUZvcm1hdHRlclBpcGUsXG4gICAgSWd4R3JpZEFkZFJvd1BpcGUsXG4gICAgSWd4SGVhZGVyR3JvdXBXaWR0aFBpcGUsXG4gICAgSWd4R3JpZFJvd0NsYXNzZXNQaXBlLFxuICAgIElneEdyaWRSb3dTdHlsZXNQaXBlLFxuICAgIElneEhlYWRlckdyb3VwU3R5bGVQaXBlXG59IGZyb20gJy4vcGlwZXMnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBJZ3hHcmlkRmlsdGVyQ29uZGl0aW9uUGlwZSxcbiAgICAgICAgSWd4R3JpZFRyYW5zYWN0aW9uUGlwZSxcbiAgICAgICAgSWd4R3JpZE5vdEdyb3VwZWRQaXBlLFxuICAgICAgICBJZ3hHcmlkVG9wTGV2ZWxDb2x1bW5zLFxuICAgICAgICBJZ3hHcmlkQ2VsbFN0eWxlc1BpcGUsXG4gICAgICAgIElneEdyaWRDZWxsU3R5bGVDbGFzc2VzUGlwZSxcbiAgICAgICAgSWd4R3JpZFBhZ2luYXRvck9wdGlvbnNQaXBlLFxuICAgICAgICBJZ3hIYXNWaXNpYmxlQ29sdW1uc1BpcGUsXG4gICAgICAgIElneEdyaWRSb3dQaW5uaW5nUGlwZSxcbiAgICAgICAgSWd4Q29sdW1uQWN0aW9uRW5hYmxlZFBpcGUsXG4gICAgICAgIElneEZpbHRlckFjdGlvbkNvbHVtbnNQaXBlLFxuICAgICAgICBJZ3hTb3J0QWN0aW9uQ29sdW1uc1BpcGUsXG4gICAgICAgIElneEdyaWREYXRhTWFwcGVyUGlwZSxcbiAgICAgICAgSWd4U3RyaW5nUmVwbGFjZVBpcGUsXG4gICAgICAgIElneEdyaWRUcmFuc2FjdGlvblN0YXRlUGlwZSxcbiAgICAgICAgSWd4R3JpZEFkZFJvd1BpcGUsXG4gICAgICAgIElneENvbHVtbkZvcm1hdHRlclBpcGUsXG4gICAgICAgIElneFN1bW1hcnlGb3JtYXR0ZXJQaXBlLFxuICAgICAgICBJZ3hIZWFkZXJHcm91cFdpZHRoUGlwZSxcbiAgICAgICAgSWd4R3JpZFJvd0NsYXNzZXNQaXBlLFxuICAgICAgICBJZ3hHcmlkUm93U3R5bGVzUGlwZSxcbiAgICAgICAgSWd4SGVhZGVyR3JvdXBTdHlsZVBpcGVcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgSWd4R3JpZEZpbHRlckNvbmRpdGlvblBpcGUsXG4gICAgICAgIElneEdyaWRUcmFuc2FjdGlvblBpcGUsXG4gICAgICAgIElneEdyaWROb3RHcm91cGVkUGlwZSxcbiAgICAgICAgSWd4R3JpZFRvcExldmVsQ29sdW1ucyxcbiAgICAgICAgSWd4R3JpZENlbGxTdHlsZXNQaXBlLFxuICAgICAgICBJZ3hHcmlkQ2VsbFN0eWxlQ2xhc3Nlc1BpcGUsXG4gICAgICAgIElneEdyaWRQYWdpbmF0b3JPcHRpb25zUGlwZSxcbiAgICAgICAgSWd4SGFzVmlzaWJsZUNvbHVtbnNQaXBlLFxuICAgICAgICBJZ3hHcmlkUm93UGlubmluZ1BpcGUsXG4gICAgICAgIElneENvbHVtbkFjdGlvbkVuYWJsZWRQaXBlLFxuICAgICAgICBJZ3hGaWx0ZXJBY3Rpb25Db2x1bW5zUGlwZSxcbiAgICAgICAgSWd4U29ydEFjdGlvbkNvbHVtbnNQaXBlLFxuICAgICAgICBJZ3hHcmlkRGF0YU1hcHBlclBpcGUsXG4gICAgICAgIElneFN0cmluZ1JlcGxhY2VQaXBlLFxuICAgICAgICBJZ3hHcmlkVHJhbnNhY3Rpb25TdGF0ZVBpcGUsXG4gICAgICAgIElneEdyaWRBZGRSb3dQaXBlLFxuICAgICAgICBJZ3hDb2x1bW5Gb3JtYXR0ZXJQaXBlLFxuICAgICAgICBJZ3hTdW1tYXJ5Rm9ybWF0dGVyUGlwZSxcbiAgICAgICAgSWd4SGVhZGVyR3JvdXBXaWR0aFBpcGUsXG4gICAgICAgIElneEdyaWRSb3dDbGFzc2VzUGlwZSxcbiAgICAgICAgSWd4R3JpZFJvd1N0eWxlc1BpcGUsXG4gICAgICAgIElneEhlYWRlckdyb3VwU3R5bGVQaXBlXG4gICAgXSxcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZVxuICAgIF1cbiAgfSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkUGlwZXNNb2R1bGUgeyB9XG4iXX0=