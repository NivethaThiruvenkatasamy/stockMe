import { CommonModule } from '@angular/common';
import { NgModule, Component, ViewChild, Output, EventEmitter, HostListener, HostBinding } from '@angular/core';
import { IgxCalendarComponent, IgxCalendarModule } from '../../calendar/public_api';
import { PickerInteractionMode } from '../../date-common/types';
import { IgxButtonModule } from '../../directives/button/button.directive';
import { IgxRippleModule } from '../../directives/ripple/ripple.directive';
/** @hidden */
export class IgxCalendarContainerComponent {
    constructor() {
        this.calendarClose = new EventEmitter();
        this.todaySelection = new EventEmitter();
        this.styleClass = 'igx-date-picker';
        this.vertical = false;
        this.mode = PickerInteractionMode.DropDown;
    }
    get dropdownCSS() {
        return this.mode === PickerInteractionMode.DropDown;
    }
    get verticalCSS() {
        return this.vertical && this.mode === PickerInteractionMode.Dialog;
    }
    onEscape(event) {
        event.preventDefault();
        this.calendarClose.emit();
    }
    get isReadonly() {
        return this.mode === PickerInteractionMode.Dialog;
    }
}
IgxCalendarContainerComponent.decorators = [
    { type: Component, args: [{
                selector: 'igx-calendar-container',
                template: "<ng-template #defaultPickerActions>\n    <div *ngIf=\"this.closeButtonLabel || this.todayButtonLabel\" class=\"igx-date-picker__buttons\">\n        <button #closeButton *ngIf=\"this.closeButtonLabel\" igxButton=\"flat\" igxRipple\n            (click)=\"this.calendarClose.emit({ owner: this })\">\n            {{ this.closeButtonLabel }}\n        </button>\n        <button #todayButton *ngIf=\"this.todayButtonLabel\" igxButton=\"flat\" igxRipple\n            (click)=\"this.todaySelection.emit({ owner: this })\">\n            {{ this.todayButtonLabel }}\n        </button>\n    </div>\n</ng-template>\n\n<igx-calendar></igx-calendar>\n<ng-container *ngTemplateOutlet=\"this.pickerActions?.template || defaultPickerActions; context: { $implicit: this.calendar }\">\n</ng-container>\n",
                styles: [':host {display: block;}']
            },] }
];
IgxCalendarContainerComponent.propDecorators = {
    calendar: [{ type: ViewChild, args: [IgxCalendarComponent, { static: true },] }],
    calendarClose: [{ type: Output }],
    todaySelection: [{ type: Output }],
    styleClass: [{ type: HostBinding, args: ['class.igx-date-picker',] }],
    dropdownCSS: [{ type: HostBinding, args: ['class.igx-date-picker--dropdown',] }],
    verticalCSS: [{ type: HostBinding, args: ['class.igx-date-picker--vertical',] }],
    onEscape: [{ type: HostListener, args: ['keydown.alt.arrowup', ['$event'],] }]
};
/** @hidden */
export class IgxCalendarContainerModule {
}
IgxCalendarContainerModule.decorators = [
    { type: NgModule, args: [{
                declarations: [IgxCalendarContainerComponent],
                entryComponents: [IgxCalendarContainerComponent],
                imports: [
                    CommonModule,
                    IgxButtonModule,
                    IgxRippleModule,
                    IgxCalendarModule
                ],
                exports: [IgxCalendarContainerComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9kYXRlLWNvbW1vbi9jYWxlbmRhci1jb250YWluZXIvY2FsZW5kYXItY29udGFpbmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoSCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUVwRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDM0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBRzNFLGNBQWM7QUFNZCxNQUFNLE9BQU8sNkJBQTZCO0lBTDFDO1FBVVcsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBa0IsQ0FBQztRQUduRCxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUFrQixDQUFDO1FBR3BELGVBQVUsR0FBRyxpQkFBaUIsQ0FBQztRQVkvQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBR2pCLFNBQUksR0FBRyxxQkFBcUIsQ0FBQyxRQUFRLENBQUM7SUFZakQsQ0FBQztJQXpCRyxJQUNXLFdBQVc7UUFDbEIsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLHFCQUFxQixDQUFDLFFBQVEsQ0FBQztJQUN4RCxDQUFDO0lBRUQsSUFDVyxXQUFXO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLHFCQUFxQixDQUFDLE1BQU0sQ0FBQztJQUN2RSxDQUFDO0lBU00sUUFBUSxDQUFDLEtBQUs7UUFDakIsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVELElBQVcsVUFBVTtRQUNqQixPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUsscUJBQXFCLENBQUMsTUFBTSxDQUFDO0lBQ3RELENBQUM7OztZQTFDSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHdCQUF3QjtnQkFFbEMsNnhCQUFnRDt5QkFEdkMseUJBQXlCO2FBRXJDOzs7dUJBRUksU0FBUyxTQUFDLG9CQUFvQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs0QkFHaEQsTUFBTTs2QkFHTixNQUFNO3lCQUdOLFdBQVcsU0FBQyx1QkFBdUI7MEJBR25DLFdBQVcsU0FBQyxpQ0FBaUM7MEJBSzdDLFdBQVcsU0FBQyxpQ0FBaUM7dUJBVzdDLFlBQVksU0FBQyxxQkFBcUIsRUFBRSxDQUFDLFFBQVEsQ0FBQzs7QUFXbkQsY0FBYztBQVlkLE1BQU0sT0FBTywwQkFBMEI7OztZQVh0QyxRQUFRLFNBQUM7Z0JBQ04sWUFBWSxFQUFFLENBQUMsNkJBQTZCLENBQUM7Z0JBQzdDLGVBQWUsRUFBRSxDQUFDLDZCQUE2QixDQUFDO2dCQUNoRCxPQUFPLEVBQUU7b0JBQ0wsWUFBWTtvQkFDWixlQUFlO29CQUNmLGVBQWU7b0JBQ2YsaUJBQWlCO2lCQUNwQjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQzthQUMzQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSwgQ29tcG9uZW50LCBWaWV3Q2hpbGQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBIb3N0TGlzdGVuZXIsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hDYWxlbmRhckNvbXBvbmVudCwgSWd4Q2FsZW5kYXJNb2R1bGUgfSBmcm9tICcuLi8uLi9jYWxlbmRhci9wdWJsaWNfYXBpJztcbmltcG9ydCB7IElCYXNlRXZlbnRBcmdzIH0gZnJvbSAnLi4vLi4vY29yZS91dGlscyc7XG5pbXBvcnQgeyBQaWNrZXJJbnRlcmFjdGlvbk1vZGUgfSBmcm9tICcuLi8uLi9kYXRlLWNvbW1vbi90eXBlcyc7XG5pbXBvcnQgeyBJZ3hCdXR0b25Nb2R1bGUgfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2J1dHRvbi9idXR0b24uZGlyZWN0aXZlJztcbmltcG9ydCB7IElneFJpcHBsZU1vZHVsZSB9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvcmlwcGxlL3JpcHBsZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSWd4UGlja2VyQWN0aW9uc0RpcmVjdGl2ZSB9IGZyb20gJy4uL3BpY2tlci1pY29ucy5jb21tb24nO1xuXG4vKiogQGhpZGRlbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdpZ3gtY2FsZW5kYXItY29udGFpbmVyJyxcbiAgICBzdHlsZXM6IFsnOmhvc3Qge2Rpc3BsYXk6IGJsb2NrO30nXSxcbiAgICB0ZW1wbGF0ZVVybDogJ2NhbGVuZGFyLWNvbnRhaW5lci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgSWd4Q2FsZW5kYXJDb250YWluZXJDb21wb25lbnQge1xuICAgIEBWaWV3Q2hpbGQoSWd4Q2FsZW5kYXJDb21wb25lbnQsIHsgc3RhdGljOiB0cnVlIH0pXG4gICAgcHVibGljIGNhbGVuZGFyOiBJZ3hDYWxlbmRhckNvbXBvbmVudDtcblxuICAgIEBPdXRwdXQoKVxuICAgIHB1YmxpYyBjYWxlbmRhckNsb3NlID0gbmV3IEV2ZW50RW1pdHRlcjxJQmFzZUV2ZW50QXJncz4oKTtcblxuICAgIEBPdXRwdXQoKVxuICAgIHB1YmxpYyB0b2RheVNlbGVjdGlvbiA9IG5ldyBFdmVudEVtaXR0ZXI8SUJhc2VFdmVudEFyZ3M+KCk7XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlneC1kYXRlLXBpY2tlcicpXG4gICAgcHVibGljIHN0eWxlQ2xhc3MgPSAnaWd4LWRhdGUtcGlja2VyJztcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LWRhdGUtcGlja2VyLS1kcm9wZG93bicpXG4gICAgcHVibGljIGdldCBkcm9wZG93bkNTUygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gUGlja2VySW50ZXJhY3Rpb25Nb2RlLkRyb3BEb3duO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LWRhdGUtcGlja2VyLS12ZXJ0aWNhbCcpXG4gICAgcHVibGljIGdldCB2ZXJ0aWNhbENTUygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmVydGljYWwgJiYgdGhpcy5tb2RlID09PSBQaWNrZXJJbnRlcmFjdGlvbk1vZGUuRGlhbG9nO1xuICAgIH1cblxuICAgIHB1YmxpYyB2ZXJ0aWNhbCA9IGZhbHNlO1xuICAgIHB1YmxpYyBjbG9zZUJ1dHRvbkxhYmVsOiBzdHJpbmc7XG4gICAgcHVibGljIHRvZGF5QnV0dG9uTGFiZWw6IHN0cmluZztcbiAgICBwdWJsaWMgbW9kZSA9IFBpY2tlckludGVyYWN0aW9uTW9kZS5Ecm9wRG93bjtcbiAgICBwdWJsaWMgcGlja2VyQWN0aW9uczogSWd4UGlja2VyQWN0aW9uc0RpcmVjdGl2ZTtcblxuICAgIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24uYWx0LmFycm93dXAnLCBbJyRldmVudCddKVxuICAgIHB1YmxpYyBvbkVzY2FwZShldmVudCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLmNhbGVuZGFyQ2xvc2UuZW1pdCgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaXNSZWFkb25seSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gUGlja2VySW50ZXJhY3Rpb25Nb2RlLkRpYWxvZztcbiAgICB9XG59XG5cbi8qKiBAaGlkZGVuICovXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW0lneENhbGVuZGFyQ29udGFpbmVyQ29tcG9uZW50XSxcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtJZ3hDYWxlbmRhckNvbnRhaW5lckNvbXBvbmVudF0sXG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb21tb25Nb2R1bGUsXG4gICAgICAgIElneEJ1dHRvbk1vZHVsZSxcbiAgICAgICAgSWd4UmlwcGxlTW9kdWxlLFxuICAgICAgICBJZ3hDYWxlbmRhck1vZHVsZVxuICAgIF0sXG4gICAgZXhwb3J0czogW0lneENhbGVuZGFyQ29udGFpbmVyQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hDYWxlbmRhckNvbnRhaW5lck1vZHVsZSB7IH1cbiJdfQ==